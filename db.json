{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/final-architecture.png","path":"images/final-architecture.png","modified":1,"renderable":0},{"_id":"source/images/stats.png","path":"images/stats.png","modified":1,"renderable":0},{"_id":"source/resume-cn/avatar.jpeg","path":"resume-cn/avatar.jpeg","modified":1,"renderable":0},{"_id":"source/images/redux-mobx.png","path":"images/redux-mobx.png","modified":1,"renderable":0},{"_id":"source/images/gPRC.svg","path":"images/gPRC.svg","modified":1,"renderable":0},{"_id":"themes/cactus/source/css/rtl.styl","path":"css/rtl.styl","modified":1,"renderable":1},{"_id":"themes/cactus/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/cactus/source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/cactus/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":1,"renderable":1},{"_id":"themes/cactus/source/images/favicon-192x192.png","path":"images/favicon-192x192.png","modified":1,"renderable":1},{"_id":"themes/cactus/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/cactus/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"source/images/gPRC-test-result.png","path":"images/gPRC-test-result.png","modified":1,"renderable":0},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff","path":"lib/vazir-font/Vazir-Black.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff2","path":"lib/vazir-font/Vazir-Black.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff","path":"lib/vazir-font/Vazir-Bold.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff2","path":"lib/vazir-font/Vazir-Bold.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff","path":"lib/vazir-font/Vazir-Light.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff2","path":"lib/vazir-font/Vazir-Light.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff","path":"lib/vazir-font/Vazir-Medium.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff2","path":"lib/vazir-font/Vazir-Medium.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff","path":"lib/vazir-font/Vazir-Thin.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff2","path":"lib/vazir-font/Vazir-Thin.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/font-face.css","path":"lib/vazir-font/font-face.css","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff","path":"lib/vazir-font/Vazir.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff2","path":"lib/vazir-font/Vazir.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/jquery/jquery.min.js","path":"lib/jquery/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.eot","path":"lib/vazir-font/Vazir-Black.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.ttf","path":"lib/vazir-font/Vazir-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.ttf","path":"lib/vazir-font/Vazir-Black.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.eot","path":"lib/vazir-font/Vazir-Bold.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.eot","path":"lib/vazir-font/Vazir-Light.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.ttf","path":"lib/vazir-font/Vazir-Light.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.ttf","path":"lib/vazir-font/Vazir-Thin.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.eot","path":"lib/vazir-font/Vazir-Medium.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.ttf","path":"lib/vazir-font/Vazir-Medium.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.eot","path":"lib/vazir-font/Vazir-Thin.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.ttf","path":"lib/vazir-font/Vazir.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.eot","path":"lib/vazir-font/Vazir.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/images/logo.png","path":"images/logo.png","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.eot","path":"lib/font-awesome/webfonts/fa-regular-400.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.ttf","path":"lib/font-awesome/webfonts/fa-regular-400.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff","path":"lib/font-awesome/webfonts/fa-regular-400.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/justified-gallery/css/justifiedGallery.min.css","path":"lib/justified-gallery/css/justifiedGallery.min.css","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/justified-gallery/js/jquery.justifiedGallery.min.js","path":"lib/justified-gallery/js/jquery.justifiedGallery.min.js","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff","path":"lib/font-awesome/webfonts/fa-brands-400.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.ttf","path":"lib/font-awesome/webfonts/fa-brands-400.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff","path":"lib/font-awesome/webfonts/fa-solid-900.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.svg","path":"lib/font-awesome/webfonts/fa-regular-400.svg","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.eot","path":"lib/font-awesome/webfonts/fa-brands-400.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGM-BoldItalic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.ttf","path":"lib/font-awesome/webfonts/fa-solid-900.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGL-BoldItalic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Italic.ttf","path":"lib/meslo-LG/MesloLGM-Italic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGS-BoldItalic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.eot","path":"lib/font-awesome/webfonts/fa-solid-900.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Bold.ttf","path":"lib/meslo-LG/MesloLGM-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Italic.ttf","path":"lib/meslo-LG/MesloLGL-Italic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Regular.ttf","path":"lib/meslo-LG/MesloLGM-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Italic.ttf","path":"lib/meslo-LG/MesloLGS-Italic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Regular.ttf","path":"lib/meslo-LG/MesloLGL-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Bold.ttf","path":"lib/meslo-LG/MesloLGS-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Regular.ttf","path":"lib/meslo-LG/MesloLGS-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Bold.ttf","path":"lib/meslo-LG/MesloLGL-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.svg","path":"lib/font-awesome/webfonts/fa-brands-400.svg","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.svg","path":"lib/font-awesome/webfonts/fa-solid-900.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/cactus/.gitignore","hash":"c5345a2c5fa6c136dbe2020a405e541b4755a259","modified":1556034346000},{"_id":"themes/cactus/.jshintrc","hash":"2548bd6ce44422edc7e6f9f68061ab47f26c4f57","modified":1556034346000},{"_id":"themes/cactus/LICENSE","hash":"346ece39a983b0e7858c11f785cd846cef9eb875","modified":1556034346000},{"_id":"themes/cactus/gulpfile.js","hash":"2bae290993507026a509665ee5a5326b616f8d68","modified":1556034346000},{"_id":"themes/cactus/README.md","hash":"859d11941c46be4f7b4a6d62297ccbeb4f732bc9","modified":1556034346000},{"_id":"themes/cactus/.stylintrc","hash":"eb5f48e83657928cb0cbee031373b2cd36ca0083","modified":1556034346000},{"_id":"themes/cactus/_config.yml","hash":"ef650d8039df2a178424d7e5105d11d8756c8622","modified":1568472443749},{"_id":"themes/cactus/package.json","hash":"5bbdbc429e9d46acf97baf7ac5654edde0781064","modified":1556034346000},{"_id":"source/.DS_Store","hash":"466ed4ceecb7f4b2751fa07cad7ac550e2a995c1","modified":1560297246000},{"_id":"themes/cactus/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1556034346000},{"_id":"themes/cactus/.git/config","hash":"c9a0b9fc0b92d2337dc125357f2bb7c648badb22","modified":1556034346000},{"_id":"themes/cactus/.git/index","hash":"1160d83161a3fc058640cefbebf76619bff8b7ea","modified":1601674543054},{"_id":"themes/cactus/.git/COMMIT_EDITMSG","hash":"9538914e935ee6babb3e669155e8a39324282787","modified":1601674543056},{"_id":"themes/cactus/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1556034319000},{"_id":"themes/cactus/.git/packed-refs","hash":"ccb3dc4d9c5b10449d268ff76fad2b20469f03ae","modified":1556034346000},{"_id":"themes/cactus/languages/es.yml","hash":"2b1fc8b0d636123e9ee39017fa20053bd1913a5a","modified":1556034346000},{"_id":"themes/cactus/languages/en.yml","hash":"ea91a271db1a49386f97955ed72b2a668e2aea5e","modified":1556034346000},{"_id":"themes/cactus/languages/ca.yml","hash":"b79dd2c21dc6697c635e92db1f661a4b8d5d2305","modified":1556034346000},{"_id":"themes/cactus/languages/default.yml","hash":"ea91a271db1a49386f97955ed72b2a668e2aea5e","modified":1556034346000},{"_id":"themes/cactus/languages/it.yml","hash":"62800bcae1f2d2454f87f4bcf4d7593848424f61","modified":1556034346000},{"_id":"themes/cactus/languages/fa.yml","hash":"63f32e50953af1c4bd0308a4fca5862b5287c2cb","modified":1556034346000},{"_id":"themes/cactus/languages/fr.yml","hash":"4fea266d3c522903f3eee4fffee6e66c44775005","modified":1556034346000},{"_id":"themes/cactus/languages/nl.yml","hash":"ac0573352ad2c737a7686bcca498b985e7bd6447","modified":1556034346000},{"_id":"themes/cactus/languages/pl.yml","hash":"8a2d6dc874d86c38d42c2c861c39590647b5d536","modified":1556034346000},{"_id":"themes/cactus/languages/pt-br.yml","hash":"4859aba788a050c2d5d0b997693b0c8c24b349f7","modified":1556034346000},{"_id":"themes/cactus/languages/ru.yml","hash":"81b57fcd1977ef534f4bf303dbc1b4710cc7f057","modified":1556034346000},{"_id":"themes/cactus/languages/vi.yml","hash":"f84893c3ec3e45875c90069e14b17ed3016ed973","modified":1556034346000},{"_id":"themes/cactus/languages/tr.yml","hash":"2702914007e6bade9d6861078c0e179ac05bf48c","modified":1556034346000},{"_id":"themes/cactus/languages/zh-TW.yml","hash":"2f4e050c9b35a67f4a7278cec3a949533c2ac16a","modified":1556034346000},{"_id":"themes/cactus/languages/zh-CN.yml","hash":"ca5582329d9721d58fe8504725108769080e9993","modified":1556034346000},{"_id":"themes/cactus/layout/archive.ejs","hash":"53de8817e37be01b3ba8fa5ca31b9cafa2f3c011","modified":1556034346000},{"_id":"themes/cactus/layout/layout.ejs","hash":"8504004f2ed78914f806c6699d9bd722318cbe56","modified":1556034346000},{"_id":"themes/cactus/layout/index.ejs","hash":"c53484094a7c30ab82b0ea984404157ab9711e71","modified":1556034346000},{"_id":"themes/cactus/scripts/merge-configs.js","hash":"2048c3415d96b17b9d84aa44bc0c25f1210525f8","modified":1556034346000},{"_id":"themes/cactus/layout/post.ejs","hash":"a7d164ce888a60cd3eddd9c04bc6762428fa66bb","modified":1556034346000},{"_id":"themes/cactus/scripts/page_title.js","hash":"fa662dbdb82779af1b95e35ed7ccdf4866a53dee","modified":1556034346000},{"_id":"themes/cactus/scripts/meta.js","hash":"fa6055a39851c9953d033e70c1614547b94dce60","modified":1556034346000},{"_id":"themes/cactus/scripts/thumbnail.js","hash":"df8829fd8c3119650037eba5ec11bdce06acff9d","modified":1556034346000},{"_id":"themes/cactus/layout/page.ejs","hash":"c5465d5315a7544aa466b01fd8cfb62917a8bb1d","modified":1556034346000},{"_id":"source/_posts/Analyzing-secure-logs-on-centos.md","hash":"e1454056d5ed5ebb1232bfafb606145b0943e2ff","modified":1573317366580},{"_id":"source/_posts/A-brief-introduction-of-gRPC-in-Typescript.md","hash":"510e1132ccb77327ec5b5700c503d732cf991c12","modified":1601946021023},{"_id":"source/_posts/Android-开发笔记-kotlin基础.md","hash":"4de71c6f5b59ce3fa09f0f42a154457048130350","modified":1567329581626},{"_id":"source/_posts/Android-开发笔记-Kodein.md","hash":"6ca84d718f47c73b4dc78c9dc53bcfa32c404dc4","modified":1570369220659},{"_id":"source/_posts/Android-开发笔记-常见布局方式.md","hash":"28def35b97cffe65ea8e0577c0c82b3e91538567","modified":1567092010495},{"_id":"source/_posts/Android-开发笔记-coroutines.md","hash":"c3417c975828b64db5b3373e6c99b30a2f961fd9","modified":1575279805633},{"_id":"source/_posts/Android-开发笔记-RecycleView.md","hash":"5fbc68a40f949d9c86dad8fcbc705f25f2f3a91d","modified":1566233384623},{"_id":"source/_posts/Android-开发笔记-常见的构架原则.md","hash":"b133ffcd96d1834b251844ee21a98e2bdee48853","modified":1568473944551},{"_id":"source/_posts/Express-Application-using-Typescript.md","hash":"675ae2755ddd76912236266d958529e7f354713a","modified":1577017590254},{"_id":"source/_posts/CPU-Intensive-Node-js.md","hash":"7c8fb1721becb5ec76b84d90b65f2382223f8941","modified":1570378065224},{"_id":"source/_posts/Mobx-vs-Mobx-State-Tree-MST.md","hash":"a2bee64b47b641ae023c37a1db222fe76371d022","modified":1561323811749},{"_id":"source/_posts/Postgresql-index-types-and-typical-use-case.md","hash":"36d907fbda616cee5d7782efd97b0105d68a29fd","modified":1572760261782},{"_id":"source/_posts/PostgreSQL服务器配置之常用连接和认证方式.md","hash":"2ada2121586710eda0733c3ca4141d33cb1aa0dc","modified":1564885668739},{"_id":"source/_posts/Graceful-shutdown-in-Node.md","hash":"0d0c477d7de530af3c19d49488c35e41175c46bc","modified":1593073228444},{"_id":"source/_posts/RoR-搭建web应用.md","hash":"61d91bc3a26f9660c04d61e694c31167f6f58161","modified":1588387607649},{"_id":"source/_posts/Sequelize为什么需要使用Maigration.md","hash":"01bae4bc1f6fe1fb90b23e4e995cc40f5627b782","modified":1556116452000},{"_id":"source/_posts/Redux-vs-Mobx比较.md","hash":"f90e89e0e8c24f87267ea29e6a404a9623ce6771","modified":1560471718000},{"_id":"source/_posts/Postgresql并发控制之事务隔离界别的总结.md","hash":"28ec2c1bb4c7764e7f12ed26009aa283a591336b","modified":1556931194000},{"_id":"source/_posts/Swift学习之算法.md","hash":"c15fe4d925f1d129329a907d1826e39a6d5075bc","modified":1576598699678},{"_id":"source/_posts/Setup-Charles-proxy-for-mobile-app.md","hash":"93fc32f0b77b5f81380f07424113ab0d3cfd6aae","modified":1603204567930},{"_id":"source/_posts/Vue-js组件通信模式.md","hash":"94bd6d64fead453c8748ea6814322c9781662451","modified":1555927935000},{"_id":"source/_posts/Useful-vi-commands.md","hash":"82c5851e36f11e501fb89cdf001212fc539f1d71","modified":1601946102950},{"_id":"source/_posts/Simple-summary-of-git-and-github-useful-tools.md","hash":"78f2482db35e8233b1087c102d5b28eab1e985b9","modified":1601946198998},{"_id":"source/_posts/Why-graphql.md","hash":"1225a817448e19a2d7475c47f626fa63685f329b","modified":1593845911769},{"_id":"source/_posts/aws-serverless相关issue总结.md","hash":"b711214310ca1ef000bb0cd78790ec24041b7916","modified":1586576345165},{"_id":"source/_posts/after-finishing-sos-project.md","hash":"a1a4245b241b5efb83b1e04a808e7f4e8b1d9653","modified":1556116407000},{"_id":"source/_posts/sequelize-关于warning-a-promise-was-created-but-was-not-returned-from-it.md","hash":"3ec9faace22aea9e6bda03fd1771ccb8b7306d2e","modified":1558190420000},{"_id":"source/_posts/jenkins-deploy-node-project.md","hash":"4c0777f6c9525c76826cf4bd03b7934fc73dea9c","modified":1596948776440},{"_id":"source/images/final-architecture.png","hash":"4f6f1b1541f93e62d7f4937f30605a35819bf7e9","modified":1568470413183},{"_id":"source/images/stats.png","hash":"36dd2c24b3905c505364f81df693737bddce1a01","modified":1560466752000},{"_id":"source/birthday/index.md","hash":"86dd38b0716155aee47fbafd86af8bfe317352d3","modified":1556285998000},{"_id":"source/birthday/index.html","hash":"fd575582a4ef049a3203a9440a173fed8e6b218d","modified":1556414906000},{"_id":"source/resume/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1561631840449},{"_id":"source/resume/index.html","hash":"3edf971f11df311d89be914ca17e394945ab5a8e","modified":1560298342000},{"_id":"source/resume/style.css","hash":"bfc15e851549bcf16b2bcf4f6e68e345d8509389","modified":1556007788000},{"_id":"source/about/index.md","hash":"f9150fe90dbc0ffae6f31340abffd750b5fc040c","modified":1558347817000},{"_id":"source/resume-cn/avatar.jpeg","hash":"28e4860ce91fdcd7cba36d1e748460963a298ab4","modified":1560175937000},{"_id":"source/resume-cn/index.html","hash":"729e6dfb0240cc2d96972ebb38d424f4da05cc75","modified":1561550995123},{"_id":"source/resume-cn/style.css","hash":"bfc15e851549bcf16b2bcf4f6e68e345d8509389","modified":1556007788000},{"_id":"source/images/redux-mobx.png","hash":"e501208fd57cca15f8c6f8d8e0bf84e87f28cdb2","modified":1559871770000},{"_id":"source/images/gPRC.svg","hash":"0736849feef0a4cda3d3f665ed96548c20dfe1a2","modified":1601942650440},{"_id":"themes/cactus/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1556034319000},{"_id":"themes/cactus/.git/logs/HEAD","hash":"d74534f447e364e344a4c7b430cd68a033815315","modified":1601674543058},{"_id":"themes/cactus/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1556034319000},{"_id":"themes/cactus/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1556034319000},{"_id":"themes/cactus/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1556034319000},{"_id":"themes/cactus/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1556034319000},{"_id":"themes/cactus/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1556034319000},{"_id":"themes/cactus/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1556034319000},{"_id":"themes/cactus/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1556034319000},{"_id":"themes/cactus/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1556034319000},{"_id":"themes/cactus/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1556034319000},{"_id":"themes/cactus/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1556034319000},{"_id":"themes/cactus/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1556034319000},{"_id":"themes/cactus/layout/_partial/comments.ejs","hash":"4cf8d0059e5f8bc8ae1dd1a426293583fd398052","modified":1556034346000},{"_id":"themes/cactus/layout/_partial/footer.ejs","hash":"c3a80e347cb11022baf5e65fb4d0209b8d205693","modified":1556034346000},{"_id":"themes/cactus/layout/_partial/header.ejs","hash":"9b2b7d6e9ab514107adf408c7ec8530fd612b3d5","modified":1556034346000},{"_id":"themes/cactus/layout/_partial/head.ejs","hash":"753dcb513c6f21f6f46e673942c7261cf50da886","modified":1556034346000},{"_id":"themes/cactus/layout/_partial/pagination.ejs","hash":"23bf862b3b8a3cd831850504d9b5a24d21b005e7","modified":1556034346000},{"_id":"themes/cactus/layout/_partial/scripts.ejs","hash":"78e3e290ab8bb6450a04b2a9c7c5b7b3da74abb8","modified":1556034346000},{"_id":"themes/cactus/layout/_partial/search.ejs","hash":"8b4bf9cf5db0ce762a31fc3baae0f2fc004bece4","modified":1556034346000},{"_id":"themes/cactus/layout/_partial/styles.ejs","hash":"be1b54388eb02176dd4722285dda19e3dce2e62e","modified":1556034346000},{"_id":"themes/cactus/source/css/_extend.styl","hash":"2c8751d132e62f5f068dc3a184d160670737ba1f","modified":1556034346000},{"_id":"themes/cactus/source/css/_fonts.styl","hash":"354809b5a64e8a47a66c66fd1a28ac597c1460a6","modified":1556034346000},{"_id":"themes/cactus/source/css/_mixins.styl","hash":"1a9e309523df9685e8d088dcff0a809c58e2c392","modified":1556034346000},{"_id":"themes/cactus/source/css/_util.styl","hash":"2bfeb2e2605dd5235693b00c71a212646d2e0410","modified":1556034346000},{"_id":"themes/cactus/source/css/_variables.styl","hash":"02079fb71b7d1c01d15fa512a1948ad4cbb416b5","modified":1556034346000},{"_id":"themes/cactus/source/css/rtl.styl","hash":"98355abe9ef3a398a5b4cb40d3d33bf86ac8d1d4","modified":1556034346000},{"_id":"themes/cactus/source/css/style.styl","hash":"d9be82f7e7145cde78e04183afc8ff13d6a16059","modified":1556034346000},{"_id":"themes/cactus/source/images/favicon.ico","hash":"189f9842bcb79a6f8f9e8445bc8bbd773443826b","modified":1556034346000},{"_id":"themes/cactus/source/images/apple-touch-icon.png","hash":"57e2def34682655f41a0be2d083f16765ba7858b","modified":1556034346000},{"_id":"themes/cactus/source/images/favicon-192x192.png","hash":"96e6fcbbb13a5914a6131391e210eb7dfd13d692","modified":1556034346000},{"_id":"themes/cactus/source/js/main.js","hash":"584c5a69ac81a483a1c4377a2e2cf326c2795e7b","modified":1556034346000},{"_id":"themes/cactus/source/js/search.js","hash":"a74d0c601f820160825a2e4ad13618074d714933","modified":1556034346000},{"_id":"source/images/gPRC-test-result.png","hash":"6076eb7827d7150f2294c4ee332ce449bb712139","modified":1601945564512},{"_id":"themes/cactus/.git/objects/41/2ce7ede7fd869dd71d69d4f125b97e4f48ab03","hash":"f7ef967645ab4b2612264086bd16e8dcb640c22f","modified":1601674543053},{"_id":"themes/cactus/.git/objects/9d/8796b70a5f0badaf5a1f3487fbc6c4d8007b5e","hash":"21d7bf8b4f9ebe87996a52048c9d859e6ae51b15","modified":1601674543056},{"_id":"themes/cactus/.git/refs/heads/master","hash":"8d022cd27689b8f0864721f416bab8a3802b49e7","modified":1601674543057},{"_id":"themes/cactus/.git/objects/9e/d7cfa8150dd00c067a79932028055856f194fd","hash":"4cd1a55437754abddaa22829e4bc08bbc208fa33","modified":1601674534516},{"_id":"themes/cactus/layout/_partial/post/actions_desktop.ejs","hash":"38aadd1ed890303dde582b722486138afee09b0a","modified":1556034346000},{"_id":"themes/cactus/layout/_partial/post/actions_mobile.ejs","hash":"79b234ff3c264e66b2e71c819228e62bf92b48e4","modified":1556034346000},{"_id":"themes/cactus/layout/_partial/post/date.ejs","hash":"6f2d1aa9562df343b797d25705f1945323c465fb","modified":1556034346000},{"_id":"themes/cactus/layout/_partial/post/category.ejs","hash":"b5bfa049f17868fb09d9d2a7e1d5279fa0381d37","modified":1556034346000},{"_id":"themes/cactus/layout/_partial/post/gallery.ejs","hash":"9aecd8908e8a684f33dc20c02497c0f1774137c7","modified":1556034346000},{"_id":"themes/cactus/layout/_partial/post/share.ejs","hash":"847a400e79b775246ca9067e40c3f104d571413d","modified":1556034346000},{"_id":"themes/cactus/layout/_partial/post/tag.ejs","hash":"e08fae30da060f49c087f6c121868b08eb55c795","modified":1556034346000},{"_id":"themes/cactus/layout/_partial/post/title.ejs","hash":"a060f1c6e3718494a6b1d0e1981ea0bf4e549828","modified":1556034346000},{"_id":"themes/cactus/source/css/_colors/dark.styl","hash":"9c9655b42b85f754b8a573a1d4634c23c680e1bf","modified":1556034346000},{"_id":"themes/cactus/source/css/_colors/classic.styl","hash":"0f0ec41a4165814ce69688425d5ac4d701b7cc70","modified":1556034346000},{"_id":"themes/cactus/source/css/_colors/light.styl","hash":"d09f781cb02394850737b3a9efc6693307d5bf09","modified":1556034346000},{"_id":"themes/cactus/source/css/_colors/white.styl","hash":"2b25ad24573bded8b42f9d80112eab9fadbed1a5","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/agate.styl","hash":"53027913ed8d4f75ac3e49e76aad824f0df62da3","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/androidstudio.styl","hash":"2af0861725f97f0ee2ded67c3d2d4548c62b2d16","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/arta.styl","hash":"b3e81e3e694ceb8deed178adb8b91013c5120e30","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-cave-dark.styl","hash":"ce63dd8548688d88254405eedfa75b1d7c82449e","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-dune-dark.styl","hash":"c196ff0ee064af0e507823694ae39020addfc280","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-estuary-dark.styl","hash":"0bb16a4eff93688f40787abc2f9e56e7d5cc93e7","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-forest-dark.styl","hash":"effbc5d75fa87203c847039869c22031b40d5b7d","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-heath-dark.styl","hash":"9a2e9a1d0a01bbdf158560c3ed1c134e098b2c68","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-lakeside-dark.styl","hash":"10ee3882fca7b97a37bd309d2d35fce9868647bb","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-plateau-dark.styl","hash":"84c80e6f67f62fce958d25817c277d2360272617","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-savanna-dark.styl","hash":"e32c1c70def8060fce5e790979a126da650ac642","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-seaside-dark.styl","hash":"2edf385215bbe1985b1a10106525d362667d28c2","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"538a14321193cd8abf2ddc484306631e54149ffb","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/codepen-embed.styl","hash":"8b7b34484f76a6c2c3b1a9e49abb9b382f439ae8","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/dark.styl","hash":"f5e6e75958de59e87fc6be3a1668e870e20bc836","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/darkula.styl","hash":"9717efa9194837ba3fb4d762997d33075dcf8bfa","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/far.styl","hash":"aaac3028f5e33123cd123a583cddc9290c45ec8e","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/gruvbox-dark.styl","hash":"76b744c14fd5600bea64731c05df97c2df75523f","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/hopscotch.styl","hash":"1378a6bc67a32c0cbff72ab771268b53f9aa586d","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/hybrid.styl","hash":"b8eb5c69d12f2ee5ebc50265ae271699d7f1a8d3","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/ir-black.styl","hash":"53e5d74326a4527b92272bbd6946d4fec92720e8","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/index.styl","hash":"002d5596f6379cc87dbd43d9145bc764aa666be1","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/kimbie.styl","hash":"51b889ca7c6fe178cfbbe28d875a6ea427184441","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/monokai-sublime.styl","hash":"c385b11345894be7e6ce3c5f08663e199933b8e4","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/monokai.styl","hash":"f87be027848ea6bee623a08ad1e17b2f5b7937ee","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/obsidian.styl","hash":"199e28326be8590883f0813ebbd54fcfaa4750fd","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/paraiso.styl","hash":"75f181eece6b71d033ea0c8d6cf00ae7efb9e29b","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/pojoaque.styl","hash":"4e7b6b046b8575ac749f6aec4e953a62ada27a36","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/railscasts.styl","hash":"b6674db9210e0c4444e4835fff2d1361f3ebd64c","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/rainbow.styl","hash":"c0cf97aae3e10fdcd10414547a711c9effbc39b8","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/school-book.styl","hash":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/solarized-dark.styl","hash":"90c9da5aa594383697e5b18892a7f95beb053f55","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/sunburst.styl","hash":"af3eec0fd56151e55bbd49c31b151f36717611d8","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night-blue.styl","hash":"f24c17d0ab815dcfaab3438cb9fe2ab4839f5e0d","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night-bright.styl","hash":"7674fecb6d27350727dc0d2dc93bc018382ebbd0","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night-eighties.styl","hash":"28d751075ebabf7d0327a36f725076fe82fdf626","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night.styl","hash":"16ba09b2db501e4e3e2e7d62595d9bf935bf27c4","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1556034346000},{"_id":"themes/cactus/source/css/_highlight/zenburn.styl","hash":"68ff9332ccc03f9389b15b713415cde016f8088f","modified":1556034346000},{"_id":"themes/cactus/source/css/_partial/archive.styl","hash":"ef8fc52337c4c7b010cad7c427cb78009b30f9d8","modified":1556034346000},{"_id":"themes/cactus/source/css/_partial/article.styl","hash":"7ff5b6a28dc3f2cd4ebfc4f5351054a18800bf96","modified":1556034346000},{"_id":"themes/cactus/source/css/_partial/categories.styl","hash":"a43f00e61b3507f130b8a3f8108a4eeca147c2a0","modified":1556034346000},{"_id":"themes/cactus/source/css/_partial/comments.styl","hash":"1e90f1fb9d4c155df518cacb5a537e9de9c042c1","modified":1556034346000},{"_id":"themes/cactus/source/css/_partial/footer.styl","hash":"d9b13e402808175dc90761cc4fdfe3d4808034f8","modified":1556034346000},{"_id":"themes/cactus/source/css/_partial/header.styl","hash":"662667942cc9a2caf55caa84a0fc73617d0c3aa4","modified":1556034346000},{"_id":"themes/cactus/source/css/_partial/index.styl","hash":"59c99f4ea3a73bf47ce030df166c5e33d5de31fb","modified":1556034346000},{"_id":"themes/cactus/source/css/_partial/pagination.styl","hash":"950bf517bbe7adb9a9aa4eb5ddec74ffc7598787","modified":1556034346000},{"_id":"themes/cactus/source/css/_partial/search.styl","hash":"159be002780c62a77f46947cf854a7342fba24f4","modified":1556034346000},{"_id":"themes/cactus/source/css/_partial/tags.styl","hash":"d571d5c7c960300d29c5f0ec3fe1140322ecd6b3","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff","hash":"37443d0040f0d7af381c955e4c15919a15d0349e","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff2","hash":"0a257c8b60e0f20802c1dc8daeed2d3cb0d44f17","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff","hash":"df15fd1e74b6f4a50bea57e2b44d9627f38495b5","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff2","hash":"62447a951d48b21c4696ae72df4bc4adef636e26","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff","hash":"32ae5c0d1d5943c8bb8e0f6ab07c3269c6f8b8a8","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff2","hash":"ef07a250766fea840c1049e67c0405d9216ee0a8","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff","hash":"f5653059b2a5929516e4aab02329a978600b9b67","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff2","hash":"668400ae92700965f03f2371faaee0ab8c8347c3","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff","hash":"ad4d46a99a1daf6353c86c79ac3a2b030213859c","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff2","hash":"c3be79b553ec394db71268d604b1d29183b867dc","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/font-face.css","hash":"8f2bf6b59ae1f2ed4c2fead6cea4b8314fcf62e5","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff","hash":"bbee70033f0f5882e9869e417b69c6a38f56f187","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff2","hash":"30ce165216db078951a690a6ad665b9b78f5dd81","modified":1556034346000},{"_id":"themes/cactus/source/lib/jquery/jquery.min.js","hash":"0dc32db4aa9c5f03f3b38c47d883dbd4fed13aae","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.eot","hash":"13d026ff857c853cbd0dc519b6e58669db309441","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.ttf","hash":"2e6c9df9f775373fb1988ae8529aa8f05313dae6","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.ttf","hash":"594dc3344ad14903c247615427d1009709f0f5a4","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.eot","hash":"f76ec625e15522ff60d21f7a9a3b71c65bc27556","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.eot","hash":"3edffd7bb61eee8cd46b57225f9f9e5264e3362b","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.ttf","hash":"9f1e2934098a6a4a7c5584c8f3fa24a707070da3","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.ttf","hash":"a6aa450ee6e0f85786474ca6b04827ef97e81af4","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.eot","hash":"1f5a73db7947ef22c8a2bb19d6449b80496c03c4","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.ttf","hash":"295f7e02c9b157e7ea63ad09613b00ceab85c5cd","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.eot","hash":"08e1503d1181188690fd9c81860d6c890c1465f6","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.ttf","hash":"f22b219824026e490a581ddb3b36b07997dff0e3","modified":1556034346000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.eot","hash":"31a9219c25fe1991fb745ec8dbbcf45c6094a702","modified":1556034346000},{"_id":"themes/cactus/source/images/logo.png","hash":"0e3029251dfda26adee2761f71377297e8c26871","modified":1556034346000},{"_id":"themes/cactus/.git/logs/refs/heads/master","hash":"d74534f447e364e344a4c7b430cd68a033815315","modified":1601674543058},{"_id":"themes/cactus/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1556034346000},{"_id":"themes/cactus/.git/objects/pack/pack-2dbd56d6f7f35bc1f87ac0806d95e6a12540f05c.idx","hash":"eb963c3b2cbfbbdbf315183b2514814d7f13ef67","modified":1556034346000},{"_id":"themes/cactus/source/css/_partial/post/actions_mobile.styl","hash":"0d2966c1d870392476864af8ee3ba312ba30cb82","modified":1556034346000},{"_id":"themes/cactus/source/css/_partial/post/actions_desktop.styl","hash":"4ef72ea70f7c840b2843bf7717aaafae3b6fc241","modified":1556034346000},{"_id":"themes/cactus/source/lib/font-awesome/css/all.min.css","hash":"cf1a3fd771900af34f2af22142beecfb47367548","modified":1556034346000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.eot","hash":"42ff503f20e97503cef8e5b2ec10ae07699d7c01","modified":1556034346000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"d902f8db3e021155f177f698a252fb98d6e61768","modified":1556034346000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.ttf","hash":"c140085833a38abec6b7df99d4ccac93eb266031","modified":1556034346000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff","hash":"7b3f44b4d3028f3c87ddf0f4bd62511c9bf4a87e","modified":1556034346000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"9784edb76f8a2ed595ea4bf74d46cda4eff3b303","modified":1556034346000},{"_id":"themes/cactus/source/lib/justified-gallery/css/justifiedGallery.min.css","hash":"92bb6e468a1db7fbd99ccb960e15e28572254263","modified":1556034346000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"92da6e3c7121e21cdfde25ef08797a3937a683e1","modified":1556034346000},{"_id":"themes/cactus/source/lib/justified-gallery/js/jquery.justifiedGallery.min.js","hash":"82ab395176c927ffbb2f7c95132ee0a06cd5d64a","modified":1556034346000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff","hash":"f9d835a0f9248b1bb33d66968e87c4a50103ed8d","modified":1556034346000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.ttf","hash":"19e302760e39e25a5f8d90d6cd0164ef6cd74f8c","modified":1556034346000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff","hash":"80d33a73cbb60e206ef6f5c898988641576c7dda","modified":1556034346000},{"_id":"themes/cactus/.git/logs/refs/remotes/origin/HEAD","hash":"0d3fac8286b16073ba28fe22ab607e0c17c9c5dc","modified":1556034346000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.svg","hash":"33e86c0ad6fb9c5c0c8c2af4cb2d790c6b14a8aa","modified":1556034346000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.eot","hash":"644ece8263d2f96b087eebf7f6d4e309e5898eb5","modified":1556034346000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-BoldItalic.ttf","hash":"b542b9591fbf33925d93f0695b6e123a9f0cfd43","modified":1556034346000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.ttf","hash":"c445864a9646948e0d7ff44930ad732ee61427d8","modified":1556034346000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-BoldItalic.ttf","hash":"b7d24ab1e4fad720f31a2b0cca1904ce1740d846","modified":1556034346000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Italic.ttf","hash":"93ebc5098cf57a32b7b8d297681f31692c09bdfa","modified":1556034346000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-BoldItalic.ttf","hash":"926035f0156cccf1b0ca507347f39bf9c510f51e","modified":1556034346000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.eot","hash":"10740942ec6b3f4985529d343402d0bf32f9f847","modified":1556034346000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Bold.ttf","hash":"58be4b7760e9a84daa81929d046f9a15c4fd1c1a","modified":1556034346000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Italic.ttf","hash":"9a23c6898b0943bd3d96c04df9a0f66e919451d8","modified":1556034346000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Regular.ttf","hash":"20ce1fc7ae1254558ca044ae48283faaa58897e5","modified":1556034346000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Italic.ttf","hash":"9d757cc9f928fc83b2133283dd639c12b11d94ad","modified":1556034346000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Regular.ttf","hash":"6c090d6bff3928fbf8a5f4104e58ed7f421aea7c","modified":1556034346000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Bold.ttf","hash":"f9918fb93d6ab6850f5d38069a999c311af78816","modified":1556034346000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Regular.ttf","hash":"de559f8d70d5b1ab2810597bfd0b1b9506f3ef01","modified":1556034346000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Bold.ttf","hash":"34f7db59f1d023294e69976aa20b7d52b86165a4","modified":1556034346000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.svg","hash":"b0bb9e6ac7709206b9510f1718516d89aead5b21","modified":1556034346000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.svg","hash":"ed6c1ed8f24df909f40fe5e5c652d7ff9570c821","modified":1556034346000},{"_id":"themes/cactus/.git/objects/pack/pack-2dbd56d6f7f35bc1f87ac0806d95e6a12540f05c.pack","hash":"dc0fc1309ffb7f851bd8fc8d8b5ed8ca8223ae54","modified":1556034346000},{"_id":"public/resume/style.css","hash":"bfc15e851549bcf16b2bcf4f6e68e345d8509389","modified":1616310162889},{"_id":"public/resume/index.html","hash":"6c516678cc85390bf24db00ca85b6eb5bcad21e6","modified":1616310163038},{"_id":"public/resume-cn/style.css","hash":"bfc15e851549bcf16b2bcf4f6e68e345d8509389","modified":1616310163040},{"_id":"public/resume-cn/index.html","hash":"b84d06d6ccb8c471c287cd2768b4394e04dffc97","modified":1616310163040},{"_id":"public/birthday/index.html","hash":"ea09f08f57554cf388c8c8a85431a0ada65537d6","modified":1616310163059},{"_id":"public/about/index.html","hash":"5520d10a3aab86a2e9a6c8469f3f4dadfdcd5353","modified":1616310163066},{"_id":"public/2018/09/26/after-finishing-sos-project/index.html","hash":"e9d553e5882d208063a7c77fc4f19d4f6de149a0","modified":1616310163067},{"_id":"public/2019/06/23/Mobx-vs-Mobx-State-Tree-MST/index.html","hash":"2fb14e6e0162a27f7ee7c55ee886a6cd9f36065c","modified":1616310163067},{"_id":"public/2019/08/20/Android-开发笔记-常见布局方式/index.html","hash":"891f6f8d35624c32118d8da342bc1b395d2669d8","modified":1616310163067},{"_id":"public/2019/06/07/Redux-vs-Mobx比较/index.html","hash":"6a6449bfe0320f3b0be0372910d5944a3944c551","modified":1616310163067},{"_id":"public/2019/10/03/Android-开发笔记-Kodein/index.html","hash":"7286c9d3e8ca8f6596bdd9507d34615d6872a407","modified":1616310163067},{"_id":"public/2019/11/03/Postgresql-index-types-and-typical-use-case/index.html","hash":"fdfb9a50e66cfd8909eca9378c611fc492352125","modified":1616310163067},{"_id":"public/2019/12/17/Swift学习之算法/index.html","hash":"a8e8493cfc1c950056893bf07b3f805bc722b2ff","modified":1616310163067},{"_id":"public/2020/04/11/aws-serverless相关issue总结/index.html","hash":"e8cba8b7259b1cb1882d6689ce7f3b1d6d0b05d3","modified":1616310163067},{"_id":"public/2020/04/23/RoR-搭建web应用/index.html","hash":"aade7fcec66aa49f48f4e68e2a0c00f10b73674a","modified":1616310163067},{"_id":"public/2020/08/09/Useful-vi-commands/index.html","hash":"a638e9a0310aef31ad4cd1aef3fc6047ba3ce966","modified":1616310163067},{"_id":"public/2020/10/06/Simple-summary-of-git-and-github-useful-tools/index.html","hash":"dae8c001f97b9afa84d6400e84245342df4b20e1","modified":1616310163067},{"_id":"public/index.html","hash":"767020f6ebd4a17fc8ea4093180c355f382e9265","modified":1616310163067},{"_id":"public/2020/10/20/Setup-Charles-proxy-for-mobile-app/index.html","hash":"47ab034acb944afb576bcb0a64e0dfae861845d6","modified":1616310163067},{"_id":"public/page/3/index.html","hash":"dd8edf1a2f609b47fcf5531099c3bccc3a267aa5","modified":1616310163067},{"_id":"public/page/2/index.html","hash":"3933e413edf8b686b5409c15223ecd6bd12cc5d6","modified":1616310163067},{"_id":"public/archives/index.html","hash":"96453d4462c429438ac149f914cf6fd9018b38b0","modified":1616310163067},{"_id":"public/archives/page/2/index.html","hash":"d1349ec21544d3aff68f8fc4e92342ba9c4dfed1","modified":1616310163067},{"_id":"public/archives/page/3/index.html","hash":"2be79e4518960da5c505cacaa122ce2f5b3fe006","modified":1616310163067},{"_id":"public/archives/2018/index.html","hash":"6daf0005c7f5234b5c26a15e83c7e05e1bd87b26","modified":1616310163068},{"_id":"public/archives/2018/09/index.html","hash":"8d83334749ca1982f5fc7f25df4dce24c84b03f6","modified":1616310163068},{"_id":"public/archives/2019/index.html","hash":"43429ea3a2d9e2424300b8016f91af1e12252cd3","modified":1616310163068},{"_id":"public/archives/2019/page/2/index.html","hash":"514693376b331a1eeafd33c3302f9455e493d81c","modified":1616310163068},{"_id":"public/archives/2019/05/index.html","hash":"d8c1481c85e1e591b303e6ff5507107a102230a9","modified":1616310163068},{"_id":"public/archives/2019/04/index.html","hash":"1ea669715effda3f3fa629ec18444fc1a591b04c","modified":1616310163068},{"_id":"public/archives/2019/06/index.html","hash":"015a9f02d1e75804a13073aebb6f13b4ccc2f2b2","modified":1616310163068},{"_id":"public/archives/2019/08/index.html","hash":"b97807066b7e25dd6501694680930ac9fc91136d","modified":1616310163068},{"_id":"public/archives/2019/09/index.html","hash":"29867ed8956bedfc18d56dc165cd179667b28b7b","modified":1616310163068},{"_id":"public/archives/2019/10/index.html","hash":"c2013ed7315d116e3b311d1e08d74c47c5bda54b","modified":1616310163068},{"_id":"public/archives/2019/11/index.html","hash":"34c89c5e65e71bbe9bd9d9af8af7ee69183b58e7","modified":1616310163068},{"_id":"public/2019/04/22/Vue-js组件通信模式/index.html","hash":"826708a8454d7cb7b070d2a2f2246d3055fed1f4","modified":1616310163068},{"_id":"public/2019/04/24/Sequelize为什么需要使用Maigration/index.html","hash":"cfec42b2de9db671bce69cf179a659a25307397a","modified":1616310163068},{"_id":"public/2019/05/04/Postgresql并发控制之事务隔离界别的总结/index.html","hash":"0480bd4e1dd681885573565da3eac281c4b6c01c","modified":1616310163068},{"_id":"public/2019/05/18/sequelize-关于warning-a-promise-was-created-but-was-not-returned-from-it/index.html","hash":"4f3d4eb3395b81253dc58c49adc6fd03c9efdf5a","modified":1616310163068},{"_id":"public/2019/08/19/Android-开发笔记-RecycleView/index.html","hash":"a87d7ce377df14809e2b500e577d14c1b6eae236","modified":1616310163068},{"_id":"public/2019/08/04/PostgreSQL服务器配置之常用连接和认证方式/index.html","hash":"aac7cf443a15d4e7911268f3d55cc831a13de5cf","modified":1616310163068},{"_id":"public/2019/08/23/Android-开发笔记-kotlin基础/index.html","hash":"5e3a25c39b1b09be29504fa7f7a5fbec43f84859","modified":1616310163068},{"_id":"public/2019/10/05/CPU-Intensive-Node-js/index.html","hash":"e30342e00b4edde69400d516a4fdd236d04790d0","modified":1616310163068},{"_id":"public/2019/09/14/Android-开发笔记-常见的构架原则/index.html","hash":"867c469c1bb5eb5e746009e08fcc3e6ebc9c051d","modified":1616310163068},{"_id":"public/2019/11/09/Analyzing-secure-logs-on-centos/index.html","hash":"268013eecb542b17bdd57e1013795b0259ed1974","modified":1616310163068},{"_id":"public/2019/12/02/Android-开发笔记-coroutines/index.html","hash":"130d03d7611a6f61ef9692bc62c08aa6bf6f1f5e","modified":1616310163068},{"_id":"public/2019/12/22/Express-Application-using-Typescript/index.html","hash":"f34a8aae4cd3bec0cf8e21b913abf9985d2728de","modified":1616310163068},{"_id":"public/2020/06/25/Graceful-shutdown-in-Node/index.html","hash":"0eca057e05d630b76379fb52646f09e2f494e9ed","modified":1616310163069},{"_id":"public/2020/07/04/Why-graphql/index.html","hash":"a54d0da6aa1baa3fe5337cdc55740851a28ac101","modified":1616310163069},{"_id":"public/2020/07/30/jenkins-deploy-node-project/index.html","hash":"ae74ca39dc483cc53a77b60a25605cbf663c753b","modified":1616310163069},{"_id":"public/2020/10/05/A-brief-introduction-of-gRPC-in-Typescript/index.html","hash":"76298ed171290017dd175db4ea3b0dfa37acd00d","modified":1616310163069},{"_id":"public/archives/2020/index.html","hash":"082bf3b956190f1b8a2fd96b75505b2f57f75dff","modified":1616310163076},{"_id":"public/archives/2019/12/index.html","hash":"1cebbdb839a855982dc8cf287d14171f011854b8","modified":1616310163076},{"_id":"public/archives/2020/04/index.html","hash":"6dffef0b51a535de412ccb63e1efdd0c8084d08e","modified":1616310163076},{"_id":"public/archives/2020/06/index.html","hash":"cdeefefe359ea378ce7919a454897b4b0b9e234f","modified":1616310163076},{"_id":"public/archives/2020/10/index.html","hash":"efd7dda05f8b78b2380e243e0328d74f22ddf37b","modified":1616310163076},{"_id":"public/archives/2020/07/index.html","hash":"bb9f5bc7b4dcd6116009bacc59a62f4ea54819d4","modified":1616310163076},{"_id":"public/archives/2020/08/index.html","hash":"2381b4cd42765bbc7b043fa48276c2838b91e2ce","modified":1616310163076},{"_id":"public/images/stats.png","hash":"36dd2c24b3905c505364f81df693737bddce1a01","modified":1616310163085},{"_id":"public/resume-cn/avatar.jpeg","hash":"28e4860ce91fdcd7cba36d1e748460963a298ab4","modified":1616310163085},{"_id":"public/images/favicon.ico","hash":"189f9842bcb79a6f8f9e8445bc8bbd773443826b","modified":1616310163086},{"_id":"public/images/apple-touch-icon.png","hash":"57e2def34682655f41a0be2d083f16765ba7858b","modified":1616310163086},{"_id":"public/images/favicon-192x192.png","hash":"96e6fcbbb13a5914a6131391e210eb7dfd13d692","modified":1616310163086},{"_id":"public/lib/vazir-font/Vazir-Black.woff2","hash":"0a257c8b60e0f20802c1dc8daeed2d3cb0d44f17","modified":1616310163086},{"_id":"public/lib/vazir-font/Vazir-Bold.woff","hash":"df15fd1e74b6f4a50bea57e2b44d9627f38495b5","modified":1616310163086},{"_id":"public/lib/vazir-font/Vazir-Bold.woff2","hash":"62447a951d48b21c4696ae72df4bc4adef636e26","modified":1616310163086},{"_id":"public/lib/vazir-font/Vazir-Black.woff","hash":"37443d0040f0d7af381c955e4c15919a15d0349e","modified":1616310163086},{"_id":"public/lib/vazir-font/Vazir-Light.woff","hash":"32ae5c0d1d5943c8bb8e0f6ab07c3269c6f8b8a8","modified":1616310163086},{"_id":"public/lib/vazir-font/Vazir-Medium.woff","hash":"f5653059b2a5929516e4aab02329a978600b9b67","modified":1616310163086},{"_id":"public/lib/vazir-font/Vazir-Medium.woff2","hash":"668400ae92700965f03f2371faaee0ab8c8347c3","modified":1616310163087},{"_id":"public/lib/vazir-font/Vazir-Thin.woff2","hash":"c3be79b553ec394db71268d604b1d29183b867dc","modified":1616310163087},{"_id":"public/lib/vazir-font/Vazir-Thin.woff","hash":"ad4d46a99a1daf6353c86c79ac3a2b030213859c","modified":1616310163087},{"_id":"public/lib/vazir-font/Vazir.woff2","hash":"30ce165216db078951a690a6ad665b9b78f5dd81","modified":1616310163087},{"_id":"public/lib/vazir-font/Vazir-Light.woff2","hash":"ef07a250766fea840c1049e67c0405d9216ee0a8","modified":1616310163087},{"_id":"public/lib/vazir-font/Vazir.woff","hash":"bbee70033f0f5882e9869e417b69c6a38f56f187","modified":1616310163087},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.eot","hash":"42ff503f20e97503cef8e5b2ec10ae07699d7c01","modified":1616310163088},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"d902f8db3e021155f177f698a252fb98d6e61768","modified":1616310163088},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.ttf","hash":"c140085833a38abec6b7df99d4ccac93eb266031","modified":1616310163088},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff","hash":"7b3f44b4d3028f3c87ddf0f4bd62511c9bf4a87e","modified":1616310163088},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"9784edb76f8a2ed595ea4bf74d46cda4eff3b303","modified":1616310163088},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"92da6e3c7121e21cdfde25ef08797a3937a683e1","modified":1616310163088},{"_id":"public/images/final-architecture.png","hash":"4f6f1b1541f93e62d7f4937f30605a35819bf7e9","modified":1616310163348},{"_id":"public/images/gPRC.svg","hash":"0736849feef0a4cda3d3f665ed96548c20dfe1a2","modified":1616310163349},{"_id":"public/images/redux-mobx.png","hash":"e501208fd57cca15f8c6f8d8e0bf84e87f28cdb2","modified":1616310163349},{"_id":"public/lib/vazir-font/Vazir-Black.eot","hash":"13d026ff857c853cbd0dc519b6e58669db309441","modified":1616310163350},{"_id":"public/lib/vazir-font/Vazir-Black.ttf","hash":"594dc3344ad14903c247615427d1009709f0f5a4","modified":1616310163350},{"_id":"public/lib/vazir-font/Vazir-Bold.ttf","hash":"2e6c9df9f775373fb1988ae8529aa8f05313dae6","modified":1616310163350},{"_id":"public/lib/vazir-font/Vazir-Bold.eot","hash":"f76ec625e15522ff60d21f7a9a3b71c65bc27556","modified":1616310163350},{"_id":"public/lib/vazir-font/Vazir-Light.eot","hash":"3edffd7bb61eee8cd46b57225f9f9e5264e3362b","modified":1616310163350},{"_id":"public/lib/vazir-font/Vazir-Light.ttf","hash":"9f1e2934098a6a4a7c5584c8f3fa24a707070da3","modified":1616310163350},{"_id":"public/lib/vazir-font/Vazir-Thin.ttf","hash":"a6aa450ee6e0f85786474ca6b04827ef97e81af4","modified":1616310163350},{"_id":"public/lib/vazir-font/Vazir-Medium.eot","hash":"1f5a73db7947ef22c8a2bb19d6449b80496c03c4","modified":1616310163351},{"_id":"public/lib/vazir-font/Vazir-Medium.ttf","hash":"295f7e02c9b157e7ea63ad09613b00ceab85c5cd","modified":1616310163351},{"_id":"public/lib/vazir-font/Vazir-Thin.eot","hash":"08e1503d1181188690fd9c81860d6c890c1465f6","modified":1616310163351},{"_id":"public/lib/vazir-font/Vazir.ttf","hash":"f22b219824026e490a581ddb3b36b07997dff0e3","modified":1616310163351},{"_id":"public/lib/vazir-font/Vazir.eot","hash":"31a9219c25fe1991fb745ec8dbbcf45c6094a702","modified":1616310163351},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff","hash":"f9d835a0f9248b1bb33d66968e87c4a50103ed8d","modified":1616310163351},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.ttf","hash":"19e302760e39e25a5f8d90d6cd0164ef6cd74f8c","modified":1616310163352},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff","hash":"80d33a73cbb60e206ef6f5c898988641576c7dda","modified":1616310163352},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.eot","hash":"644ece8263d2f96b087eebf7f6d4e309e5898eb5","modified":1616310163352},{"_id":"public/css/rtl.css","hash":"c2c2bc4ce311b3129275e009e903088b45e7ed77","modified":1616310163361},{"_id":"public/js/search.js","hash":"a74d0c601f820160825a2e4ad13618074d714933","modified":1616310163361},{"_id":"public/js/main.js","hash":"584c5a69ac81a483a1c4377a2e2cf326c2795e7b","modified":1616310163361},{"_id":"public/lib/vazir-font/font-face.css","hash":"8f2bf6b59ae1f2ed4c2fead6cea4b8314fcf62e5","modified":1616310163361},{"_id":"public/lib/justified-gallery/css/justifiedGallery.min.css","hash":"92bb6e468a1db7fbd99ccb960e15e28572254263","modified":1616310163361},{"_id":"public/css/style.css","hash":"65a6371478e578f261dfabd29cc430ea48e8445e","modified":1616310163361},{"_id":"public/lib/jquery/jquery.min.js","hash":"0dc32db4aa9c5f03f3b38c47d883dbd4fed13aae","modified":1616310163362},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"cf1a3fd771900af34f2af22142beecfb47367548","modified":1616310163362},{"_id":"public/lib/justified-gallery/js/jquery.justifiedGallery.min.js","hash":"82ab395176c927ffbb2f7c95132ee0a06cd5d64a","modified":1616310163362},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.ttf","hash":"c445864a9646948e0d7ff44930ad732ee61427d8","modified":1616310163362},{"_id":"public/images/gPRC-test-result.png","hash":"6076eb7827d7150f2294c4ee332ce449bb712139","modified":1616310163367},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.svg","hash":"33e86c0ad6fb9c5c0c8c2af4cb2d790c6b14a8aa","modified":1616310163367},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.eot","hash":"10740942ec6b3f4985529d343402d0bf32f9f847","modified":1616310163367},{"_id":"public/images/logo.png","hash":"0e3029251dfda26adee2761f71377297e8c26871","modified":1616310163377},{"_id":"public/lib/meslo-LG/MesloLGM-Italic.ttf","hash":"93ebc5098cf57a32b7b8d297681f31692c09bdfa","modified":1616310163395},{"_id":"public/lib/meslo-LG/MesloLGS-BoldItalic.ttf","hash":"926035f0156cccf1b0ca507347f39bf9c510f51e","modified":1616310163395},{"_id":"public/lib/meslo-LG/MesloLGL-Italic.ttf","hash":"9a23c6898b0943bd3d96c04df9a0f66e919451d8","modified":1616310163396},{"_id":"public/lib/meslo-LG/MesloLGS-Italic.ttf","hash":"9d757cc9f928fc83b2133283dd639c12b11d94ad","modified":1616310163396},{"_id":"public/lib/meslo-LG/MesloLGM-BoldItalic.ttf","hash":"b542b9591fbf33925d93f0695b6e123a9f0cfd43","modified":1616310163399},{"_id":"public/lib/meslo-LG/MesloLGL-BoldItalic.ttf","hash":"b7d24ab1e4fad720f31a2b0cca1904ce1740d846","modified":1616310163399},{"_id":"public/lib/meslo-LG/MesloLGM-Regular.ttf","hash":"20ce1fc7ae1254558ca044ae48283faaa58897e5","modified":1616310163400},{"_id":"public/lib/meslo-LG/MesloLGS-Bold.ttf","hash":"f9918fb93d6ab6850f5d38069a999c311af78816","modified":1616310163400},{"_id":"public/lib/meslo-LG/MesloLGS-Regular.ttf","hash":"de559f8d70d5b1ab2810597bfd0b1b9506f3ef01","modified":1616310163401},{"_id":"public/lib/meslo-LG/MesloLGL-Bold.ttf","hash":"34f7db59f1d023294e69976aa20b7d52b86165a4","modified":1616310163401},{"_id":"public/lib/meslo-LG/MesloLGL-Regular.ttf","hash":"6c090d6bff3928fbf8a5f4104e58ed7f421aea7c","modified":1616310163405},{"_id":"public/lib/meslo-LG/MesloLGM-Bold.ttf","hash":"58be4b7760e9a84daa81929d046f9a15c4fd1c1a","modified":1616310163406},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.svg","hash":"b0bb9e6ac7709206b9510f1718516d89aead5b21","modified":1616310163408},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.svg","hash":"ed6c1ed8f24df909f40fe5e5c652d7ff9570c821","modified":1616310163409}],"Category":[],"Data":[],"Page":[{"title":"birthday","date":"2019-04-26T13:39:58.000Z","_content":"","source":"birthday/index.md","raw":"---\ntitle: birthday\ndate: 2019-04-26 21:39:58\n---\n","updated":"2019-04-26T13:39:58.000Z","path":"birthday/index.html","comments":1,"layout":"page","_id":"ckmitc73l0001u60n6zdhi0px","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n</body>\n</html>\n","source":"birthday/index.html","raw":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n</body>\n</html>\n","date":"2020-05-14T23:09:21.139Z","updated":"2019-04-28T01:28:26.000Z","path":"birthday/index.html","title":"","comments":1,"layout":"page","_id":"ckmitc73n0003u60nzlew3v9n","content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n</body>\n</html>\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n</body>\n</html>\n"},{"_content":".resume {\n    font-family: 'Noto Sans KR', sans-serif;\n    font-weight: 300;\n    word-wrap: break-word;\n    word-break: keep-all;\n    line-height: 1.8\n}\n\n.blue {\n    color: #3c78d8;\n}\n\n.gray {\n    color: gray;\n}\n\n.profile-img {\n    max-height: 320px;\n}\n\n.footer-cover {\n    background-color: #f5f5f5;\n    padding-left: 0;\n    padding-right: 0;\n    margin-top: 50px;\n    height: 80px;\n}\n\n.footer {\n    padding-top: 10px;\n}\n","source":"resume/style.css","raw":".resume {\n    font-family: 'Noto Sans KR', sans-serif;\n    font-weight: 300;\n    word-wrap: break-word;\n    word-break: keep-all;\n    line-height: 1.8\n}\n\n.blue {\n    color: #3c78d8;\n}\n\n.gray {\n    color: gray;\n}\n\n.profile-img {\n    max-height: 320px;\n}\n\n.footer-cover {\n    background-color: #f5f5f5;\n    padding-left: 0;\n    padding-right: 0;\n    margin-top: 50px;\n    height: 80px;\n}\n\n.footer {\n    padding-top: 10px;\n}\n","date":"2020-05-14T23:09:21.140Z","updated":"2019-04-23T08:23:08.000Z","path":"resume/style.css","layout":"false","title":"","comments":1,"_id":"ckmitc73o0005u60noy5l0vwt","content":".resume {\n    font-family: 'Noto Sans KR', sans-serif;\n    font-weight: 300;\n    word-wrap: break-word;\n    word-break: keep-all;\n    line-height: 1.8\n}\n\n.blue {\n    color: #3c78d8;\n}\n\n.gray {\n    color: gray;\n}\n\n.profile-img {\n    max-height: 320px;\n}\n\n.footer-cover {\n    background-color: #f5f5f5;\n    padding-left: 0;\n    padding-right: 0;\n    margin-top: 50px;\n    height: 80px;\n}\n\n.footer {\n    padding-top: 10px;\n}\n","site":{"data":{}},"excerpt":"","more":".resume {\n    font-family: 'Noto Sans KR', sans-serif;\n    font-weight: 300;\n    word-wrap: break-word;\n    word-break: keep-all;\n    line-height: 1.8\n}\n\n.blue {\n    color: #3c78d8;\n}\n\n.gray {\n    color: gray;\n}\n\n.profile-img {\n    max-height: 320px;\n}\n\n.footer-cover {\n    background-color: #f5f5f5;\n    padding-left: 0;\n    padding-right: 0;\n    margin-top: 50px;\n    height: 80px;\n}\n\n.footer {\n    padding-top: 10px;\n}\n"},{"layout":"false","_content":"<!DOCTYPE html>\n<html>\n<head>\n\n    <!-- Global site tag (gtag.js) - Google Analytics -->\n    <!--<script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-135992499-1\"></script>-->\n    <script>\n        // window.dataLayer = window.dataLayer || [];\n        // function gtag() {\n        //     dataLayer.push(arguments);\n        // }\n        // gtag('js', new Date());\n        // gtag('config', 'xxx');\n    </script>\n\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\"\n          content=\"user-scalable=no,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,width=device-width\">\n    <meta name=\"description\" content=\"리호의 이력서입니다! \"/>\n    <meta property=\"og:url\" content=\"https://ybleeho.github.io/resume\"/>\n    <meta property=\"og:site_name\" content=\"리호 이력서\"/>\n    <meta property=\"og:title\" content=\"리호 이력서\"/>\n    <meta property=\"og:description\" content=\"리호의 이력서입니다!\"/>\n    <meta property=\"og:image\" content=\"https://ybleeho.github.io/resume/avatar.jpeg\"/>\n    <meta property=\"og:type\" content=\"website\"/>\n\n    <title>리호 이력서</title>\n\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.bundle.min.js\"\n            integrity=\"sha384-3ziFidFTgxJXHMDttyPJKDuTlmxJlwbSkojudK/CkRqKDOmeSbN6KLrGdrBQnT2n\"\n            crossorigin=\"anonymous\"></script>\n\n    <link rel=\"stylesheet\" href=\"style.css\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/earlyaccess/notosanskr.css\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" rel=\"stylesheet\"\n          integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\">\n\n    <link rel=\"shortcut icon\" type=\"image/png\" href=\"public/images/favicon.ico\"/>\n\n    <script>\n        $(function () {\n            $('[data-toggle=\"tooltip\"]').tooltip()\n        })\n    </script>\n</head>\n<body>\n<div class=\"container resume\">\n    <!-- Profile Start -->\n    <div class=\"row mt-5\">\n        <div class=\"col-md-3 col-sm-12 pb-3 text-md-right text-center\">\n            <img class=\"img-fluid rounded profile-img\" src=\"avatar.jpeg\" alt=\"Profile\">\n        </div>\n        <div class=\"col-md-9 col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col text-center text-md-left\">\n                    <h1 class=\"blue\">리 호</h1>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col pt-3\">\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"mailto:ybleeho@gmail.com\" target=\"_blank\"\n                               style=\"color:darkgray; font-weight: bold\">ybleeho@gmail.com</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <span class=\"text-secondary\">+86 15585589102</span>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-github\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://github.com/ybleeho\" target=\"_blank\" style=\"color:purple; font-weight:bold\">https://github.com/ybleeho</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://www.instagram.com/l2_h5\" target=\"_blank\"\n                               style=\"color:pink; font-weight:bold\">https://www.instagram.com/l2_h5</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-rss\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://ybleeho.github.io\" target=\"_blank\"\n                               style=\"color:pink; font-weight:bold\">https://ybleeho.github.io</a>\n                            <a href=\"https://www.cnblogs.com/ybleeho/\" target=\"_blank\"\n                               style=\"color:pink; font-weight:bold\">https://www.cnblogs.com/ybleeho/</a>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <div class=\"alert alert-secondary\" role=\"alert\">\n                                <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>&nbsp;\n                                연락은 <strong>이메일 혹은 위쳇(전화번호)</strong>모두 가능합니다.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Profile End -->\n\n    <!-- Introduce Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col-12 col-md-3\">\n            <h2 class=\"blue\">INTRODUCE</h2>\n        </div>\n        <div class=\"col-12 col-md-9\">\n            <p>&nbsp&nbsp 저는 길림대학 소프트웨어학과를 전공하고 지금 약 1년간의 개발직을 맡고 있습니다.주로는 Node, PostgreSQL 를 이용한\n                iOS, Android, miniProgram 등의 Backend 부분의 개발과 Frontend의 React를 이용한 매니지 시스템의 개발을 담당하고 있습니다.</p>\n            <p>&nbsp </p>\n        </div>\n    </div>\n    <!-- Introduce End -->\n\n    <!-- Skills Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col\">\n            <div class=\"row pb-3\">\n                <div class=\"col\">\n                    <h2>\n                <span class=\"blue\">\n                  SKILLS\n                </span>\n                        <small data-toggle=\"tooltip\" title=\"1: 기초 / 2: 중급 / 3: 고급\">\n                            <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n                        </small>\n                    </h2>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12 col-md-3 text-md-right\">\n                    <h4 class=\"gray\">Backend</h4>\n                </div>\n                <div class=\"col-12 col-md-9\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Node.js\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Express\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    PostgreSQL\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Sequelize\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    RESTful API\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Linux\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <hr/>\n\n            <div class=\"row\">\n                <div class=\"col-12 col-md-3 text-md-right\">\n                    <h4 class=\"gray\">Frontend&Etc</h4>\n                </div>\n                <div class=\"col-12 col-md-9\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    React\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Redux\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Html,CSS\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Git\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n    <!-- Skills End -->\n\n    <!-- Growth Process Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col\">\n            <div class=\"row pb-3\">\n                <div class=\"col\">\n                    <h2 class=\"blue\">GROWTH PROCESS</h2>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col\">\n                    <div class=\"row\">\n                        <div class=\"col-md-3 col-12 text-md-right\">\n                            <h4 class=\"gray\">20018.08 ~ </h4>\n                        </div>\n                        <div class=\"col-md-9 col-12\">\n                            <h4>6e Group회사</h4>\n                            <i class=\"gray\">FullStack개발직</i>\n                            <ul class=\"pt-2\">\n                                <li>여러개의 외국프로젝트의 백앤드개발에 참여</li>\n                                <li>iOS，Android의 개발에 참여하여 Stripe, Twilio, Notification 등 테크노를 접촉해봄</li>\n                                <li>위쳇 miniProgram 개발에 참여</li>\n                                <li>주로 Node.js+PostgreSQL+React 를 사용</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <hr/>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 col-12 text-md-right\">\n                            <h4 class=\"gray\">2014.08 ~ 2018.08</h4>\n                        </div>\n                        <div class=\"col-md-9 col-12\">\n                            <h4>길림대학 졸업</h4>\n                            <i class=\"gray\">소프트웨어공학과 전공</i>\n                            <ul class=\"pt-2\">\n                                <li>우수한 성적으로 3등장학금 두번 수여</li>\n                                <li>CET-4</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <hr/>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Growth Process End -->\n\n    <!-- Project Start -->\n    <!--<div class=\"row pt-5\">-->\n        <!--<div class=\"col\">-->\n            <!--<div class=\"row pb-3\">-->\n                <!--<div class=\"col\">-->\n                    <!--<h2 class=\"blue\">PROJECTS</h2>-->\n                <!--</div>-->\n            <!--</div>-->\n\n            <!--<div class=\"row\">-->\n                <!--<div class=\"col\">-->\n                    <!--<div class=\"row\">-->\n                        <!--<div class=\"col-md-3 col-12 text-md-right\">-->\n                            <!--<h4 class=\"gray\">xxxxx</h4>-->\n                        <!--</div>-->\n                        <!--<div class=\"col-md-9 col-12\">-->\n                            <!--<h4>xxxx</h4>-->\n                            <!--<i class=\"gray\">xxx</i>-->\n                            <!--<ul class=\"pt-3\">-->\n                                <!--<li>-->\n                                    <!--<strong>xxx</strong>-->\n                                    <!--<ul>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxxx</li>-->\n                                    <!--</ul>-->\n                                <!--</li>-->\n                                <!--<li>-->\n                                    <!--<strong>xxx</strong>-->\n                                    <!--<ul>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxxx</li>-->\n                                    <!--</ul>-->\n                                <!--</li>-->\n                            <!--</ul>-->\n                        <!--</div>-->\n                    <!--</div>-->\n                    <!--<hr/>-->\n\n\n\n                <!--</div>-->\n            <!--</div>-->\n        <!--</div>-->\n    <!--</div>-->\n    <!-- Project End -->\n\n    <!-- Etc Start -->\n    <!--<div class=\"row pt-5\">-->\n        <!--<div class=\"col\">-->\n            <!--<div class=\"row pb-3\">-->\n                <!--<div class=\"col\">-->\n                    <!--<h2 class=\"blue\">ETC</h2>-->\n                <!--</div>-->\n            <!--</div>-->\n\n            <!--<div class=\"row\">-->\n                <!--<div class=\"col\">-->\n\n                    <!--<div class=\"row\">-->\n                        <!--<div class=\"col-md-3 col-12 text-md-right\">-->\n                            <!--<h4 class=\"gray\">xxx</h4>-->\n                        <!--</div>-->\n                        <!--<div class=\"col-md-9 col-12\">-->\n                            <!--<h4>xx</h4>-->\n                            <!--<i class=\"gray\">xxx</i>-->\n                        <!--</div>-->\n                    <!--</div>-->\n                    <!--<hr/>-->\n\n\n\n                <!--</div>-->\n            <!--</div>-->\n        <!--</div>-->\n    <!--</div>-->\n    <!-- Etc End -->\n\n    <!-- Toolbox Start -->\n    <!--<div class=\"col-md-12 col-sm-12 pt-5\">-->\n        <!--<a href=\"./public/pdf/jinu-resume.pdf\" class=\"btn btn-info btn-block\" role=\"button\" aria-pressed=\"true\">-->\n            <!--<i class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i>-->\n            <!--&nbsp;이력서 PDF 다운받기-->\n        <!--</a>-->\n    <!--</div>-->\n    <!-- Toolbox End -->\n\n    <!-- Footer Start -->\n    <div class=\"row\">\n        <div class=\"col footer-cover\">\n            <div class=\"footer text-center\">\n                <small>Thanks to <a href=\"https://github.com/\" target=\"_blank\"><i class=\"fa fa-github\"></i> Github</a>\n                    and\n                    <a href=\"https://getbootstrap.com/\" target=\"_blank\">Bootstrap</a></small>\n            </div>\n        </div>\n    </div>\n    <!-- Footer End -->\n</div>\n</body>\n</html>\n","source":"resume/index.html","raw":"layout: false\n---\n<!DOCTYPE html>\n<html>\n<head>\n\n    <!-- Global site tag (gtag.js) - Google Analytics -->\n    <!--<script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-135992499-1\"></script>-->\n    <script>\n        // window.dataLayer = window.dataLayer || [];\n        // function gtag() {\n        //     dataLayer.push(arguments);\n        // }\n        // gtag('js', new Date());\n        // gtag('config', 'xxx');\n    </script>\n\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\"\n          content=\"user-scalable=no,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,width=device-width\">\n    <meta name=\"description\" content=\"리호의 이력서입니다! \"/>\n    <meta property=\"og:url\" content=\"https://ybleeho.github.io/resume\"/>\n    <meta property=\"og:site_name\" content=\"리호 이력서\"/>\n    <meta property=\"og:title\" content=\"리호 이력서\"/>\n    <meta property=\"og:description\" content=\"리호의 이력서입니다!\"/>\n    <meta property=\"og:image\" content=\"https://ybleeho.github.io/resume/avatar.jpeg\"/>\n    <meta property=\"og:type\" content=\"website\"/>\n\n    <title>리호 이력서</title>\n\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.bundle.min.js\"\n            integrity=\"sha384-3ziFidFTgxJXHMDttyPJKDuTlmxJlwbSkojudK/CkRqKDOmeSbN6KLrGdrBQnT2n\"\n            crossorigin=\"anonymous\"></script>\n\n    <link rel=\"stylesheet\" href=\"style.css\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/earlyaccess/notosanskr.css\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" rel=\"stylesheet\"\n          integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\">\n\n    <link rel=\"shortcut icon\" type=\"image/png\" href=\"public/images/favicon.ico\"/>\n\n    <script>\n        $(function () {\n            $('[data-toggle=\"tooltip\"]').tooltip()\n        })\n    </script>\n</head>\n<body>\n<div class=\"container resume\">\n    <!-- Profile Start -->\n    <div class=\"row mt-5\">\n        <div class=\"col-md-3 col-sm-12 pb-3 text-md-right text-center\">\n            <img class=\"img-fluid rounded profile-img\" src=\"avatar.jpeg\" alt=\"Profile\">\n        </div>\n        <div class=\"col-md-9 col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col text-center text-md-left\">\n                    <h1 class=\"blue\">리 호</h1>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col pt-3\">\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"mailto:ybleeho@gmail.com\" target=\"_blank\"\n                               style=\"color:darkgray; font-weight: bold\">ybleeho@gmail.com</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <span class=\"text-secondary\">+86 15585589102</span>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-github\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://github.com/ybleeho\" target=\"_blank\" style=\"color:purple; font-weight:bold\">https://github.com/ybleeho</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://www.instagram.com/l2_h5\" target=\"_blank\"\n                               style=\"color:pink; font-weight:bold\">https://www.instagram.com/l2_h5</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-rss\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://ybleeho.github.io\" target=\"_blank\"\n                               style=\"color:pink; font-weight:bold\">https://ybleeho.github.io</a>\n                            <a href=\"https://www.cnblogs.com/ybleeho/\" target=\"_blank\"\n                               style=\"color:pink; font-weight:bold\">https://www.cnblogs.com/ybleeho/</a>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <div class=\"alert alert-secondary\" role=\"alert\">\n                                <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>&nbsp;\n                                연락은 <strong>이메일 혹은 위쳇(전화번호)</strong>모두 가능합니다.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Profile End -->\n\n    <!-- Introduce Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col-12 col-md-3\">\n            <h2 class=\"blue\">INTRODUCE</h2>\n        </div>\n        <div class=\"col-12 col-md-9\">\n            <p>&nbsp&nbsp 저는 길림대학 소프트웨어학과를 전공하고 지금 약 1년간의 개발직을 맡고 있습니다.주로는 Node, PostgreSQL 를 이용한\n                iOS, Android, miniProgram 등의 Backend 부분의 개발과 Frontend의 React를 이용한 매니지 시스템의 개발을 담당하고 있습니다.</p>\n            <p>&nbsp </p>\n        </div>\n    </div>\n    <!-- Introduce End -->\n\n    <!-- Skills Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col\">\n            <div class=\"row pb-3\">\n                <div class=\"col\">\n                    <h2>\n                <span class=\"blue\">\n                  SKILLS\n                </span>\n                        <small data-toggle=\"tooltip\" title=\"1: 기초 / 2: 중급 / 3: 고급\">\n                            <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n                        </small>\n                    </h2>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12 col-md-3 text-md-right\">\n                    <h4 class=\"gray\">Backend</h4>\n                </div>\n                <div class=\"col-12 col-md-9\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Node.js\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Express\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    PostgreSQL\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Sequelize\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    RESTful API\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Linux\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <hr/>\n\n            <div class=\"row\">\n                <div class=\"col-12 col-md-3 text-md-right\">\n                    <h4 class=\"gray\">Frontend&Etc</h4>\n                </div>\n                <div class=\"col-12 col-md-9\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    React\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Redux\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Html,CSS\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Git\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n    <!-- Skills End -->\n\n    <!-- Growth Process Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col\">\n            <div class=\"row pb-3\">\n                <div class=\"col\">\n                    <h2 class=\"blue\">GROWTH PROCESS</h2>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col\">\n                    <div class=\"row\">\n                        <div class=\"col-md-3 col-12 text-md-right\">\n                            <h4 class=\"gray\">20018.08 ~ </h4>\n                        </div>\n                        <div class=\"col-md-9 col-12\">\n                            <h4>6e Group회사</h4>\n                            <i class=\"gray\">FullStack개발직</i>\n                            <ul class=\"pt-2\">\n                                <li>여러개의 외국프로젝트의 백앤드개발에 참여</li>\n                                <li>iOS，Android의 개발에 참여하여 Stripe, Twilio, Notification 등 테크노를 접촉해봄</li>\n                                <li>위쳇 miniProgram 개발에 참여</li>\n                                <li>주로 Node.js+PostgreSQL+React 를 사용</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <hr/>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 col-12 text-md-right\">\n                            <h4 class=\"gray\">2014.08 ~ 2018.08</h4>\n                        </div>\n                        <div class=\"col-md-9 col-12\">\n                            <h4>길림대학 졸업</h4>\n                            <i class=\"gray\">소프트웨어공학과 전공</i>\n                            <ul class=\"pt-2\">\n                                <li>우수한 성적으로 3등장학금 두번 수여</li>\n                                <li>CET-4</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <hr/>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Growth Process End -->\n\n    <!-- Project Start -->\n    <!--<div class=\"row pt-5\">-->\n        <!--<div class=\"col\">-->\n            <!--<div class=\"row pb-3\">-->\n                <!--<div class=\"col\">-->\n                    <!--<h2 class=\"blue\">PROJECTS</h2>-->\n                <!--</div>-->\n            <!--</div>-->\n\n            <!--<div class=\"row\">-->\n                <!--<div class=\"col\">-->\n                    <!--<div class=\"row\">-->\n                        <!--<div class=\"col-md-3 col-12 text-md-right\">-->\n                            <!--<h4 class=\"gray\">xxxxx</h4>-->\n                        <!--</div>-->\n                        <!--<div class=\"col-md-9 col-12\">-->\n                            <!--<h4>xxxx</h4>-->\n                            <!--<i class=\"gray\">xxx</i>-->\n                            <!--<ul class=\"pt-3\">-->\n                                <!--<li>-->\n                                    <!--<strong>xxx</strong>-->\n                                    <!--<ul>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxxx</li>-->\n                                    <!--</ul>-->\n                                <!--</li>-->\n                                <!--<li>-->\n                                    <!--<strong>xxx</strong>-->\n                                    <!--<ul>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxxx</li>-->\n                                    <!--</ul>-->\n                                <!--</li>-->\n                            <!--</ul>-->\n                        <!--</div>-->\n                    <!--</div>-->\n                    <!--<hr/>-->\n\n\n\n                <!--</div>-->\n            <!--</div>-->\n        <!--</div>-->\n    <!--</div>-->\n    <!-- Project End -->\n\n    <!-- Etc Start -->\n    <!--<div class=\"row pt-5\">-->\n        <!--<div class=\"col\">-->\n            <!--<div class=\"row pb-3\">-->\n                <!--<div class=\"col\">-->\n                    <!--<h2 class=\"blue\">ETC</h2>-->\n                <!--</div>-->\n            <!--</div>-->\n\n            <!--<div class=\"row\">-->\n                <!--<div class=\"col\">-->\n\n                    <!--<div class=\"row\">-->\n                        <!--<div class=\"col-md-3 col-12 text-md-right\">-->\n                            <!--<h4 class=\"gray\">xxx</h4>-->\n                        <!--</div>-->\n                        <!--<div class=\"col-md-9 col-12\">-->\n                            <!--<h4>xx</h4>-->\n                            <!--<i class=\"gray\">xxx</i>-->\n                        <!--</div>-->\n                    <!--</div>-->\n                    <!--<hr/>-->\n\n\n\n                <!--</div>-->\n            <!--</div>-->\n        <!--</div>-->\n    <!--</div>-->\n    <!-- Etc End -->\n\n    <!-- Toolbox Start -->\n    <!--<div class=\"col-md-12 col-sm-12 pt-5\">-->\n        <!--<a href=\"./public/pdf/jinu-resume.pdf\" class=\"btn btn-info btn-block\" role=\"button\" aria-pressed=\"true\">-->\n            <!--<i class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i>-->\n            <!--&nbsp;이력서 PDF 다운받기-->\n        <!--</a>-->\n    <!--</div>-->\n    <!-- Toolbox End -->\n\n    <!-- Footer Start -->\n    <div class=\"row\">\n        <div class=\"col footer-cover\">\n            <div class=\"footer text-center\">\n                <small>Thanks to <a href=\"https://github.com/\" target=\"_blank\"><i class=\"fa fa-github\"></i> Github</a>\n                    and\n                    <a href=\"https://getbootstrap.com/\" target=\"_blank\">Bootstrap</a></small>\n            </div>\n        </div>\n    </div>\n    <!-- Footer End -->\n</div>\n</body>\n</html>\n","date":"2020-05-14T23:09:21.140Z","updated":"2019-06-12T00:12:22.000Z","path":"resume/index.html","title":"","comments":1,"_id":"ckmitc73q0007u60nqip09tqd","content":"<!DOCTYPE html>\n<html>\n<head>\n\n    <!-- Global site tag (gtag.js) - Google Analytics -->\n    <!--<script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-135992499-1\"></script>-->\n    <script>\n        // window.dataLayer = window.dataLayer || [];\n        // function gtag() {\n        //     dataLayer.push(arguments);\n        // }\n        // gtag('js', new Date());\n        // gtag('config', 'xxx');\n    </script>\n\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"user-scalable=no,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,width=device-width\">\n    <meta name=\"description\" content=\"리호의 이력서입니다! \">\n    <meta property=\"og:url\" content=\"https://ybleeho.github.io/resume\">\n    <meta property=\"og:site_name\" content=\"리호 이력서\">\n    <meta property=\"og:title\" content=\"리호 이력서\">\n    <meta property=\"og:description\" content=\"리호의 이력서입니다!\">\n    <meta property=\"og:image\" content=\"https://ybleeho.github.io/resume/avatar.jpeg\">\n    <meta property=\"og:type\" content=\"website\">\n\n    <title>리호 이력서</title>\n\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.bundle.min.js\" integrity=\"sha384-3ziFidFTgxJXHMDttyPJKDuTlmxJlwbSkojudK/CkRqKDOmeSbN6KLrGdrBQnT2n\" crossorigin=\"anonymous\"></script>\n\n    <link rel=\"stylesheet\" href=\"style.css\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/earlyaccess/notosanskr.css\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\">\n\n    <link rel=\"shortcut icon\" type=\"image/png\" href=\"public/images/favicon.ico\">\n\n    <script>\n        $(function () {\n            $('[data-toggle=\"tooltip\"]').tooltip()\n        })\n    </script>\n</head>\n<body>\n<div class=\"container resume\">\n    <!-- Profile Start -->\n    <div class=\"row mt-5\">\n        <div class=\"col-md-3 col-sm-12 pb-3 text-md-right text-center\">\n            <img class=\"img-fluid rounded profile-img\" src=\"avatar.jpeg\" alt=\"Profile\">\n        </div>\n        <div class=\"col-md-9 col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col text-center text-md-left\">\n                    <h1 class=\"blue\">리 호</h1>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col pt-3\">\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"mailto:ybleeho@gmail.com\" target=\"_blank\" style=\"color:darkgray; font-weight: bold\">ybleeho@gmail.com</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <span class=\"text-secondary\">+86 15585589102</span>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-github\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://github.com/ybleeho\" target=\"_blank\" style=\"color:purple; font-weight:bold\">https://github.com/ybleeho</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://www.instagram.com/l2_h5\" target=\"_blank\" style=\"color:pink; font-weight:bold\">https://www.instagram.com/l2_h5</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-rss\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://ybleeho.github.io\" target=\"_blank\" style=\"color:pink; font-weight:bold\">https://ybleeho.github.io</a>\n                            <a href=\"https://www.cnblogs.com/ybleeho/\" target=\"_blank\" style=\"color:pink; font-weight:bold\">https://www.cnblogs.com/ybleeho/</a>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <div class=\"alert alert-secondary\" role=\"alert\">\n                                <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>&nbsp;\n                                연락은 <strong>이메일 혹은 위쳇(전화번호)</strong>모두 가능합니다.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Profile End -->\n\n    <!-- Introduce Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col-12 col-md-3\">\n            <h2 class=\"blue\">INTRODUCE</h2>\n        </div>\n        <div class=\"col-12 col-md-9\">\n            <p>&nbsp&nbsp 저는 길림대학 소프트웨어학과를 전공하고 지금 약 1년간의 개발직을 맡고 있습니다.주로는 Node, PostgreSQL 를 이용한\n                iOS, Android, miniProgram 등의 Backend 부분의 개발과 Frontend의 React를 이용한 매니지 시스템의 개발을 담당하고 있습니다.</p>\n            <p>&nbsp </p>\n        </div>\n    </div>\n    <!-- Introduce End -->\n\n    <!-- Skills Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col\">\n            <div class=\"row pb-3\">\n                <div class=\"col\">\n                    <h2>\n                <span class=\"blue\">\n                  SKILLS\n                </span>\n                        <small data-toggle=\"tooltip\" title=\"1: 기초 / 2: 중급 / 3: 고급\">\n                            <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n                        </small>\n                    </h2>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12 col-md-3 text-md-right\">\n                    <h4 class=\"gray\">Backend</h4>\n                </div>\n                <div class=\"col-12 col-md-9\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Node.js\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Express\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    PostgreSQL\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Sequelize\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    RESTful API\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Linux\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <hr>\n\n            <div class=\"row\">\n                <div class=\"col-12 col-md-3 text-md-right\">\n                    <h4 class=\"gray\">Frontend&Etc</h4>\n                </div>\n                <div class=\"col-12 col-md-9\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    React\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Redux\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Html,CSS\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Git\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n    <!-- Skills End -->\n\n    <!-- Growth Process Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col\">\n            <div class=\"row pb-3\">\n                <div class=\"col\">\n                    <h2 class=\"blue\">GROWTH PROCESS</h2>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col\">\n                    <div class=\"row\">\n                        <div class=\"col-md-3 col-12 text-md-right\">\n                            <h4 class=\"gray\">20018.08 ~ </h4>\n                        </div>\n                        <div class=\"col-md-9 col-12\">\n                            <h4>6e Group회사</h4>\n                            <i class=\"gray\">FullStack개발직</i>\n                            <ul class=\"pt-2\">\n                                <li>여러개의 외국프로젝트의 백앤드개발에 참여</li>\n                                <li>iOS，Android의 개발에 참여하여 Stripe, Twilio, Notification 등 테크노를 접촉해봄</li>\n                                <li>위쳇 miniProgram 개발에 참여</li>\n                                <li>주로 Node.js+PostgreSQL+React 를 사용</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <hr>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 col-12 text-md-right\">\n                            <h4 class=\"gray\">2014.08 ~ 2018.08</h4>\n                        </div>\n                        <div class=\"col-md-9 col-12\">\n                            <h4>길림대학 졸업</h4>\n                            <i class=\"gray\">소프트웨어공학과 전공</i>\n                            <ul class=\"pt-2\">\n                                <li>우수한 성적으로 3등장학금 두번 수여</li>\n                                <li>CET-4</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <hr>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Growth Process End -->\n\n    <!-- Project Start -->\n    <!--<div class=\"row pt-5\">-->\n        <!--<div class=\"col\">-->\n            <!--<div class=\"row pb-3\">-->\n                <!--<div class=\"col\">-->\n                    <!--<h2 class=\"blue\">PROJECTS</h2>-->\n                <!--</div>-->\n            <!--</div>-->\n\n            <!--<div class=\"row\">-->\n                <!--<div class=\"col\">-->\n                    <!--<div class=\"row\">-->\n                        <!--<div class=\"col-md-3 col-12 text-md-right\">-->\n                            <!--<h4 class=\"gray\">xxxxx</h4>-->\n                        <!--</div>-->\n                        <!--<div class=\"col-md-9 col-12\">-->\n                            <!--<h4>xxxx</h4>-->\n                            <!--<i class=\"gray\">xxx</i>-->\n                            <!--<ul class=\"pt-3\">-->\n                                <!--<li>-->\n                                    <!--<strong>xxx</strong>-->\n                                    <!--<ul>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxxx</li>-->\n                                    <!--</ul>-->\n                                <!--</li>-->\n                                <!--<li>-->\n                                    <!--<strong>xxx</strong>-->\n                                    <!--<ul>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxxx</li>-->\n                                    <!--</ul>-->\n                                <!--</li>-->\n                            <!--</ul>-->\n                        <!--</div>-->\n                    <!--</div>-->\n                    <!--<hr/>-->\n\n\n\n                <!--</div>-->\n            <!--</div>-->\n        <!--</div>-->\n    <!--</div>-->\n    <!-- Project End -->\n\n    <!-- Etc Start -->\n    <!--<div class=\"row pt-5\">-->\n        <!--<div class=\"col\">-->\n            <!--<div class=\"row pb-3\">-->\n                <!--<div class=\"col\">-->\n                    <!--<h2 class=\"blue\">ETC</h2>-->\n                <!--</div>-->\n            <!--</div>-->\n\n            <!--<div class=\"row\">-->\n                <!--<div class=\"col\">-->\n\n                    <!--<div class=\"row\">-->\n                        <!--<div class=\"col-md-3 col-12 text-md-right\">-->\n                            <!--<h4 class=\"gray\">xxx</h4>-->\n                        <!--</div>-->\n                        <!--<div class=\"col-md-9 col-12\">-->\n                            <!--<h4>xx</h4>-->\n                            <!--<i class=\"gray\">xxx</i>-->\n                        <!--</div>-->\n                    <!--</div>-->\n                    <!--<hr/>-->\n\n\n\n                <!--</div>-->\n            <!--</div>-->\n        <!--</div>-->\n    <!--</div>-->\n    <!-- Etc End -->\n\n    <!-- Toolbox Start -->\n    <!--<div class=\"col-md-12 col-sm-12 pt-5\">-->\n        <!--<a href=\"./public/pdf/jinu-resume.pdf\" class=\"btn btn-info btn-block\" role=\"button\" aria-pressed=\"true\">-->\n            <!--<i class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i>-->\n            <!--&nbsp;이력서 PDF 다운받기-->\n        <!--</a>-->\n    <!--</div>-->\n    <!-- Toolbox End -->\n\n    <!-- Footer Start -->\n    <div class=\"row\">\n        <div class=\"col footer-cover\">\n            <div class=\"footer text-center\">\n                <small>Thanks to <a href=\"https://github.com/\" target=\"_blank\"><i class=\"fa fa-github\"></i> Github</a>\n                    and\n                    <a href=\"https://getbootstrap.com/\" target=\"_blank\">Bootstrap</a></small>\n            </div>\n        </div>\n    </div>\n    <!-- Footer End -->\n</div>\n</body>\n</html>\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html>\n<head>\n\n    <!-- Global site tag (gtag.js) - Google Analytics -->\n    <!--<script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-135992499-1\"></script>-->\n    <script>\n        // window.dataLayer = window.dataLayer || [];\n        // function gtag() {\n        //     dataLayer.push(arguments);\n        // }\n        // gtag('js', new Date());\n        // gtag('config', 'xxx');\n    </script>\n\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\"\n          content=\"user-scalable=no,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,width=device-width\">\n    <meta name=\"description\" content=\"리호의 이력서입니다! \"/>\n    <meta property=\"og:url\" content=\"https://ybleeho.github.io/resume\"/>\n    <meta property=\"og:site_name\" content=\"리호 이력서\"/>\n    <meta property=\"og:title\" content=\"리호 이력서\"/>\n    <meta property=\"og:description\" content=\"리호의 이력서입니다!\"/>\n    <meta property=\"og:image\" content=\"https://ybleeho.github.io/resume/avatar.jpeg\"/>\n    <meta property=\"og:type\" content=\"website\"/>\n\n    <title>리호 이력서</title>\n\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.bundle.min.js\"\n            integrity=\"sha384-3ziFidFTgxJXHMDttyPJKDuTlmxJlwbSkojudK/CkRqKDOmeSbN6KLrGdrBQnT2n\"\n            crossorigin=\"anonymous\"></script>\n\n    <link rel=\"stylesheet\" href=\"style.css\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/earlyaccess/notosanskr.css\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" rel=\"stylesheet\"\n          integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\">\n\n    <link rel=\"shortcut icon\" type=\"image/png\" href=\"public/images/favicon.ico\"/>\n\n    <script>\n        $(function () {\n            $('[data-toggle=\"tooltip\"]').tooltip()\n        })\n    </script>\n</head>\n<body>\n<div class=\"container resume\">\n    <!-- Profile Start -->\n    <div class=\"row mt-5\">\n        <div class=\"col-md-3 col-sm-12 pb-3 text-md-right text-center\">\n            <img class=\"img-fluid rounded profile-img\" src=\"avatar.jpeg\" alt=\"Profile\">\n        </div>\n        <div class=\"col-md-9 col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col text-center text-md-left\">\n                    <h1 class=\"blue\">리 호</h1>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col pt-3\">\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"mailto:ybleeho@gmail.com\" target=\"_blank\"\n                               style=\"color:darkgray; font-weight: bold\">ybleeho@gmail.com</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <span class=\"text-secondary\">+86 15585589102</span>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-github\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://github.com/ybleeho\" target=\"_blank\" style=\"color:purple; font-weight:bold\">https://github.com/ybleeho</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://www.instagram.com/l2_h5\" target=\"_blank\"\n                               style=\"color:pink; font-weight:bold\">https://www.instagram.com/l2_h5</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-rss\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://ybleeho.github.io\" target=\"_blank\"\n                               style=\"color:pink; font-weight:bold\">https://ybleeho.github.io</a>\n                            <a href=\"https://www.cnblogs.com/ybleeho/\" target=\"_blank\"\n                               style=\"color:pink; font-weight:bold\">https://www.cnblogs.com/ybleeho/</a>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <div class=\"alert alert-secondary\" role=\"alert\">\n                                <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>&nbsp;\n                                연락은 <strong>이메일 혹은 위쳇(전화번호)</strong>모두 가능합니다.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Profile End -->\n\n    <!-- Introduce Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col-12 col-md-3\">\n            <h2 class=\"blue\">INTRODUCE</h2>\n        </div>\n        <div class=\"col-12 col-md-9\">\n            <p>&nbsp&nbsp 저는 길림대학 소프트웨어학과를 전공하고 지금 약 1년간의 개발직을 맡고 있습니다.주로는 Node, PostgreSQL 를 이용한\n                iOS, Android, miniProgram 등의 Backend 부분의 개발과 Frontend의 React를 이용한 매니지 시스템의 개발을 담당하고 있습니다.</p>\n            <p>&nbsp </p>\n        </div>\n    </div>\n    <!-- Introduce End -->\n\n    <!-- Skills Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col\">\n            <div class=\"row pb-3\">\n                <div class=\"col\">\n                    <h2>\n                <span class=\"blue\">\n                  SKILLS\n                </span>\n                        <small data-toggle=\"tooltip\" title=\"1: 기초 / 2: 중급 / 3: 고급\">\n                            <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n                        </small>\n                    </h2>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12 col-md-3 text-md-right\">\n                    <h4 class=\"gray\">Backend</h4>\n                </div>\n                <div class=\"col-12 col-md-9\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Node.js\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Express\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    PostgreSQL\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Sequelize\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    RESTful API\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Linux\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <hr/>\n\n            <div class=\"row\">\n                <div class=\"col-12 col-md-3 text-md-right\">\n                    <h4 class=\"gray\">Frontend&Etc</h4>\n                </div>\n                <div class=\"col-12 col-md-9\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    React\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Redux\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Html,CSS\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Git\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n    <!-- Skills End -->\n\n    <!-- Growth Process Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col\">\n            <div class=\"row pb-3\">\n                <div class=\"col\">\n                    <h2 class=\"blue\">GROWTH PROCESS</h2>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col\">\n                    <div class=\"row\">\n                        <div class=\"col-md-3 col-12 text-md-right\">\n                            <h4 class=\"gray\">20018.08 ~ </h4>\n                        </div>\n                        <div class=\"col-md-9 col-12\">\n                            <h4>6e Group회사</h4>\n                            <i class=\"gray\">FullStack개발직</i>\n                            <ul class=\"pt-2\">\n                                <li>여러개의 외국프로젝트의 백앤드개발에 참여</li>\n                                <li>iOS，Android의 개발에 참여하여 Stripe, Twilio, Notification 등 테크노를 접촉해봄</li>\n                                <li>위쳇 miniProgram 개발에 참여</li>\n                                <li>주로 Node.js+PostgreSQL+React 를 사용</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <hr/>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 col-12 text-md-right\">\n                            <h4 class=\"gray\">2014.08 ~ 2018.08</h4>\n                        </div>\n                        <div class=\"col-md-9 col-12\">\n                            <h4>길림대학 졸업</h4>\n                            <i class=\"gray\">소프트웨어공학과 전공</i>\n                            <ul class=\"pt-2\">\n                                <li>우수한 성적으로 3등장학금 두번 수여</li>\n                                <li>CET-4</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <hr/>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Growth Process End -->\n\n    <!-- Project Start -->\n    <!--<div class=\"row pt-5\">-->\n        <!--<div class=\"col\">-->\n            <!--<div class=\"row pb-3\">-->\n                <!--<div class=\"col\">-->\n                    <!--<h2 class=\"blue\">PROJECTS</h2>-->\n                <!--</div>-->\n            <!--</div>-->\n\n            <!--<div class=\"row\">-->\n                <!--<div class=\"col\">-->\n                    <!--<div class=\"row\">-->\n                        <!--<div class=\"col-md-3 col-12 text-md-right\">-->\n                            <!--<h4 class=\"gray\">xxxxx</h4>-->\n                        <!--</div>-->\n                        <!--<div class=\"col-md-9 col-12\">-->\n                            <!--<h4>xxxx</h4>-->\n                            <!--<i class=\"gray\">xxx</i>-->\n                            <!--<ul class=\"pt-3\">-->\n                                <!--<li>-->\n                                    <!--<strong>xxx</strong>-->\n                                    <!--<ul>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxxx</li>-->\n                                    <!--</ul>-->\n                                <!--</li>-->\n                                <!--<li>-->\n                                    <!--<strong>xxx</strong>-->\n                                    <!--<ul>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxxx</li>-->\n                                    <!--</ul>-->\n                                <!--</li>-->\n                            <!--</ul>-->\n                        <!--</div>-->\n                    <!--</div>-->\n                    <!--<hr/>-->\n\n\n\n                <!--</div>-->\n            <!--</div>-->\n        <!--</div>-->\n    <!--</div>-->\n    <!-- Project End -->\n\n    <!-- Etc Start -->\n    <!--<div class=\"row pt-5\">-->\n        <!--<div class=\"col\">-->\n            <!--<div class=\"row pb-3\">-->\n                <!--<div class=\"col\">-->\n                    <!--<h2 class=\"blue\">ETC</h2>-->\n                <!--</div>-->\n            <!--</div>-->\n\n            <!--<div class=\"row\">-->\n                <!--<div class=\"col\">-->\n\n                    <!--<div class=\"row\">-->\n                        <!--<div class=\"col-md-3 col-12 text-md-right\">-->\n                            <!--<h4 class=\"gray\">xxx</h4>-->\n                        <!--</div>-->\n                        <!--<div class=\"col-md-9 col-12\">-->\n                            <!--<h4>xx</h4>-->\n                            <!--<i class=\"gray\">xxx</i>-->\n                        <!--</div>-->\n                    <!--</div>-->\n                    <!--<hr/>-->\n\n\n\n                <!--</div>-->\n            <!--</div>-->\n        <!--</div>-->\n    <!--</div>-->\n    <!-- Etc End -->\n\n    <!-- Toolbox Start -->\n    <!--<div class=\"col-md-12 col-sm-12 pt-5\">-->\n        <!--<a href=\"./public/pdf/jinu-resume.pdf\" class=\"btn btn-info btn-block\" role=\"button\" aria-pressed=\"true\">-->\n            <!--<i class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i>-->\n            <!--&nbsp;이력서 PDF 다운받기-->\n        <!--</a>-->\n    <!--</div>-->\n    <!-- Toolbox End -->\n\n    <!-- Footer Start -->\n    <div class=\"row\">\n        <div class=\"col footer-cover\">\n            <div class=\"footer text-center\">\n                <small>Thanks to <a href=\"https://github.com/\" target=\"_blank\"><i class=\"fa fa-github\"></i> Github</a>\n                    and\n                    <a href=\"https://getbootstrap.com/\" target=\"_blank\">Bootstrap</a></small>\n            </div>\n        </div>\n    </div>\n    <!-- Footer End -->\n</div>\n</body>\n</html>\n"},{"title":"about","date":"2019-05-20T10:14:09.000Z","_content":"\nWechat&Mobile: 15585589102\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2019-05-20 18:14:09\n---\n\nWechat&Mobile: 15585589102\n","updated":"2019-05-20T10:23:37.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckmitc73s0009u60npjnjetgq","content":"<p>Wechat&amp;Mobile: 15585589102</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Wechat&amp;Mobile: 15585589102</p>\n"},{"_content":".resume {\n    font-family: 'Noto Sans KR', sans-serif;\n    font-weight: 300;\n    word-wrap: break-word;\n    word-break: keep-all;\n    line-height: 1.8\n}\n\n.blue {\n    color: #3c78d8;\n}\n\n.gray {\n    color: gray;\n}\n\n.profile-img {\n    max-height: 320px;\n}\n\n.footer-cover {\n    background-color: #f5f5f5;\n    padding-left: 0;\n    padding-right: 0;\n    margin-top: 50px;\n    height: 80px;\n}\n\n.footer {\n    padding-top: 10px;\n}\n","source":"resume-cn/style.css","raw":".resume {\n    font-family: 'Noto Sans KR', sans-serif;\n    font-weight: 300;\n    word-wrap: break-word;\n    word-break: keep-all;\n    line-height: 1.8\n}\n\n.blue {\n    color: #3c78d8;\n}\n\n.gray {\n    color: gray;\n}\n\n.profile-img {\n    max-height: 320px;\n}\n\n.footer-cover {\n    background-color: #f5f5f5;\n    padding-left: 0;\n    padding-right: 0;\n    margin-top: 50px;\n    height: 80px;\n}\n\n.footer {\n    padding-top: 10px;\n}\n","date":"2020-05-14T23:09:21.140Z","updated":"2019-04-23T08:23:08.000Z","path":"resume-cn/style.css","layout":"false","title":"","comments":1,"_id":"ckmitc73t000bu60nrp7ftfov","content":".resume {\n    font-family: 'Noto Sans KR', sans-serif;\n    font-weight: 300;\n    word-wrap: break-word;\n    word-break: keep-all;\n    line-height: 1.8\n}\n\n.blue {\n    color: #3c78d8;\n}\n\n.gray {\n    color: gray;\n}\n\n.profile-img {\n    max-height: 320px;\n}\n\n.footer-cover {\n    background-color: #f5f5f5;\n    padding-left: 0;\n    padding-right: 0;\n    margin-top: 50px;\n    height: 80px;\n}\n\n.footer {\n    padding-top: 10px;\n}\n","site":{"data":{}},"excerpt":"","more":".resume {\n    font-family: 'Noto Sans KR', sans-serif;\n    font-weight: 300;\n    word-wrap: break-word;\n    word-break: keep-all;\n    line-height: 1.8\n}\n\n.blue {\n    color: #3c78d8;\n}\n\n.gray {\n    color: gray;\n}\n\n.profile-img {\n    max-height: 320px;\n}\n\n.footer-cover {\n    background-color: #f5f5f5;\n    padding-left: 0;\n    padding-right: 0;\n    margin-top: 50px;\n    height: 80px;\n}\n\n.footer {\n    padding-top: 10px;\n}\n"},{"layout":"false","_content":"<!DOCTYPE html>\n<html>\n<head>\n\n    <!-- Global site tag (gtag.js) - Google Analytics -->\n    <!--<script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-135992499-1\"></script>-->\n    <script>\n        // window.dataLayer = window.dataLayer || [];\n        // function gtag() {\n        //     dataLayer.push(arguments);\n        // }\n        // gtag('js', new Date());\n        // gtag('config', 'xxx');\n    </script>\n\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\"\n          content=\"user-scalable=no,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,width=device-width\">\n    <meta name=\"description\" content=\"李虎的简历! \"/>\n    <meta property=\"og:url\" content=\"https://ybleeho.github.io/resume\"/>\n    <meta property=\"og:site_name\" content=\"李虎的简历\"/>\n    <meta property=\"og:title\" content=\"李虎的简历\"/>\n    <meta property=\"og:description\" content=\"李虎的简历! \"/>\n    <meta property=\"og:image\" content=\"https://ybleeho.github.io/resume/avatar.jpeg\"/>\n    <meta property=\"og:type\" content=\"website\"/>\n\n    <title>简历</title>\n\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.bundle.min.js\"\n            integrity=\"sha384-3ziFidFTgxJXHMDttyPJKDuTlmxJlwbSkojudK/CkRqKDOmeSbN6KLrGdrBQnT2n\"\n            crossorigin=\"anonymous\"></script>\n\n    <link rel=\"stylesheet\" href=\"style.css\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/earlyaccess/notosanskr.css\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" rel=\"stylesheet\"\n          integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\">\n\n    <link rel=\"shortcut icon\" type=\"image/png\" href=\"public/images/favicon.ico\"/>\n\n    <script>\n        $(function () {\n            $('[data-toggle=\"tooltip\"]').tooltip()\n        })\n    </script>\n</head>\n<body>\n<div class=\"container resume\">\n    <!-- Profile Start -->\n    <div class=\"row mt-5\">\n        <div class=\"col-md-3 col-sm-12 pb-3 text-md-right text-center\">\n            <img class=\"img-fluid rounded profile-img\" src=\"avatar.jpeg\" alt=\"Profile\">\n        </div>\n        <div class=\"col-md-9 col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col text-center text-md-left\">\n                    <h1 class=\"blue\">李 虎</h1>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col pt-3\">\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"mailto:ybleeho@gmail.com\" target=\"_blank\"\n                               style=\"color:darkgray; font-weight: bold\">ybleeho@gmail.com</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <span class=\"text-secondary\">+86 15585589102</span>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-github\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://github.com/ybleeho\" target=\"_blank\" style=\"color:purple; font-weight:bold\">https://github.com/ybleeho</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://www.instagram.com/l2_h5\" target=\"_blank\"\n                               style=\"color:pink; font-weight:bold\">https://www.instagram.com/l2_h5</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-rss\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://ybleeho.github.io\" target=\"_blank\"\n                               style=\"color:pink; font-weight:bold\">https://ybleeho.github.io</a>\n                            <a href=\"https://www.cnblogs.com/ybleeho/\" target=\"_blank\"\n                               style=\"color:pink; font-weight:bold\">https://www.cnblogs.com/ybleeho/</a>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <div class=\"alert alert-secondary\" role=\"alert\">\n                                <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>&nbsp;\n                                可由<strong>邮箱或微信(手机)</strong>与我联系.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Profile End -->\n\n    <!-- Introduce Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col-12 col-md-3\">\n            <h2 class=\"blue\">INTRODUCE</h2>\n        </div>\n        <div class=\"col-12 col-md-9\">\n            <p>&nbsp&nbsp 毕业于吉林大学软件工程，已在全栈开发岗位工作1年。主要使用Nodejs，PostgreSql进行了多个iOS, Android, 小程序的\n            后端开发以及使用React开发后台管理系统。</p>\n            <p>&nbsp </p>\n        </div>\n    </div>\n    <!-- Introduce End -->\n\n    <!-- Skills Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col\">\n            <div class=\"row pb-3\">\n                <div class=\"col\">\n                    <h2>\n                <span class=\"blue\">\n                  SKILLS\n                </span>\n                        <small data-toggle=\"tooltip\" title=\"1: 了解 / 2: 熟悉 / 3: 熟练\">\n                            <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n                        </small>\n                    </h2>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12 col-md-3 text-md-right\">\n                    <h4 class=\"gray\">Backend</h4>\n                </div>\n                <div class=\"col-12 col-md-9\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    PostgreSQL\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Node.js\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Express\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Sequelize\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    RESTful API\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Async, Moment, Lodash\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Postman, Jmeter\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Linux\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <hr/>\n\n            <div class=\"row\">\n                <div class=\"col-12 col-md-3 text-md-right\">\n                    <h4 class=\"gray\">Frontend&Etc</h4>\n                </div>\n                <div class=\"col-12 col-md-9\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    React\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Redux\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Ant Design\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Git\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n    <!-- Skills End -->\n\n    <!-- Growth Process Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col\">\n            <div class=\"row pb-3\">\n                <div class=\"col\">\n                    <h2 class=\"blue\">GROWTH PROCESS</h2>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col\">\n                    <div class=\"row\">\n                        <div class=\"col-md-3 col-12 text-md-right\">\n                            <h4 class=\"gray\">20018.08 ~ </h4>\n                        </div>\n                        <div class=\"col-md-9 col-12\">\n                            <h4>6e Group</h4>\n                            <i class=\"gray\">FullStack开发</i>\n                            <ul class=\"pt-2\">\n                                <li>\n                                    参与xxSOS app的开发。主要功能有登陆注册、紧急联系人的添加、使用Twilio的短信以及语音服务、\n                                    使用socket的用户位置追踪服务、使用谷歌地图api的位置服务、以及使用React的后台管理系统。\n                                </li>\n                                <li>\n                                    参与xx service app的开发。主要功能有登陆注册、对于用户的Booking房间的功能、使用Stripe的订阅Plan的功能、\n                                    公司与员工个人的Credits功能、对于公司的Plan功能、以及使用React的后台进行各种资源的管理、信息展示与修改、日志等功能。\n                                </li>\n                                <li>参与多个商城类的微信小程序的项目，比较熟悉微信的授权登录等流程及api。</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <hr/>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 col-12 text-md-right\">\n                            <h4 class=\"gray\">2014.08 ~ 2018.08</h4>\n                        </div>\n                        <div class=\"col-md-9 col-12\">\n                            <h4>吉林大学</h4>\n                            <i class=\"gray\">软件工程</i>\n                            <ul class=\"pt-2\">\n                                <li>获得两次三等奖学金</li>\n                                <li>CET-4</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <hr/>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Growth Process End -->\n\n    <!-- Project Start -->\n    <!--<div class=\"row pt-5\">-->\n        <!--<div class=\"col\">-->\n            <!--<div class=\"row pb-3\">-->\n                <!--<div class=\"col\">-->\n                    <!--<h2 class=\"blue\">PROJECTS</h2>-->\n                <!--</div>-->\n            <!--</div>-->\n\n            <!--<div class=\"row\">-->\n                <!--<div class=\"col\">-->\n                    <!--<div class=\"row\">-->\n                        <!--<div class=\"col-md-3 col-12 text-md-right\">-->\n                            <!--<h4 class=\"gray\">xxxxx</h4>-->\n                        <!--</div>-->\n                        <!--<div class=\"col-md-9 col-12\">-->\n                            <!--<h4>xxxx</h4>-->\n                            <!--<i class=\"gray\">xxx</i>-->\n                            <!--<ul class=\"pt-3\">-->\n                                <!--<li>-->\n                                    <!--<strong>xxx</strong>-->\n                                    <!--<ul>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxxx</li>-->\n                                    <!--</ul>-->\n                                <!--</li>-->\n                                <!--<li>-->\n                                    <!--<strong>xxx</strong>-->\n                                    <!--<ul>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxxx</li>-->\n                                    <!--</ul>-->\n                                <!--</li>-->\n                            <!--</ul>-->\n                        <!--</div>-->\n                    <!--</div>-->\n                    <!--<hr/>-->\n\n\n\n                <!--</div>-->\n            <!--</div>-->\n        <!--</div>-->\n    <!--</div>-->\n    <!-- Project End -->\n\n    <!-- Etc Start -->\n    <!--<div class=\"row pt-5\">-->\n        <!--<div class=\"col\">-->\n            <!--<div class=\"row pb-3\">-->\n                <!--<div class=\"col\">-->\n                    <!--<h2 class=\"blue\">ETC</h2>-->\n                <!--</div>-->\n            <!--</div>-->\n\n            <!--<div class=\"row\">-->\n                <!--<div class=\"col\">-->\n\n                    <!--<div class=\"row\">-->\n                        <!--<div class=\"col-md-3 col-12 text-md-right\">-->\n                            <!--<h4 class=\"gray\">xxx</h4>-->\n                        <!--</div>-->\n                        <!--<div class=\"col-md-9 col-12\">-->\n                            <!--<h4>xx</h4>-->\n                            <!--<i class=\"gray\">xxx</i>-->\n                        <!--</div>-->\n                    <!--</div>-->\n                    <!--<hr/>-->\n\n\n\n                <!--</div>-->\n            <!--</div>-->\n        <!--</div>-->\n    <!--</div>-->\n    <!-- Etc End -->\n\n    <!-- Toolbox Start -->\n    <!--<div class=\"col-md-12 col-sm-12 pt-5\">-->\n        <!--<a href=\"./public/pdf/jinu-resume.pdf\" class=\"btn btn-info btn-block\" role=\"button\" aria-pressed=\"true\">-->\n            <!--<i class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i>-->\n            <!--&nbsp;下载简历-->\n        <!--</a>-->\n    <!--</div>-->\n    <!-- Toolbox End -->\n\n    <!-- Footer Start -->\n    <div class=\"row\">\n        <div class=\"col footer-cover\">\n            <div class=\"footer text-center\">\n                <small>Thanks to <a href=\"https://github.com/\" target=\"_blank\"><i class=\"fa fa-github\"></i> Github</a>\n                    and\n                    <a href=\"https://getbootstrap.com/\" target=\"_blank\">Bootstrap</a></small>\n            </div>\n        </div>\n    </div>\n    <!-- Footer End -->\n</div>\n</body>\n</html>\n","source":"resume-cn/index.html","raw":"layout: false\n---\n<!DOCTYPE html>\n<html>\n<head>\n\n    <!-- Global site tag (gtag.js) - Google Analytics -->\n    <!--<script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-135992499-1\"></script>-->\n    <script>\n        // window.dataLayer = window.dataLayer || [];\n        // function gtag() {\n        //     dataLayer.push(arguments);\n        // }\n        // gtag('js', new Date());\n        // gtag('config', 'xxx');\n    </script>\n\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\"\n          content=\"user-scalable=no,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,width=device-width\">\n    <meta name=\"description\" content=\"李虎的简历! \"/>\n    <meta property=\"og:url\" content=\"https://ybleeho.github.io/resume\"/>\n    <meta property=\"og:site_name\" content=\"李虎的简历\"/>\n    <meta property=\"og:title\" content=\"李虎的简历\"/>\n    <meta property=\"og:description\" content=\"李虎的简历! \"/>\n    <meta property=\"og:image\" content=\"https://ybleeho.github.io/resume/avatar.jpeg\"/>\n    <meta property=\"og:type\" content=\"website\"/>\n\n    <title>简历</title>\n\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.bundle.min.js\"\n            integrity=\"sha384-3ziFidFTgxJXHMDttyPJKDuTlmxJlwbSkojudK/CkRqKDOmeSbN6KLrGdrBQnT2n\"\n            crossorigin=\"anonymous\"></script>\n\n    <link rel=\"stylesheet\" href=\"style.css\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/earlyaccess/notosanskr.css\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" rel=\"stylesheet\"\n          integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\">\n\n    <link rel=\"shortcut icon\" type=\"image/png\" href=\"public/images/favicon.ico\"/>\n\n    <script>\n        $(function () {\n            $('[data-toggle=\"tooltip\"]').tooltip()\n        })\n    </script>\n</head>\n<body>\n<div class=\"container resume\">\n    <!-- Profile Start -->\n    <div class=\"row mt-5\">\n        <div class=\"col-md-3 col-sm-12 pb-3 text-md-right text-center\">\n            <img class=\"img-fluid rounded profile-img\" src=\"avatar.jpeg\" alt=\"Profile\">\n        </div>\n        <div class=\"col-md-9 col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col text-center text-md-left\">\n                    <h1 class=\"blue\">李 虎</h1>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col pt-3\">\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"mailto:ybleeho@gmail.com\" target=\"_blank\"\n                               style=\"color:darkgray; font-weight: bold\">ybleeho@gmail.com</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <span class=\"text-secondary\">+86 15585589102</span>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-github\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://github.com/ybleeho\" target=\"_blank\" style=\"color:purple; font-weight:bold\">https://github.com/ybleeho</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://www.instagram.com/l2_h5\" target=\"_blank\"\n                               style=\"color:pink; font-weight:bold\">https://www.instagram.com/l2_h5</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-rss\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://ybleeho.github.io\" target=\"_blank\"\n                               style=\"color:pink; font-weight:bold\">https://ybleeho.github.io</a>\n                            <a href=\"https://www.cnblogs.com/ybleeho/\" target=\"_blank\"\n                               style=\"color:pink; font-weight:bold\">https://www.cnblogs.com/ybleeho/</a>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <div class=\"alert alert-secondary\" role=\"alert\">\n                                <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>&nbsp;\n                                可由<strong>邮箱或微信(手机)</strong>与我联系.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Profile End -->\n\n    <!-- Introduce Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col-12 col-md-3\">\n            <h2 class=\"blue\">INTRODUCE</h2>\n        </div>\n        <div class=\"col-12 col-md-9\">\n            <p>&nbsp&nbsp 毕业于吉林大学软件工程，已在全栈开发岗位工作1年。主要使用Nodejs，PostgreSql进行了多个iOS, Android, 小程序的\n            后端开发以及使用React开发后台管理系统。</p>\n            <p>&nbsp </p>\n        </div>\n    </div>\n    <!-- Introduce End -->\n\n    <!-- Skills Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col\">\n            <div class=\"row pb-3\">\n                <div class=\"col\">\n                    <h2>\n                <span class=\"blue\">\n                  SKILLS\n                </span>\n                        <small data-toggle=\"tooltip\" title=\"1: 了解 / 2: 熟悉 / 3: 熟练\">\n                            <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n                        </small>\n                    </h2>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12 col-md-3 text-md-right\">\n                    <h4 class=\"gray\">Backend</h4>\n                </div>\n                <div class=\"col-12 col-md-9\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    PostgreSQL\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Node.js\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Express\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Sequelize\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    RESTful API\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Async, Moment, Lodash\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Postman, Jmeter\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Linux\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <hr/>\n\n            <div class=\"row\">\n                <div class=\"col-12 col-md-3 text-md-right\">\n                    <h4 class=\"gray\">Frontend&Etc</h4>\n                </div>\n                <div class=\"col-12 col-md-9\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    React\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Redux\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Ant Design\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Git\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n    <!-- Skills End -->\n\n    <!-- Growth Process Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col\">\n            <div class=\"row pb-3\">\n                <div class=\"col\">\n                    <h2 class=\"blue\">GROWTH PROCESS</h2>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col\">\n                    <div class=\"row\">\n                        <div class=\"col-md-3 col-12 text-md-right\">\n                            <h4 class=\"gray\">20018.08 ~ </h4>\n                        </div>\n                        <div class=\"col-md-9 col-12\">\n                            <h4>6e Group</h4>\n                            <i class=\"gray\">FullStack开发</i>\n                            <ul class=\"pt-2\">\n                                <li>\n                                    参与xxSOS app的开发。主要功能有登陆注册、紧急联系人的添加、使用Twilio的短信以及语音服务、\n                                    使用socket的用户位置追踪服务、使用谷歌地图api的位置服务、以及使用React的后台管理系统。\n                                </li>\n                                <li>\n                                    参与xx service app的开发。主要功能有登陆注册、对于用户的Booking房间的功能、使用Stripe的订阅Plan的功能、\n                                    公司与员工个人的Credits功能、对于公司的Plan功能、以及使用React的后台进行各种资源的管理、信息展示与修改、日志等功能。\n                                </li>\n                                <li>参与多个商城类的微信小程序的项目，比较熟悉微信的授权登录等流程及api。</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <hr/>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 col-12 text-md-right\">\n                            <h4 class=\"gray\">2014.08 ~ 2018.08</h4>\n                        </div>\n                        <div class=\"col-md-9 col-12\">\n                            <h4>吉林大学</h4>\n                            <i class=\"gray\">软件工程</i>\n                            <ul class=\"pt-2\">\n                                <li>获得两次三等奖学金</li>\n                                <li>CET-4</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <hr/>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Growth Process End -->\n\n    <!-- Project Start -->\n    <!--<div class=\"row pt-5\">-->\n        <!--<div class=\"col\">-->\n            <!--<div class=\"row pb-3\">-->\n                <!--<div class=\"col\">-->\n                    <!--<h2 class=\"blue\">PROJECTS</h2>-->\n                <!--</div>-->\n            <!--</div>-->\n\n            <!--<div class=\"row\">-->\n                <!--<div class=\"col\">-->\n                    <!--<div class=\"row\">-->\n                        <!--<div class=\"col-md-3 col-12 text-md-right\">-->\n                            <!--<h4 class=\"gray\">xxxxx</h4>-->\n                        <!--</div>-->\n                        <!--<div class=\"col-md-9 col-12\">-->\n                            <!--<h4>xxxx</h4>-->\n                            <!--<i class=\"gray\">xxx</i>-->\n                            <!--<ul class=\"pt-3\">-->\n                                <!--<li>-->\n                                    <!--<strong>xxx</strong>-->\n                                    <!--<ul>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxxx</li>-->\n                                    <!--</ul>-->\n                                <!--</li>-->\n                                <!--<li>-->\n                                    <!--<strong>xxx</strong>-->\n                                    <!--<ul>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxxx</li>-->\n                                    <!--</ul>-->\n                                <!--</li>-->\n                            <!--</ul>-->\n                        <!--</div>-->\n                    <!--</div>-->\n                    <!--<hr/>-->\n\n\n\n                <!--</div>-->\n            <!--</div>-->\n        <!--</div>-->\n    <!--</div>-->\n    <!-- Project End -->\n\n    <!-- Etc Start -->\n    <!--<div class=\"row pt-5\">-->\n        <!--<div class=\"col\">-->\n            <!--<div class=\"row pb-3\">-->\n                <!--<div class=\"col\">-->\n                    <!--<h2 class=\"blue\">ETC</h2>-->\n                <!--</div>-->\n            <!--</div>-->\n\n            <!--<div class=\"row\">-->\n                <!--<div class=\"col\">-->\n\n                    <!--<div class=\"row\">-->\n                        <!--<div class=\"col-md-3 col-12 text-md-right\">-->\n                            <!--<h4 class=\"gray\">xxx</h4>-->\n                        <!--</div>-->\n                        <!--<div class=\"col-md-9 col-12\">-->\n                            <!--<h4>xx</h4>-->\n                            <!--<i class=\"gray\">xxx</i>-->\n                        <!--</div>-->\n                    <!--</div>-->\n                    <!--<hr/>-->\n\n\n\n                <!--</div>-->\n            <!--</div>-->\n        <!--</div>-->\n    <!--</div>-->\n    <!-- Etc End -->\n\n    <!-- Toolbox Start -->\n    <!--<div class=\"col-md-12 col-sm-12 pt-5\">-->\n        <!--<a href=\"./public/pdf/jinu-resume.pdf\" class=\"btn btn-info btn-block\" role=\"button\" aria-pressed=\"true\">-->\n            <!--<i class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i>-->\n            <!--&nbsp;下载简历-->\n        <!--</a>-->\n    <!--</div>-->\n    <!-- Toolbox End -->\n\n    <!-- Footer Start -->\n    <div class=\"row\">\n        <div class=\"col footer-cover\">\n            <div class=\"footer text-center\">\n                <small>Thanks to <a href=\"https://github.com/\" target=\"_blank\"><i class=\"fa fa-github\"></i> Github</a>\n                    and\n                    <a href=\"https://getbootstrap.com/\" target=\"_blank\">Bootstrap</a></small>\n            </div>\n        </div>\n    </div>\n    <!-- Footer End -->\n</div>\n</body>\n</html>\n","date":"2020-05-14T23:09:21.140Z","updated":"2019-06-26T12:09:55.123Z","path":"resume-cn/index.html","title":"","comments":1,"_id":"ckmitc73u000du60nu2nff68b","content":"<!DOCTYPE html>\n<html>\n<head>\n\n    <!-- Global site tag (gtag.js) - Google Analytics -->\n    <!--<script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-135992499-1\"></script>-->\n    <script>\n        // window.dataLayer = window.dataLayer || [];\n        // function gtag() {\n        //     dataLayer.push(arguments);\n        // }\n        // gtag('js', new Date());\n        // gtag('config', 'xxx');\n    </script>\n\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"user-scalable=no,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,width=device-width\">\n    <meta name=\"description\" content=\"李虎的简历! \">\n    <meta property=\"og:url\" content=\"https://ybleeho.github.io/resume\">\n    <meta property=\"og:site_name\" content=\"李虎的简历\">\n    <meta property=\"og:title\" content=\"李虎的简历\">\n    <meta property=\"og:description\" content=\"李虎的简历! \">\n    <meta property=\"og:image\" content=\"https://ybleeho.github.io/resume/avatar.jpeg\">\n    <meta property=\"og:type\" content=\"website\">\n\n    <title>简历</title>\n\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.bundle.min.js\" integrity=\"sha384-3ziFidFTgxJXHMDttyPJKDuTlmxJlwbSkojudK/CkRqKDOmeSbN6KLrGdrBQnT2n\" crossorigin=\"anonymous\"></script>\n\n    <link rel=\"stylesheet\" href=\"style.css\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/earlyaccess/notosanskr.css\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\">\n\n    <link rel=\"shortcut icon\" type=\"image/png\" href=\"public/images/favicon.ico\">\n\n    <script>\n        $(function () {\n            $('[data-toggle=\"tooltip\"]').tooltip()\n        })\n    </script>\n</head>\n<body>\n<div class=\"container resume\">\n    <!-- Profile Start -->\n    <div class=\"row mt-5\">\n        <div class=\"col-md-3 col-sm-12 pb-3 text-md-right text-center\">\n            <img class=\"img-fluid rounded profile-img\" src=\"avatar.jpeg\" alt=\"Profile\">\n        </div>\n        <div class=\"col-md-9 col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col text-center text-md-left\">\n                    <h1 class=\"blue\">李 虎</h1>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col pt-3\">\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"mailto:ybleeho@gmail.com\" target=\"_blank\" style=\"color:darkgray; font-weight: bold\">ybleeho@gmail.com</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <span class=\"text-secondary\">+86 15585589102</span>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-github\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://github.com/ybleeho\" target=\"_blank\" style=\"color:purple; font-weight:bold\">https://github.com/ybleeho</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://www.instagram.com/l2_h5\" target=\"_blank\" style=\"color:pink; font-weight:bold\">https://www.instagram.com/l2_h5</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-rss\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://ybleeho.github.io\" target=\"_blank\" style=\"color:pink; font-weight:bold\">https://ybleeho.github.io</a>\n                            <a href=\"https://www.cnblogs.com/ybleeho/\" target=\"_blank\" style=\"color:pink; font-weight:bold\">https://www.cnblogs.com/ybleeho/</a>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <div class=\"alert alert-secondary\" role=\"alert\">\n                                <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>&nbsp;\n                                可由<strong>邮箱或微信(手机)</strong>与我联系.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Profile End -->\n\n    <!-- Introduce Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col-12 col-md-3\">\n            <h2 class=\"blue\">INTRODUCE</h2>\n        </div>\n        <div class=\"col-12 col-md-9\">\n            <p>&nbsp&nbsp 毕业于吉林大学软件工程，已在全栈开发岗位工作1年。主要使用Nodejs，PostgreSql进行了多个iOS, Android, 小程序的\n            后端开发以及使用React开发后台管理系统。</p>\n            <p>&nbsp </p>\n        </div>\n    </div>\n    <!-- Introduce End -->\n\n    <!-- Skills Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col\">\n            <div class=\"row pb-3\">\n                <div class=\"col\">\n                    <h2>\n                <span class=\"blue\">\n                  SKILLS\n                </span>\n                        <small data-toggle=\"tooltip\" title=\"1: 了解 / 2: 熟悉 / 3: 熟练\">\n                            <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n                        </small>\n                    </h2>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12 col-md-3 text-md-right\">\n                    <h4 class=\"gray\">Backend</h4>\n                </div>\n                <div class=\"col-12 col-md-9\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    PostgreSQL\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Node.js\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Express\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Sequelize\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    RESTful API\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Async, Moment, Lodash\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Postman, Jmeter\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Linux\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <hr>\n\n            <div class=\"row\">\n                <div class=\"col-12 col-md-3 text-md-right\">\n                    <h4 class=\"gray\">Frontend&Etc</h4>\n                </div>\n                <div class=\"col-12 col-md-9\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    React\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Redux\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Ant Design\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Git\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n    <!-- Skills End -->\n\n    <!-- Growth Process Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col\">\n            <div class=\"row pb-3\">\n                <div class=\"col\">\n                    <h2 class=\"blue\">GROWTH PROCESS</h2>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col\">\n                    <div class=\"row\">\n                        <div class=\"col-md-3 col-12 text-md-right\">\n                            <h4 class=\"gray\">20018.08 ~ </h4>\n                        </div>\n                        <div class=\"col-md-9 col-12\">\n                            <h4>6e Group</h4>\n                            <i class=\"gray\">FullStack开发</i>\n                            <ul class=\"pt-2\">\n                                <li>\n                                    参与xxSOS app的开发。主要功能有登陆注册、紧急联系人的添加、使用Twilio的短信以及语音服务、\n                                    使用socket的用户位置追踪服务、使用谷歌地图api的位置服务、以及使用React的后台管理系统。\n                                </li>\n                                <li>\n                                    参与xx service app的开发。主要功能有登陆注册、对于用户的Booking房间的功能、使用Stripe的订阅Plan的功能、\n                                    公司与员工个人的Credits功能、对于公司的Plan功能、以及使用React的后台进行各种资源的管理、信息展示与修改、日志等功能。\n                                </li>\n                                <li>参与多个商城类的微信小程序的项目，比较熟悉微信的授权登录等流程及api。</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <hr>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 col-12 text-md-right\">\n                            <h4 class=\"gray\">2014.08 ~ 2018.08</h4>\n                        </div>\n                        <div class=\"col-md-9 col-12\">\n                            <h4>吉林大学</h4>\n                            <i class=\"gray\">软件工程</i>\n                            <ul class=\"pt-2\">\n                                <li>获得两次三等奖学金</li>\n                                <li>CET-4</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <hr>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Growth Process End -->\n\n    <!-- Project Start -->\n    <!--<div class=\"row pt-5\">-->\n        <!--<div class=\"col\">-->\n            <!--<div class=\"row pb-3\">-->\n                <!--<div class=\"col\">-->\n                    <!--<h2 class=\"blue\">PROJECTS</h2>-->\n                <!--</div>-->\n            <!--</div>-->\n\n            <!--<div class=\"row\">-->\n                <!--<div class=\"col\">-->\n                    <!--<div class=\"row\">-->\n                        <!--<div class=\"col-md-3 col-12 text-md-right\">-->\n                            <!--<h4 class=\"gray\">xxxxx</h4>-->\n                        <!--</div>-->\n                        <!--<div class=\"col-md-9 col-12\">-->\n                            <!--<h4>xxxx</h4>-->\n                            <!--<i class=\"gray\">xxx</i>-->\n                            <!--<ul class=\"pt-3\">-->\n                                <!--<li>-->\n                                    <!--<strong>xxx</strong>-->\n                                    <!--<ul>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxxx</li>-->\n                                    <!--</ul>-->\n                                <!--</li>-->\n                                <!--<li>-->\n                                    <!--<strong>xxx</strong>-->\n                                    <!--<ul>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxxx</li>-->\n                                    <!--</ul>-->\n                                <!--</li>-->\n                            <!--</ul>-->\n                        <!--</div>-->\n                    <!--</div>-->\n                    <!--<hr/>-->\n\n\n\n                <!--</div>-->\n            <!--</div>-->\n        <!--</div>-->\n    <!--</div>-->\n    <!-- Project End -->\n\n    <!-- Etc Start -->\n    <!--<div class=\"row pt-5\">-->\n        <!--<div class=\"col\">-->\n            <!--<div class=\"row pb-3\">-->\n                <!--<div class=\"col\">-->\n                    <!--<h2 class=\"blue\">ETC</h2>-->\n                <!--</div>-->\n            <!--</div>-->\n\n            <!--<div class=\"row\">-->\n                <!--<div class=\"col\">-->\n\n                    <!--<div class=\"row\">-->\n                        <!--<div class=\"col-md-3 col-12 text-md-right\">-->\n                            <!--<h4 class=\"gray\">xxx</h4>-->\n                        <!--</div>-->\n                        <!--<div class=\"col-md-9 col-12\">-->\n                            <!--<h4>xx</h4>-->\n                            <!--<i class=\"gray\">xxx</i>-->\n                        <!--</div>-->\n                    <!--</div>-->\n                    <!--<hr/>-->\n\n\n\n                <!--</div>-->\n            <!--</div>-->\n        <!--</div>-->\n    <!--</div>-->\n    <!-- Etc End -->\n\n    <!-- Toolbox Start -->\n    <!--<div class=\"col-md-12 col-sm-12 pt-5\">-->\n        <!--<a href=\"./public/pdf/jinu-resume.pdf\" class=\"btn btn-info btn-block\" role=\"button\" aria-pressed=\"true\">-->\n            <!--<i class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i>-->\n            <!--&nbsp;下载简历-->\n        <!--</a>-->\n    <!--</div>-->\n    <!-- Toolbox End -->\n\n    <!-- Footer Start -->\n    <div class=\"row\">\n        <div class=\"col footer-cover\">\n            <div class=\"footer text-center\">\n                <small>Thanks to <a href=\"https://github.com/\" target=\"_blank\"><i class=\"fa fa-github\"></i> Github</a>\n                    and\n                    <a href=\"https://getbootstrap.com/\" target=\"_blank\">Bootstrap</a></small>\n            </div>\n        </div>\n    </div>\n    <!-- Footer End -->\n</div>\n</body>\n</html>\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html>\n<head>\n\n    <!-- Global site tag (gtag.js) - Google Analytics -->\n    <!--<script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-135992499-1\"></script>-->\n    <script>\n        // window.dataLayer = window.dataLayer || [];\n        // function gtag() {\n        //     dataLayer.push(arguments);\n        // }\n        // gtag('js', new Date());\n        // gtag('config', 'xxx');\n    </script>\n\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\"\n          content=\"user-scalable=no,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,width=device-width\">\n    <meta name=\"description\" content=\"李虎的简历! \"/>\n    <meta property=\"og:url\" content=\"https://ybleeho.github.io/resume\"/>\n    <meta property=\"og:site_name\" content=\"李虎的简历\"/>\n    <meta property=\"og:title\" content=\"李虎的简历\"/>\n    <meta property=\"og:description\" content=\"李虎的简历! \"/>\n    <meta property=\"og:image\" content=\"https://ybleeho.github.io/resume/avatar.jpeg\"/>\n    <meta property=\"og:type\" content=\"website\"/>\n\n    <title>简历</title>\n\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.bundle.min.js\"\n            integrity=\"sha384-3ziFidFTgxJXHMDttyPJKDuTlmxJlwbSkojudK/CkRqKDOmeSbN6KLrGdrBQnT2n\"\n            crossorigin=\"anonymous\"></script>\n\n    <link rel=\"stylesheet\" href=\"style.css\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/earlyaccess/notosanskr.css\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" rel=\"stylesheet\"\n          integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\">\n\n    <link rel=\"shortcut icon\" type=\"image/png\" href=\"public/images/favicon.ico\"/>\n\n    <script>\n        $(function () {\n            $('[data-toggle=\"tooltip\"]').tooltip()\n        })\n    </script>\n</head>\n<body>\n<div class=\"container resume\">\n    <!-- Profile Start -->\n    <div class=\"row mt-5\">\n        <div class=\"col-md-3 col-sm-12 pb-3 text-md-right text-center\">\n            <img class=\"img-fluid rounded profile-img\" src=\"avatar.jpeg\" alt=\"Profile\">\n        </div>\n        <div class=\"col-md-9 col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col text-center text-md-left\">\n                    <h1 class=\"blue\">李 虎</h1>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col pt-3\">\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"mailto:ybleeho@gmail.com\" target=\"_blank\"\n                               style=\"color:darkgray; font-weight: bold\">ybleeho@gmail.com</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <span class=\"text-secondary\">+86 15585589102</span>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-github\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://github.com/ybleeho\" target=\"_blank\" style=\"color:purple; font-weight:bold\">https://github.com/ybleeho</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://www.instagram.com/l2_h5\" target=\"_blank\"\n                               style=\"color:pink; font-weight:bold\">https://www.instagram.com/l2_h5</a>\n                        </div>\n                    </div>\n                    <div class=\"row pb-2\">\n                        <div class=\"col-1 text-right\">\n                            <i class=\"fa fa-rss\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"https://ybleeho.github.io\" target=\"_blank\"\n                               style=\"color:pink; font-weight:bold\">https://ybleeho.github.io</a>\n                            <a href=\"https://www.cnblogs.com/ybleeho/\" target=\"_blank\"\n                               style=\"color:pink; font-weight:bold\">https://www.cnblogs.com/ybleeho/</a>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <div class=\"alert alert-secondary\" role=\"alert\">\n                                <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>&nbsp;\n                                可由<strong>邮箱或微信(手机)</strong>与我联系.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Profile End -->\n\n    <!-- Introduce Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col-12 col-md-3\">\n            <h2 class=\"blue\">INTRODUCE</h2>\n        </div>\n        <div class=\"col-12 col-md-9\">\n            <p>&nbsp&nbsp 毕业于吉林大学软件工程，已在全栈开发岗位工作1年。主要使用Nodejs，PostgreSql进行了多个iOS, Android, 小程序的\n            后端开发以及使用React开发后台管理系统。</p>\n            <p>&nbsp </p>\n        </div>\n    </div>\n    <!-- Introduce End -->\n\n    <!-- Skills Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col\">\n            <div class=\"row pb-3\">\n                <div class=\"col\">\n                    <h2>\n                <span class=\"blue\">\n                  SKILLS\n                </span>\n                        <small data-toggle=\"tooltip\" title=\"1: 了解 / 2: 熟悉 / 3: 熟练\">\n                            <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n                        </small>\n                    </h2>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12 col-md-3 text-md-right\">\n                    <h4 class=\"gray\">Backend</h4>\n                </div>\n                <div class=\"col-12 col-md-9\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    PostgreSQL\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Node.js\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Express\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Sequelize\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    RESTful API\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Async, Moment, Lodash\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Postman, Jmeter\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Linux\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <hr/>\n\n            <div class=\"row\">\n                <div class=\"col-12 col-md-3 text-md-right\">\n                    <h4 class=\"gray\">Frontend&Etc</h4>\n                </div>\n                <div class=\"col-12 col-md-9\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    React\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Redux\n                                </li>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">2</span>\n                                    Ant Design\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <ul>\n                                <li>\n                                    <span class=\"badge badge-pill badge-primary\">3</span>\n                                    Git\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n    <!-- Skills End -->\n\n    <!-- Growth Process Start -->\n    <div class=\"row pt-5\">\n        <div class=\"col\">\n            <div class=\"row pb-3\">\n                <div class=\"col\">\n                    <h2 class=\"blue\">GROWTH PROCESS</h2>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col\">\n                    <div class=\"row\">\n                        <div class=\"col-md-3 col-12 text-md-right\">\n                            <h4 class=\"gray\">20018.08 ~ </h4>\n                        </div>\n                        <div class=\"col-md-9 col-12\">\n                            <h4>6e Group</h4>\n                            <i class=\"gray\">FullStack开发</i>\n                            <ul class=\"pt-2\">\n                                <li>\n                                    参与xxSOS app的开发。主要功能有登陆注册、紧急联系人的添加、使用Twilio的短信以及语音服务、\n                                    使用socket的用户位置追踪服务、使用谷歌地图api的位置服务、以及使用React的后台管理系统。\n                                </li>\n                                <li>\n                                    参与xx service app的开发。主要功能有登陆注册、对于用户的Booking房间的功能、使用Stripe的订阅Plan的功能、\n                                    公司与员工个人的Credits功能、对于公司的Plan功能、以及使用React的后台进行各种资源的管理、信息展示与修改、日志等功能。\n                                </li>\n                                <li>参与多个商城类的微信小程序的项目，比较熟悉微信的授权登录等流程及api。</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <hr/>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 col-12 text-md-right\">\n                            <h4 class=\"gray\">2014.08 ~ 2018.08</h4>\n                        </div>\n                        <div class=\"col-md-9 col-12\">\n                            <h4>吉林大学</h4>\n                            <i class=\"gray\">软件工程</i>\n                            <ul class=\"pt-2\">\n                                <li>获得两次三等奖学金</li>\n                                <li>CET-4</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <hr/>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- Growth Process End -->\n\n    <!-- Project Start -->\n    <!--<div class=\"row pt-5\">-->\n        <!--<div class=\"col\">-->\n            <!--<div class=\"row pb-3\">-->\n                <!--<div class=\"col\">-->\n                    <!--<h2 class=\"blue\">PROJECTS</h2>-->\n                <!--</div>-->\n            <!--</div>-->\n\n            <!--<div class=\"row\">-->\n                <!--<div class=\"col\">-->\n                    <!--<div class=\"row\">-->\n                        <!--<div class=\"col-md-3 col-12 text-md-right\">-->\n                            <!--<h4 class=\"gray\">xxxxx</h4>-->\n                        <!--</div>-->\n                        <!--<div class=\"col-md-9 col-12\">-->\n                            <!--<h4>xxxx</h4>-->\n                            <!--<i class=\"gray\">xxx</i>-->\n                            <!--<ul class=\"pt-3\">-->\n                                <!--<li>-->\n                                    <!--<strong>xxx</strong>-->\n                                    <!--<ul>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxxx</li>-->\n                                    <!--</ul>-->\n                                <!--</li>-->\n                                <!--<li>-->\n                                    <!--<strong>xxx</strong>-->\n                                    <!--<ul>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxx</li>-->\n                                        <!--<li>xxxx</li>-->\n                                    <!--</ul>-->\n                                <!--</li>-->\n                            <!--</ul>-->\n                        <!--</div>-->\n                    <!--</div>-->\n                    <!--<hr/>-->\n\n\n\n                <!--</div>-->\n            <!--</div>-->\n        <!--</div>-->\n    <!--</div>-->\n    <!-- Project End -->\n\n    <!-- Etc Start -->\n    <!--<div class=\"row pt-5\">-->\n        <!--<div class=\"col\">-->\n            <!--<div class=\"row pb-3\">-->\n                <!--<div class=\"col\">-->\n                    <!--<h2 class=\"blue\">ETC</h2>-->\n                <!--</div>-->\n            <!--</div>-->\n\n            <!--<div class=\"row\">-->\n                <!--<div class=\"col\">-->\n\n                    <!--<div class=\"row\">-->\n                        <!--<div class=\"col-md-3 col-12 text-md-right\">-->\n                            <!--<h4 class=\"gray\">xxx</h4>-->\n                        <!--</div>-->\n                        <!--<div class=\"col-md-9 col-12\">-->\n                            <!--<h4>xx</h4>-->\n                            <!--<i class=\"gray\">xxx</i>-->\n                        <!--</div>-->\n                    <!--</div>-->\n                    <!--<hr/>-->\n\n\n\n                <!--</div>-->\n            <!--</div>-->\n        <!--</div>-->\n    <!--</div>-->\n    <!-- Etc End -->\n\n    <!-- Toolbox Start -->\n    <!--<div class=\"col-md-12 col-sm-12 pt-5\">-->\n        <!--<a href=\"./public/pdf/jinu-resume.pdf\" class=\"btn btn-info btn-block\" role=\"button\" aria-pressed=\"true\">-->\n            <!--<i class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i>-->\n            <!--&nbsp;下载简历-->\n        <!--</a>-->\n    <!--</div>-->\n    <!-- Toolbox End -->\n\n    <!-- Footer Start -->\n    <div class=\"row\">\n        <div class=\"col footer-cover\">\n            <div class=\"footer text-center\">\n                <small>Thanks to <a href=\"https://github.com/\" target=\"_blank\"><i class=\"fa fa-github\"></i> Github</a>\n                    and\n                    <a href=\"https://getbootstrap.com/\" target=\"_blank\">Bootstrap</a></small>\n            </div>\n        </div>\n    </div>\n    <!-- Footer End -->\n</div>\n</body>\n</html>\n"}],"Post":[{"title":"Analyzing logs on CentOS","date":"2019-11-09T15:20:55.000Z","_content":"\n### The rsyslog Configuration File\nrsyslog文件位于/etc目录下，此文件记录相关log存储的位置。\n```\n# Include all config files in /etc/rsyslog.d/\n$IncludeConfig /etc/rsyslog.d/*.conf\n\n# Turn off message reception via local log socket;\n# local messages are retrieved through imjournal now.\n$OmitLocalLogging on\n\n# File to store the position in the journal\n$IMJournalStateFile imjournal.state\n\n#### RULES ####\n\n# Log all kernel messages to the console.\n# Logging much else clutters up the screen.\n#kern.*                                                 /dev/console\n\n# Log anything (except mail) of level info or higher.\n# Don't log private authentication messages!\n*.info;mail.none;authpriv.none;cron.none                /var/log/messages\n\n# The authpriv file has restricted access.\nauthpriv.*                                              /var/log/secure\n\n# Log all the mail messages in one place.\nmail.*                                                  -/var/log/maillog\n\n\n# Log cron stuff\ncron.*                                                  /var/log/cron\n\n# Everybody gets emergency messages\n*.emerg                                                 :omusrmsg:*\n\n# Save news errors of level crit and higher in a special file.\nuucp,news.crit                                          /var/log/spooler\n\n# Save boot messages also to boot.log\nlocal7.*                                                /var/log/boot.log\n```\n\n### The logrotate Configuration File\n\nlogrotate配置文件logrotate.conf也位于/etc目录下,此文件管理日志文件很好理解\n\n```\n# see \"man logrotate\" for details\n# rotate log files weekly\nweekly\n\n# keep 4 weeks worth of backlogs\nrotate 4\n\n# create new (empty) log files after rotating old ones\ncreate\n\n# use date as a suffix of the rotated file\ndateext\n\n# uncomment this if you want your log files compressed\n#compress\n\n# RPM packages drop log rotation information into this directory\ninclude /etc/logrotate.d\n\n# no packages own wtmp and btmp -- we'll rotate them here\n/var/log/wtmp {\n    monthly\n    create 0664 root utmp\n\tminsize 1M\n    rotate 1\n}\n\n/var/log/btmp {\n    missingok\n    monthly\n    create 0600 root utmp\n    rotate 1\n}\n\n# system-specific logs may be also be configured here.\n```\n\n### Secure Log\n\n#### Analyzing failed IP\n\n```\nsudo grep \"Failed password for root\" /var/log/secure-xxxxx | awk '{print $11}' | sort | uniq -c | sort -nr | more\n```\n\n解读：选出 \"Failed password for root\"的行，选出第十一个单词，进行一个排序以便于\n进行下次的uniq操作，在进行uniq 操作，再按出现的此时进行排序\n\n#### Analyzing failed User\n```\nsudo grep \"Failed password for invalid user\" /var/log/secure-20191103 | awk '{print $13}' | sort | uniq -c | sort -nr | more\n```\n#### About secure\n1.修改/etc/ssh/sshd_config文件,修改端口，禁止root登录\n```\nPort xxxx\nPermitRootLogin no\n```\n2.禁用密码登陆，使用 RSA 私钥登录\n","source":"_posts/Analyzing-secure-logs-on-centos.md","raw":"---\ntitle: Analyzing logs on CentOS\ndate: 2019-11-09 23:20:55\ntags:\n---\n\n### The rsyslog Configuration File\nrsyslog文件位于/etc目录下，此文件记录相关log存储的位置。\n```\n# Include all config files in /etc/rsyslog.d/\n$IncludeConfig /etc/rsyslog.d/*.conf\n\n# Turn off message reception via local log socket;\n# local messages are retrieved through imjournal now.\n$OmitLocalLogging on\n\n# File to store the position in the journal\n$IMJournalStateFile imjournal.state\n\n#### RULES ####\n\n# Log all kernel messages to the console.\n# Logging much else clutters up the screen.\n#kern.*                                                 /dev/console\n\n# Log anything (except mail) of level info or higher.\n# Don't log private authentication messages!\n*.info;mail.none;authpriv.none;cron.none                /var/log/messages\n\n# The authpriv file has restricted access.\nauthpriv.*                                              /var/log/secure\n\n# Log all the mail messages in one place.\nmail.*                                                  -/var/log/maillog\n\n\n# Log cron stuff\ncron.*                                                  /var/log/cron\n\n# Everybody gets emergency messages\n*.emerg                                                 :omusrmsg:*\n\n# Save news errors of level crit and higher in a special file.\nuucp,news.crit                                          /var/log/spooler\n\n# Save boot messages also to boot.log\nlocal7.*                                                /var/log/boot.log\n```\n\n### The logrotate Configuration File\n\nlogrotate配置文件logrotate.conf也位于/etc目录下,此文件管理日志文件很好理解\n\n```\n# see \"man logrotate\" for details\n# rotate log files weekly\nweekly\n\n# keep 4 weeks worth of backlogs\nrotate 4\n\n# create new (empty) log files after rotating old ones\ncreate\n\n# use date as a suffix of the rotated file\ndateext\n\n# uncomment this if you want your log files compressed\n#compress\n\n# RPM packages drop log rotation information into this directory\ninclude /etc/logrotate.d\n\n# no packages own wtmp and btmp -- we'll rotate them here\n/var/log/wtmp {\n    monthly\n    create 0664 root utmp\n\tminsize 1M\n    rotate 1\n}\n\n/var/log/btmp {\n    missingok\n    monthly\n    create 0600 root utmp\n    rotate 1\n}\n\n# system-specific logs may be also be configured here.\n```\n\n### Secure Log\n\n#### Analyzing failed IP\n\n```\nsudo grep \"Failed password for root\" /var/log/secure-xxxxx | awk '{print $11}' | sort | uniq -c | sort -nr | more\n```\n\n解读：选出 \"Failed password for root\"的行，选出第十一个单词，进行一个排序以便于\n进行下次的uniq操作，在进行uniq 操作，再按出现的此时进行排序\n\n#### Analyzing failed User\n```\nsudo grep \"Failed password for invalid user\" /var/log/secure-20191103 | awk '{print $13}' | sort | uniq -c | sort -nr | more\n```\n#### About secure\n1.修改/etc/ssh/sshd_config文件,修改端口，禁止root登录\n```\nPort xxxx\nPermitRootLogin no\n```\n2.禁用密码登陆，使用 RSA 私钥登录\n","slug":"Analyzing-secure-logs-on-centos","published":1,"updated":"2019-11-09T16:36:06.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc73i0000u60nbf7kqziu","content":"<h3 id=\"The-rsyslog-Configuration-File\"><a href=\"#The-rsyslog-Configuration-File\" class=\"headerlink\" title=\"The rsyslog Configuration File\"></a>The rsyslog Configuration File</h3><p>rsyslog文件位于/etc目录下，此文件记录相关log存储的位置。<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Include all config files in /etc/rsyslog.d/</span><br><span class=\"line\">$IncludeConfig /etc/rsyslog.d/*.conf</span><br><span class=\"line\"></span><br><span class=\"line\"># Turn off message reception via local log socket;</span><br><span class=\"line\"># local messages are retrieved through imjournal now.</span><br><span class=\"line\">$OmitLocalLogging on</span><br><span class=\"line\"></span><br><span class=\"line\"># File to store the position in the journal</span><br><span class=\"line\">$IMJournalStateFile imjournal.state</span><br><span class=\"line\"></span><br><span class=\"line\">#### RULES ####</span><br><span class=\"line\"></span><br><span class=\"line\"># Log all kernel messages to the console.</span><br><span class=\"line\"># Logging much else clutters up the screen.</span><br><span class=\"line\">#kern.*                                                 /dev/console</span><br><span class=\"line\"></span><br><span class=\"line\"># Log anything (except mail) of level info or higher.</span><br><span class=\"line\"># Don&apos;t log private authentication messages!</span><br><span class=\"line\">*.info;mail.none;authpriv.none;cron.none                /var/log/messages</span><br><span class=\"line\"></span><br><span class=\"line\"># The authpriv file has restricted access.</span><br><span class=\"line\">authpriv.*                                              /var/log/secure</span><br><span class=\"line\"></span><br><span class=\"line\"># Log all the mail messages in one place.</span><br><span class=\"line\">mail.*                                                  -/var/log/maillog</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Log cron stuff</span><br><span class=\"line\">cron.*                                                  /var/log/cron</span><br><span class=\"line\"></span><br><span class=\"line\"># Everybody gets emergency messages</span><br><span class=\"line\">*.emerg                                                 :omusrmsg:*</span><br><span class=\"line\"></span><br><span class=\"line\"># Save news errors of level crit and higher in a special file.</span><br><span class=\"line\">uucp,news.crit                                          /var/log/spooler</span><br><span class=\"line\"></span><br><span class=\"line\"># Save boot messages also to boot.log</span><br><span class=\"line\">local7.*                                                /var/log/boot.log</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"The-logrotate-Configuration-File\"><a href=\"#The-logrotate-Configuration-File\" class=\"headerlink\" title=\"The logrotate Configuration File\"></a>The logrotate Configuration File</h3><p>logrotate配置文件logrotate.conf也位于/etc目录下,此文件管理日志文件很好理解</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># see &quot;man logrotate&quot; for details</span><br><span class=\"line\"># rotate log files weekly</span><br><span class=\"line\">weekly</span><br><span class=\"line\"></span><br><span class=\"line\"># keep 4 weeks worth of backlogs</span><br><span class=\"line\">rotate 4</span><br><span class=\"line\"></span><br><span class=\"line\"># create new (empty) log files after rotating old ones</span><br><span class=\"line\">create</span><br><span class=\"line\"></span><br><span class=\"line\"># use date as a suffix of the rotated file</span><br><span class=\"line\">dateext</span><br><span class=\"line\"></span><br><span class=\"line\"># uncomment this if you want your log files compressed</span><br><span class=\"line\">#compress</span><br><span class=\"line\"></span><br><span class=\"line\"># RPM packages drop log rotation information into this directory</span><br><span class=\"line\">include /etc/logrotate.d</span><br><span class=\"line\"></span><br><span class=\"line\"># no packages own wtmp and btmp -- we&apos;ll rotate them here</span><br><span class=\"line\">/var/log/wtmp &#123;</span><br><span class=\"line\">    monthly</span><br><span class=\"line\">    create 0664 root utmp</span><br><span class=\"line\">\tminsize 1M</span><br><span class=\"line\">    rotate 1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/var/log/btmp &#123;</span><br><span class=\"line\">    missingok</span><br><span class=\"line\">    monthly</span><br><span class=\"line\">    create 0600 root utmp</span><br><span class=\"line\">    rotate 1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># system-specific logs may be also be configured here.</span><br></pre></td></tr></table></figure>\n<h3 id=\"Secure-Log\"><a href=\"#Secure-Log\" class=\"headerlink\" title=\"Secure Log\"></a>Secure Log</h3><h4 id=\"Analyzing-failed-IP\"><a href=\"#Analyzing-failed-IP\" class=\"headerlink\" title=\"Analyzing failed IP\"></a>Analyzing failed IP</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo grep &quot;Failed password for root&quot; /var/log/secure-xxxxx | awk &apos;&#123;print $11&#125;&apos; | sort | uniq -c | sort -nr | more</span><br></pre></td></tr></table></figure>\n<p>解读：选出 “Failed password for root”的行，选出第十一个单词，进行一个排序以便于<br>进行下次的uniq操作，在进行uniq 操作，再按出现的此时进行排序</p>\n<h4 id=\"Analyzing-failed-User\"><a href=\"#Analyzing-failed-User\" class=\"headerlink\" title=\"Analyzing failed User\"></a>Analyzing failed User</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo grep &quot;Failed password for invalid user&quot; /var/log/secure-20191103 | awk &apos;&#123;print $13&#125;&apos; | sort | uniq -c | sort -nr | more</span><br></pre></td></tr></table></figure>\n<h4 id=\"About-secure\"><a href=\"#About-secure\" class=\"headerlink\" title=\"About secure\"></a>About secure</h4><p>1.修改/etc/ssh/sshd_config文件,修改端口，禁止root登录<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Port xxxx</span><br><span class=\"line\">PermitRootLogin no</span><br></pre></td></tr></table></figure></p>\n<p>2.禁用密码登陆，使用 RSA 私钥登录</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"The-rsyslog-Configuration-File\"><a href=\"#The-rsyslog-Configuration-File\" class=\"headerlink\" title=\"The rsyslog Configuration File\"></a>The rsyslog Configuration File</h3><p>rsyslog文件位于/etc目录下，此文件记录相关log存储的位置。<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Include all config files in /etc/rsyslog.d/</span><br><span class=\"line\">$IncludeConfig /etc/rsyslog.d/*.conf</span><br><span class=\"line\"></span><br><span class=\"line\"># Turn off message reception via local log socket;</span><br><span class=\"line\"># local messages are retrieved through imjournal now.</span><br><span class=\"line\">$OmitLocalLogging on</span><br><span class=\"line\"></span><br><span class=\"line\"># File to store the position in the journal</span><br><span class=\"line\">$IMJournalStateFile imjournal.state</span><br><span class=\"line\"></span><br><span class=\"line\">#### RULES ####</span><br><span class=\"line\"></span><br><span class=\"line\"># Log all kernel messages to the console.</span><br><span class=\"line\"># Logging much else clutters up the screen.</span><br><span class=\"line\">#kern.*                                                 /dev/console</span><br><span class=\"line\"></span><br><span class=\"line\"># Log anything (except mail) of level info or higher.</span><br><span class=\"line\"># Don&apos;t log private authentication messages!</span><br><span class=\"line\">*.info;mail.none;authpriv.none;cron.none                /var/log/messages</span><br><span class=\"line\"></span><br><span class=\"line\"># The authpriv file has restricted access.</span><br><span class=\"line\">authpriv.*                                              /var/log/secure</span><br><span class=\"line\"></span><br><span class=\"line\"># Log all the mail messages in one place.</span><br><span class=\"line\">mail.*                                                  -/var/log/maillog</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Log cron stuff</span><br><span class=\"line\">cron.*                                                  /var/log/cron</span><br><span class=\"line\"></span><br><span class=\"line\"># Everybody gets emergency messages</span><br><span class=\"line\">*.emerg                                                 :omusrmsg:*</span><br><span class=\"line\"></span><br><span class=\"line\"># Save news errors of level crit and higher in a special file.</span><br><span class=\"line\">uucp,news.crit                                          /var/log/spooler</span><br><span class=\"line\"></span><br><span class=\"line\"># Save boot messages also to boot.log</span><br><span class=\"line\">local7.*                                                /var/log/boot.log</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"The-logrotate-Configuration-File\"><a href=\"#The-logrotate-Configuration-File\" class=\"headerlink\" title=\"The logrotate Configuration File\"></a>The logrotate Configuration File</h3><p>logrotate配置文件logrotate.conf也位于/etc目录下,此文件管理日志文件很好理解</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># see &quot;man logrotate&quot; for details</span><br><span class=\"line\"># rotate log files weekly</span><br><span class=\"line\">weekly</span><br><span class=\"line\"></span><br><span class=\"line\"># keep 4 weeks worth of backlogs</span><br><span class=\"line\">rotate 4</span><br><span class=\"line\"></span><br><span class=\"line\"># create new (empty) log files after rotating old ones</span><br><span class=\"line\">create</span><br><span class=\"line\"></span><br><span class=\"line\"># use date as a suffix of the rotated file</span><br><span class=\"line\">dateext</span><br><span class=\"line\"></span><br><span class=\"line\"># uncomment this if you want your log files compressed</span><br><span class=\"line\">#compress</span><br><span class=\"line\"></span><br><span class=\"line\"># RPM packages drop log rotation information into this directory</span><br><span class=\"line\">include /etc/logrotate.d</span><br><span class=\"line\"></span><br><span class=\"line\"># no packages own wtmp and btmp -- we&apos;ll rotate them here</span><br><span class=\"line\">/var/log/wtmp &#123;</span><br><span class=\"line\">    monthly</span><br><span class=\"line\">    create 0664 root utmp</span><br><span class=\"line\">\tminsize 1M</span><br><span class=\"line\">    rotate 1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/var/log/btmp &#123;</span><br><span class=\"line\">    missingok</span><br><span class=\"line\">    monthly</span><br><span class=\"line\">    create 0600 root utmp</span><br><span class=\"line\">    rotate 1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># system-specific logs may be also be configured here.</span><br></pre></td></tr></table></figure>\n<h3 id=\"Secure-Log\"><a href=\"#Secure-Log\" class=\"headerlink\" title=\"Secure Log\"></a>Secure Log</h3><h4 id=\"Analyzing-failed-IP\"><a href=\"#Analyzing-failed-IP\" class=\"headerlink\" title=\"Analyzing failed IP\"></a>Analyzing failed IP</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo grep &quot;Failed password for root&quot; /var/log/secure-xxxxx | awk &apos;&#123;print $11&#125;&apos; | sort | uniq -c | sort -nr | more</span><br></pre></td></tr></table></figure>\n<p>解读：选出 “Failed password for root”的行，选出第十一个单词，进行一个排序以便于<br>进行下次的uniq操作，在进行uniq 操作，再按出现的此时进行排序</p>\n<h4 id=\"Analyzing-failed-User\"><a href=\"#Analyzing-failed-User\" class=\"headerlink\" title=\"Analyzing failed User\"></a>Analyzing failed User</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo grep &quot;Failed password for invalid user&quot; /var/log/secure-20191103 | awk &apos;&#123;print $13&#125;&apos; | sort | uniq -c | sort -nr | more</span><br></pre></td></tr></table></figure>\n<h4 id=\"About-secure\"><a href=\"#About-secure\" class=\"headerlink\" title=\"About secure\"></a>About secure</h4><p>1.修改/etc/ssh/sshd_config文件,修改端口，禁止root登录<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Port xxxx</span><br><span class=\"line\">PermitRootLogin no</span><br></pre></td></tr></table></figure></p>\n<p>2.禁用密码登陆，使用 RSA 私钥登录</p>\n"},{"title":"A brief introduction of gRPC in Typescript","date":"2020-10-05T02:17:41.000Z","_content":"\n### Introduction to gRPC\n\nIn gRPC, a client application can directly call a method on a server application on a different machine as if it were a local object, making it easier for you to create distributed applications and services. As in many RPC systems, gRPC is based around the idea of defining a service, specifying the methods that can be called remotely with their parameters and return types. On the server side, the server implements this interface and runs a gRPC server to handle client calls. On the client side, the client has a stub (referred to as just a client in some languages) that provides the same methods as the server.\n\n<img src=\"/images/gPRC.svg\" style=\"zoom:67%;\" />\n\n\n\nBy default, gRPC uses HTTP2 for transporting data streams between remote computers. Protocal buffers developed by Google are used for processing the data. Protocol buffers are saved as simple text files with the extension `.proto`.\n\ngRPC lets you define four kinds of service method:\n\n* Unary RPCs where the client sends a single request to the server and gets a single response back, just like a normal function call.\n\n  ```\n  rpc SayHello(HelloRequest) returns (HelloResponse);\n  ```\n\n* Server streaming RPCs where the client sends a request to the server and gets a stream to read a sequence of messages back. The client reads from the returned stream until there are no more messages. gRPC guarantees message ordering within an individual RPC call.\n\n  ```\n  rpc LotsOfReplies(HelloRequest) returns (stream HelloResponse);\n  ```\n\n* Client streaming RPCs where the client writes a sequence of messages and sends them to the server, again using a provided stream. Once the client has finished writing the messages, it waits for the server to read them and return its response. Again gRPC guarantees message ordering within an individual RPC call.\n\n  ```\n  rpc LotsOfGreetings(stream HelloRequest) returns (HelloResponse);\n  ```\n\n* Bidirectional streaming RPCs where both sides send a sequence of messages using a read-write stream. The two streams operate independently, so clients and servers can read and write in whatever order they like: for example, the server could wait to receive all the client messages before writing its responses, or it could alternately read a message then write a message, or some other combination of reads and writes. The order of messages in each stream is preserved.\n\n  ```\n  rpc BidiHello(stream HelloRequest) returns (stream HelloResponse);\n  ```\n\n### Use with Typescript\n\n#### Init\n\n```\nyarn init\nyarn add grpc grpc-tools grpc_tools_node_protoc_ts ts-node-dev typescript\ntsc --init\n```\n\n#### Create proto file\n\ncreate user.proto file \n\n```protobuf\nsyntax = \"proto3\";\npackage userservice;\n\nmessage User {\n    string name = 1;\n    int32 age = 2;\n    string email = 3;\n}\n\nmessage GetUserByAgeRequest {\n    int32 age = 1;\n}\n\nmessage GetUserByAgeResponse {\n    repeated User users = 1;\n}\n\nservice UserService {\n    rpc GetUserByAge(GetUserByAgeRequest) returns (GetUserByAgeResponse) {}\n}\n```\n\n#### Generate code from the proto file\n\nCreate gen.sh file\n\n```\nnpx grpc_tools_node_protoc \\\n--js_out=import_style=commonjs,binary:./ \\\n--grpc_out=./ \\\n--ts_out=./ \\\nuser.proto\n```\n\nMake sure this file is executable \n\n```\nchmod +x gen.sh\n./gen.sh\n```\n\nThe script will generate two file for js and two file for ts.The grpc one define our service and the other one contain our object.\n\nCreate server.ts file and create our gRPC server\n\n ```typescript\nimport grpc from 'grpc';\nimport { IUserServiceServer, UserServiceService } from './user_grpc_pb';\nimport { User, GetUserByAgeResponse, GetUserByAgeRequest } from './user_pb';\nconst server = new grpc.Server();\nserver.addService<IUserServiceServer>(UserServiceService, new UserService());\nserver.bind('0.0.0.0:3302', grpc.ServerCredentials.createInsecure());\nserver.start()\n ```\n\nThen write the UserService class implements IUserServiceServer\n\n```typescript\nimport grpc from 'grpc';\nimport { IUserServiceServer, UserServiceService } from './user_grpc_pb';\nimport { User, GetUserByAgeResponse, GetUserByAgeRequest } from './user_pb';\nconst server = new grpc.Server();\nconst allUsers: User.AsObject[] = [\n    {\n        name: 'leeho',\n        age: 15,\n        email: 'ybleeho@gmail.com'\n    },\n    {\n        name: 'leeho',\n        age: 20,\n        email: 'ybleeho2@gmail.com'\n    },\n    {\n        name: 'leeho',\n        age: 30,\n        email: 'ybleeho3@gmail.com'\n    },\n]\nclass UserService implements IUserServiceServer {\n    public getUserByAge(\n        call: grpc.ServerUnaryCall<GetUserByAgeRequest>,\n        callback: grpc.sendUnaryData<GetUserByAgeResponse>\n    ): void {\n        const {request} = call;\n        const age = request.getAge();\n        const users = allUsers.filter(user => user.age >= age);\n        const response = new GetUserByAgeResponse();\n        const result: User[] = [];\n        for(const user of users) {\n            const userGrpc: User = new User();\n            userGrpc.setName(user.name);\n            userGrpc.setAge(user.age);\n            userGrpc.setEmail(user.email);\n            result.push(userGrpc);\n        }\n        response.setUsersList(result);\n        callback(null, response);\n    }\n}\n\nserver.addService<IUserServiceServer>(UserServiceService, new UserService());\nserver.bind('0.0.0.0:3302', grpc.ServerCredentials.createInsecure());\nserver.start()\n```\n\nLast edit the `package.json` as below:\n\n```json\n{\n  \"name\": \"grpc\",\n  \"version\": \"1.0.0\",\n  \"main\": \"index.js\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"start\": \"ts-node-dev ./server.ts\"\n  },\n  \"dependencies\": {\n    \"grpc\": \"^1.24.3\",\n    \"grpc-tools\": \"^1.9.1\",\n    \"grpc_tools_node_protoc_ts\": \"^4.1.5\",\n    \"ts-node-dev\": \"^1.0.0-pre.63\",\n    \"typescript\": \"^4.0.3\"\n  }\n}\n```\n\nThan start the server with `yarn start` command.\n\nWe can test the gRPC server with [BloomRPC](https://github.com/uw-labs/bloomrpc).\n\nYou can see the results as blow.\n\n![gPRC-test-result](/images/gPRC-test-result.png)\n\n","source":"_posts/A-brief-introduction-of-gRPC-in-Typescript.md","raw":"---\ntitle: A brief introduction of gRPC in Typescript\ndate: 2020-10-05 10:17:41\ntags:\n---\n\n### Introduction to gRPC\n\nIn gRPC, a client application can directly call a method on a server application on a different machine as if it were a local object, making it easier for you to create distributed applications and services. As in many RPC systems, gRPC is based around the idea of defining a service, specifying the methods that can be called remotely with their parameters and return types. On the server side, the server implements this interface and runs a gRPC server to handle client calls. On the client side, the client has a stub (referred to as just a client in some languages) that provides the same methods as the server.\n\n<img src=\"/images/gPRC.svg\" style=\"zoom:67%;\" />\n\n\n\nBy default, gRPC uses HTTP2 for transporting data streams between remote computers. Protocal buffers developed by Google are used for processing the data. Protocol buffers are saved as simple text files with the extension `.proto`.\n\ngRPC lets you define four kinds of service method:\n\n* Unary RPCs where the client sends a single request to the server and gets a single response back, just like a normal function call.\n\n  ```\n  rpc SayHello(HelloRequest) returns (HelloResponse);\n  ```\n\n* Server streaming RPCs where the client sends a request to the server and gets a stream to read a sequence of messages back. The client reads from the returned stream until there are no more messages. gRPC guarantees message ordering within an individual RPC call.\n\n  ```\n  rpc LotsOfReplies(HelloRequest) returns (stream HelloResponse);\n  ```\n\n* Client streaming RPCs where the client writes a sequence of messages and sends them to the server, again using a provided stream. Once the client has finished writing the messages, it waits for the server to read them and return its response. Again gRPC guarantees message ordering within an individual RPC call.\n\n  ```\n  rpc LotsOfGreetings(stream HelloRequest) returns (HelloResponse);\n  ```\n\n* Bidirectional streaming RPCs where both sides send a sequence of messages using a read-write stream. The two streams operate independently, so clients and servers can read and write in whatever order they like: for example, the server could wait to receive all the client messages before writing its responses, or it could alternately read a message then write a message, or some other combination of reads and writes. The order of messages in each stream is preserved.\n\n  ```\n  rpc BidiHello(stream HelloRequest) returns (stream HelloResponse);\n  ```\n\n### Use with Typescript\n\n#### Init\n\n```\nyarn init\nyarn add grpc grpc-tools grpc_tools_node_protoc_ts ts-node-dev typescript\ntsc --init\n```\n\n#### Create proto file\n\ncreate user.proto file \n\n```protobuf\nsyntax = \"proto3\";\npackage userservice;\n\nmessage User {\n    string name = 1;\n    int32 age = 2;\n    string email = 3;\n}\n\nmessage GetUserByAgeRequest {\n    int32 age = 1;\n}\n\nmessage GetUserByAgeResponse {\n    repeated User users = 1;\n}\n\nservice UserService {\n    rpc GetUserByAge(GetUserByAgeRequest) returns (GetUserByAgeResponse) {}\n}\n```\n\n#### Generate code from the proto file\n\nCreate gen.sh file\n\n```\nnpx grpc_tools_node_protoc \\\n--js_out=import_style=commonjs,binary:./ \\\n--grpc_out=./ \\\n--ts_out=./ \\\nuser.proto\n```\n\nMake sure this file is executable \n\n```\nchmod +x gen.sh\n./gen.sh\n```\n\nThe script will generate two file for js and two file for ts.The grpc one define our service and the other one contain our object.\n\nCreate server.ts file and create our gRPC server\n\n ```typescript\nimport grpc from 'grpc';\nimport { IUserServiceServer, UserServiceService } from './user_grpc_pb';\nimport { User, GetUserByAgeResponse, GetUserByAgeRequest } from './user_pb';\nconst server = new grpc.Server();\nserver.addService<IUserServiceServer>(UserServiceService, new UserService());\nserver.bind('0.0.0.0:3302', grpc.ServerCredentials.createInsecure());\nserver.start()\n ```\n\nThen write the UserService class implements IUserServiceServer\n\n```typescript\nimport grpc from 'grpc';\nimport { IUserServiceServer, UserServiceService } from './user_grpc_pb';\nimport { User, GetUserByAgeResponse, GetUserByAgeRequest } from './user_pb';\nconst server = new grpc.Server();\nconst allUsers: User.AsObject[] = [\n    {\n        name: 'leeho',\n        age: 15,\n        email: 'ybleeho@gmail.com'\n    },\n    {\n        name: 'leeho',\n        age: 20,\n        email: 'ybleeho2@gmail.com'\n    },\n    {\n        name: 'leeho',\n        age: 30,\n        email: 'ybleeho3@gmail.com'\n    },\n]\nclass UserService implements IUserServiceServer {\n    public getUserByAge(\n        call: grpc.ServerUnaryCall<GetUserByAgeRequest>,\n        callback: grpc.sendUnaryData<GetUserByAgeResponse>\n    ): void {\n        const {request} = call;\n        const age = request.getAge();\n        const users = allUsers.filter(user => user.age >= age);\n        const response = new GetUserByAgeResponse();\n        const result: User[] = [];\n        for(const user of users) {\n            const userGrpc: User = new User();\n            userGrpc.setName(user.name);\n            userGrpc.setAge(user.age);\n            userGrpc.setEmail(user.email);\n            result.push(userGrpc);\n        }\n        response.setUsersList(result);\n        callback(null, response);\n    }\n}\n\nserver.addService<IUserServiceServer>(UserServiceService, new UserService());\nserver.bind('0.0.0.0:3302', grpc.ServerCredentials.createInsecure());\nserver.start()\n```\n\nLast edit the `package.json` as below:\n\n```json\n{\n  \"name\": \"grpc\",\n  \"version\": \"1.0.0\",\n  \"main\": \"index.js\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"start\": \"ts-node-dev ./server.ts\"\n  },\n  \"dependencies\": {\n    \"grpc\": \"^1.24.3\",\n    \"grpc-tools\": \"^1.9.1\",\n    \"grpc_tools_node_protoc_ts\": \"^4.1.5\",\n    \"ts-node-dev\": \"^1.0.0-pre.63\",\n    \"typescript\": \"^4.0.3\"\n  }\n}\n```\n\nThan start the server with `yarn start` command.\n\nWe can test the gRPC server with [BloomRPC](https://github.com/uw-labs/bloomrpc).\n\nYou can see the results as blow.\n\n![gPRC-test-result](/images/gPRC-test-result.png)\n\n","slug":"A-brief-introduction-of-gRPC-in-Typescript","published":1,"updated":"2020-10-06T01:00:21.023Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc73m0002u60nkjo32hop","content":"<h3 id=\"Introduction-to-gRPC\"><a href=\"#Introduction-to-gRPC\" class=\"headerlink\" title=\"Introduction to gRPC\"></a>Introduction to gRPC</h3><p>In gRPC, a client application can directly call a method on a server application on a different machine as if it were a local object, making it easier for you to create distributed applications and services. As in many RPC systems, gRPC is based around the idea of defining a service, specifying the methods that can be called remotely with their parameters and return types. On the server side, the server implements this interface and runs a gRPC server to handle client calls. On the client side, the client has a stub (referred to as just a client in some languages) that provides the same methods as the server.</p>\n<p><img src=\"/images/gPRC.svg\" style=\"zoom:67%;\"></p>\n<p>By default, gRPC uses HTTP2 for transporting data streams between remote computers. Protocal buffers developed by Google are used for processing the data. Protocol buffers are saved as simple text files with the extension <code>.proto</code>.</p>\n<p>gRPC lets you define four kinds of service method:</p>\n<ul>\n<li><p>Unary RPCs where the client sends a single request to the server and gets a single response back, just like a normal function call.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">rpc SayHello(HelloRequest) returns (HelloResponse);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Server streaming RPCs where the client sends a request to the server and gets a stream to read a sequence of messages back. The client reads from the returned stream until there are no more messages. gRPC guarantees message ordering within an individual RPC call.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">rpc LotsOfReplies(HelloRequest) returns (stream HelloResponse);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Client streaming RPCs where the client writes a sequence of messages and sends them to the server, again using a provided stream. Once the client has finished writing the messages, it waits for the server to read them and return its response. Again gRPC guarantees message ordering within an individual RPC call.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">rpc LotsOfGreetings(stream HelloRequest) returns (HelloResponse);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Bidirectional streaming RPCs where both sides send a sequence of messages using a read-write stream. The two streams operate independently, so clients and servers can read and write in whatever order they like: for example, the server could wait to receive all the client messages before writing its responses, or it could alternately read a message then write a message, or some other combination of reads and writes. The order of messages in each stream is preserved.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">rpc BidiHello(stream HelloRequest) returns (stream HelloResponse);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"Use-with-Typescript\"><a href=\"#Use-with-Typescript\" class=\"headerlink\" title=\"Use with Typescript\"></a>Use with Typescript</h3><h4 id=\"Init\"><a href=\"#Init\" class=\"headerlink\" title=\"Init\"></a>Init</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn init</span><br><span class=\"line\">yarn add grpc grpc-tools grpc_tools_node_protoc_ts ts-node-dev typescript</span><br><span class=\"line\">tsc --init</span><br></pre></td></tr></table></figure>\n<h4 id=\"Create-proto-file\"><a href=\"#Create-proto-file\" class=\"headerlink\" title=\"Create proto file\"></a>Create proto file</h4><p>create user.proto file </p>\n<figure class=\"highlight protobuf\"><table><tr><td class=\"code\"><pre><span class=\"line\">syntax = <span class=\"string\">\"proto3\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">package</span> userservice;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">message</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> name = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"built_in\">int32</span> age = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> email = <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">message</span> <span class=\"title\">GetUserByAgeRequest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">int32</span> age = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">message</span> <span class=\"title\">GetUserByAgeResponse</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">repeated</span> User users = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">service</span> <span class=\"title\">UserService</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">rpc</span> GetUserByAge(GetUserByAgeRequest) <span class=\"keyword\">returns</span> (GetUserByAgeResponse) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Generate-code-from-the-proto-file\"><a href=\"#Generate-code-from-the-proto-file\" class=\"headerlink\" title=\"Generate code from the proto file\"></a>Generate code from the proto file</h4><p>Create gen.sh file</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npx grpc_tools_node_protoc \\</span><br><span class=\"line\">--js_out=import_style=commonjs,binary:./ \\</span><br><span class=\"line\">--grpc_out=./ \\</span><br><span class=\"line\">--ts_out=./ \\</span><br><span class=\"line\">user.proto</span><br></pre></td></tr></table></figure>\n<p>Make sure this file is executable </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">chmod +x gen.sh</span><br><span class=\"line\">./gen.sh</span><br></pre></td></tr></table></figure>\n<p>The script will generate two file for js and two file for ts.The grpc one define our service and the other one contain our object.</p>\n<p>Create server.ts file and create our gRPC server</p>\n <figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> grpc <span class=\"keyword\">from</span> <span class=\"string\">'grpc'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; IUserServiceServer, UserServiceService &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./user_grpc_pb'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; User, GetUserByAgeResponse, GetUserByAgeRequest &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./user_pb'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> server = <span class=\"keyword\">new</span> grpc.Server();</span><br><span class=\"line\">server.addService&lt;IUserServiceServer&gt;(UserServiceService, <span class=\"keyword\">new</span> UserService());</span><br><span class=\"line\">server.bind(<span class=\"string\">'0.0.0.0:3302'</span>, grpc.ServerCredentials.createInsecure());</span><br><span class=\"line\">server.start()</span><br></pre></td></tr></table></figure>\n<p>Then write the UserService class implements IUserServiceServer</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> grpc <span class=\"keyword\">from</span> <span class=\"string\">'grpc'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; IUserServiceServer, UserServiceService &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./user_grpc_pb'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; User, GetUserByAgeResponse, GetUserByAgeRequest &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./user_pb'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> server = <span class=\"keyword\">new</span> grpc.Server();</span><br><span class=\"line\"><span class=\"keyword\">const</span> allUsers: User.AsObject[] = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        name: <span class=\"string\">'leeho'</span>,</span><br><span class=\"line\">        age: <span class=\"number\">15</span>,</span><br><span class=\"line\">        email: <span class=\"string\">'ybleeho@gmail.com'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        name: <span class=\"string\">'leeho'</span>,</span><br><span class=\"line\">        age: <span class=\"number\">20</span>,</span><br><span class=\"line\">        email: <span class=\"string\">'ybleeho2@gmail.com'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        name: <span class=\"string\">'leeho'</span>,</span><br><span class=\"line\">        age: <span class=\"number\">30</span>,</span><br><span class=\"line\">        email: <span class=\"string\">'ybleeho3@gmail.com'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"keyword\">class</span> UserService <span class=\"keyword\">implements</span> IUserServiceServer &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> getUserByAge(</span><br><span class=\"line\">        call: grpc.ServerUnaryCall&lt;GetUserByAgeRequest&gt;,</span><br><span class=\"line\">        callback: grpc.sendUnaryData&lt;GetUserByAgeResponse&gt;</span><br><span class=\"line\">    ): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> &#123;request&#125; = call;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> age = request.getAge();</span><br><span class=\"line\">        <span class=\"keyword\">const</span> users = allUsers.filter(<span class=\"function\"><span class=\"params\">user</span> =&gt;</span> user.age &gt;= age);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> response = <span class=\"keyword\">new</span> GetUserByAgeResponse();</span><br><span class=\"line\">        <span class=\"keyword\">const</span> result: User[] = [];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">const</span> user of users) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> userGrpc: User = <span class=\"keyword\">new</span> User();</span><br><span class=\"line\">            userGrpc.setName(user.name);</span><br><span class=\"line\">            userGrpc.setAge(user.age);</span><br><span class=\"line\">            userGrpc.setEmail(user.email);</span><br><span class=\"line\">            result.push(userGrpc);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        response.setUsersList(result);</span><br><span class=\"line\">        callback(<span class=\"literal\">null</span>, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server.addService&lt;IUserServiceServer&gt;(UserServiceService, <span class=\"keyword\">new</span> UserService());</span><br><span class=\"line\">server.bind(<span class=\"string\">'0.0.0.0:3302'</span>, grpc.ServerCredentials.createInsecure());</span><br><span class=\"line\">server.start()</span><br></pre></td></tr></table></figure>\n<p>Last edit the <code>package.json</code> as below:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"grpc\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"main\"</span>: <span class=\"string\">\"index.js\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"license\"</span>: <span class=\"string\">\"MIT\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"start\"</span>: <span class=\"string\">\"ts-node-dev ./server.ts\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"grpc\"</span>: <span class=\"string\">\"^1.24.3\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"grpc-tools\"</span>: <span class=\"string\">\"^1.9.1\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"grpc_tools_node_protoc_ts\"</span>: <span class=\"string\">\"^4.1.5\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"ts-node-dev\"</span>: <span class=\"string\">\"^1.0.0-pre.63\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"typescript\"</span>: <span class=\"string\">\"^4.0.3\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Than start the server with <code>yarn start</code> command.</p>\n<p>We can test the gRPC server with <a href=\"https://github.com/uw-labs/bloomrpc\" target=\"_blank\" rel=\"external\">BloomRPC</a>.</p>\n<p>You can see the results as blow.</p>\n<p><img src=\"/images/gPRC-test-result.png\" alt=\"gPRC-test-result\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Introduction-to-gRPC\"><a href=\"#Introduction-to-gRPC\" class=\"headerlink\" title=\"Introduction to gRPC\"></a>Introduction to gRPC</h3><p>In gRPC, a client application can directly call a method on a server application on a different machine as if it were a local object, making it easier for you to create distributed applications and services. As in many RPC systems, gRPC is based around the idea of defining a service, specifying the methods that can be called remotely with their parameters and return types. On the server side, the server implements this interface and runs a gRPC server to handle client calls. On the client side, the client has a stub (referred to as just a client in some languages) that provides the same methods as the server.</p>\n<p><img src=\"/images/gPRC.svg\" style=\"zoom:67%;\" /></p>\n<p>By default, gRPC uses HTTP2 for transporting data streams between remote computers. Protocal buffers developed by Google are used for processing the data. Protocol buffers are saved as simple text files with the extension <code>.proto</code>.</p>\n<p>gRPC lets you define four kinds of service method:</p>\n<ul>\n<li><p>Unary RPCs where the client sends a single request to the server and gets a single response back, just like a normal function call.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">rpc SayHello(HelloRequest) returns (HelloResponse);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Server streaming RPCs where the client sends a request to the server and gets a stream to read a sequence of messages back. The client reads from the returned stream until there are no more messages. gRPC guarantees message ordering within an individual RPC call.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">rpc LotsOfReplies(HelloRequest) returns (stream HelloResponse);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Client streaming RPCs where the client writes a sequence of messages and sends them to the server, again using a provided stream. Once the client has finished writing the messages, it waits for the server to read them and return its response. Again gRPC guarantees message ordering within an individual RPC call.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">rpc LotsOfGreetings(stream HelloRequest) returns (HelloResponse);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Bidirectional streaming RPCs where both sides send a sequence of messages using a read-write stream. The two streams operate independently, so clients and servers can read and write in whatever order they like: for example, the server could wait to receive all the client messages before writing its responses, or it could alternately read a message then write a message, or some other combination of reads and writes. The order of messages in each stream is preserved.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">rpc BidiHello(stream HelloRequest) returns (stream HelloResponse);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"Use-with-Typescript\"><a href=\"#Use-with-Typescript\" class=\"headerlink\" title=\"Use with Typescript\"></a>Use with Typescript</h3><h4 id=\"Init\"><a href=\"#Init\" class=\"headerlink\" title=\"Init\"></a>Init</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn init</span><br><span class=\"line\">yarn add grpc grpc-tools grpc_tools_node_protoc_ts ts-node-dev typescript</span><br><span class=\"line\">tsc --init</span><br></pre></td></tr></table></figure>\n<h4 id=\"Create-proto-file\"><a href=\"#Create-proto-file\" class=\"headerlink\" title=\"Create proto file\"></a>Create proto file</h4><p>create user.proto file </p>\n<figure class=\"highlight protobuf\"><table><tr><td class=\"code\"><pre><span class=\"line\">syntax = <span class=\"string\">\"proto3\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">package</span> userservice;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">message</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> name = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"built_in\">int32</span> age = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> email = <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">message</span> <span class=\"title\">GetUserByAgeRequest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">int32</span> age = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">message</span> <span class=\"title\">GetUserByAgeResponse</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">repeated</span> User users = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">service</span> <span class=\"title\">UserService</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">rpc</span> GetUserByAge(GetUserByAgeRequest) <span class=\"keyword\">returns</span> (GetUserByAgeResponse) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Generate-code-from-the-proto-file\"><a href=\"#Generate-code-from-the-proto-file\" class=\"headerlink\" title=\"Generate code from the proto file\"></a>Generate code from the proto file</h4><p>Create gen.sh file</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npx grpc_tools_node_protoc \\</span><br><span class=\"line\">--js_out=import_style=commonjs,binary:./ \\</span><br><span class=\"line\">--grpc_out=./ \\</span><br><span class=\"line\">--ts_out=./ \\</span><br><span class=\"line\">user.proto</span><br></pre></td></tr></table></figure>\n<p>Make sure this file is executable </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">chmod +x gen.sh</span><br><span class=\"line\">./gen.sh</span><br></pre></td></tr></table></figure>\n<p>The script will generate two file for js and two file for ts.The grpc one define our service and the other one contain our object.</p>\n<p>Create server.ts file and create our gRPC server</p>\n <figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> grpc <span class=\"keyword\">from</span> <span class=\"string\">'grpc'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; IUserServiceServer, UserServiceService &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./user_grpc_pb'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; User, GetUserByAgeResponse, GetUserByAgeRequest &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./user_pb'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> server = <span class=\"keyword\">new</span> grpc.Server();</span><br><span class=\"line\">server.addService&lt;IUserServiceServer&gt;(UserServiceService, <span class=\"keyword\">new</span> UserService());</span><br><span class=\"line\">server.bind(<span class=\"string\">'0.0.0.0:3302'</span>, grpc.ServerCredentials.createInsecure());</span><br><span class=\"line\">server.start()</span><br></pre></td></tr></table></figure>\n<p>Then write the UserService class implements IUserServiceServer</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> grpc <span class=\"keyword\">from</span> <span class=\"string\">'grpc'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; IUserServiceServer, UserServiceService &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./user_grpc_pb'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; User, GetUserByAgeResponse, GetUserByAgeRequest &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./user_pb'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> server = <span class=\"keyword\">new</span> grpc.Server();</span><br><span class=\"line\"><span class=\"keyword\">const</span> allUsers: User.AsObject[] = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        name: <span class=\"string\">'leeho'</span>,</span><br><span class=\"line\">        age: <span class=\"number\">15</span>,</span><br><span class=\"line\">        email: <span class=\"string\">'ybleeho@gmail.com'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        name: <span class=\"string\">'leeho'</span>,</span><br><span class=\"line\">        age: <span class=\"number\">20</span>,</span><br><span class=\"line\">        email: <span class=\"string\">'ybleeho2@gmail.com'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        name: <span class=\"string\">'leeho'</span>,</span><br><span class=\"line\">        age: <span class=\"number\">30</span>,</span><br><span class=\"line\">        email: <span class=\"string\">'ybleeho3@gmail.com'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"keyword\">class</span> UserService <span class=\"keyword\">implements</span> IUserServiceServer &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> getUserByAge(</span><br><span class=\"line\">        call: grpc.ServerUnaryCall&lt;GetUserByAgeRequest&gt;,</span><br><span class=\"line\">        callback: grpc.sendUnaryData&lt;GetUserByAgeResponse&gt;</span><br><span class=\"line\">    ): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> &#123;request&#125; = call;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> age = request.getAge();</span><br><span class=\"line\">        <span class=\"keyword\">const</span> users = allUsers.filter(<span class=\"function\"><span class=\"params\">user</span> =&gt;</span> user.age &gt;= age);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> response = <span class=\"keyword\">new</span> GetUserByAgeResponse();</span><br><span class=\"line\">        <span class=\"keyword\">const</span> result: User[] = [];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">const</span> user of users) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> userGrpc: User = <span class=\"keyword\">new</span> User();</span><br><span class=\"line\">            userGrpc.setName(user.name);</span><br><span class=\"line\">            userGrpc.setAge(user.age);</span><br><span class=\"line\">            userGrpc.setEmail(user.email);</span><br><span class=\"line\">            result.push(userGrpc);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        response.setUsersList(result);</span><br><span class=\"line\">        callback(<span class=\"literal\">null</span>, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server.addService&lt;IUserServiceServer&gt;(UserServiceService, <span class=\"keyword\">new</span> UserService());</span><br><span class=\"line\">server.bind(<span class=\"string\">'0.0.0.0:3302'</span>, grpc.ServerCredentials.createInsecure());</span><br><span class=\"line\">server.start()</span><br></pre></td></tr></table></figure>\n<p>Last edit the <code>package.json</code> as below:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"grpc\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"main\"</span>: <span class=\"string\">\"index.js\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"license\"</span>: <span class=\"string\">\"MIT\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"start\"</span>: <span class=\"string\">\"ts-node-dev ./server.ts\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"grpc\"</span>: <span class=\"string\">\"^1.24.3\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"grpc-tools\"</span>: <span class=\"string\">\"^1.9.1\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"grpc_tools_node_protoc_ts\"</span>: <span class=\"string\">\"^4.1.5\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"ts-node-dev\"</span>: <span class=\"string\">\"^1.0.0-pre.63\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"typescript\"</span>: <span class=\"string\">\"^4.0.3\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Than start the server with <code>yarn start</code> command.</p>\n<p>We can test the gRPC server with <a href=\"https://github.com/uw-labs/bloomrpc\">BloomRPC</a>.</p>\n<p>You can see the results as blow.</p>\n<p><img src=\"/images/gPRC-test-result.png\" alt=\"gPRC-test-result\"></p>\n"},{"title":"Android-开发笔记-kotlin基础","date":"2019-08-23T13:57:49.000Z","_content":"# 未完待续。\n\n## 1. 流程处理\n\n### when\n```\n/* fizz buzz problem*/\n\nfun fizzBuzz(i: Int) = when {\n    i % 15 == 0 -> \"FizzBuzz\"\n    i % 3 == 0 -> \"Fizz\"\n    i % 5 == 0 -> \"Buzz\"\n    else -> \"$i \"\n}\n\nfun main() {\n    for(i in 1..50)\n        println(fizzBuzz(i))\n\n    /* 从50到1 步长为2 */\n    for(i in 50 downTo 1 step 2)\n        println(fizzBuzz(i))\n}\n```\n\n## 2. 类\n\n### 自定义访问器\n```\nclass Rectangle(val height: Int, val width: Int) {\n    val isSquare: Boolean\n    get() = height == width\n}\n\nval isSquare = Rectangle(40, 40).isSquare\n```\n\n### 继承与扩展\n```\n/* 可重写成员函数*/\nopen class View {\n    open fun click() = println(\"View clicked\")\n}\nclass Button: View() {\n    override fun click() {\n        println(\"Button Clicked\")\n    }\n}\n/* 不能重写扩展函数*/\nfun View.showOff() = println(\"I am a view\")\nfun Button.showOff() = println(\"I am a Button\")\n\nfun main() {\n    val view: View = Button()\n    view.click()   /* Button Clicked */\n    view.showOff() /* I am a view */\n}\n```\n\n* Java类的默认方法是open, 而Kotlin是final, 在open类中仅open函数和override的函数可以在子类中重写,\n当想在open类中override的方法防止被子类重写，可以将此方法标注为final, 来限制他被重写。\n```\nopen class Clickable {\n    open fun click() = println(\"clickable\")\n}\n\nopen class Button: Clickable() {\n    final override fun click() {\n        println(\"button clickable\")\n    }\n}\n```\n* Kotlin中比Java多了一个internal修饰符，其作用是在模块中可见。Kotlin中的默认声明是public，而且在Kotlin中的\nprotected修饰符只能在类和他的子类中可见，不像java一样在同一个包中访问protected的成员。类的扩展函数不能访问类的\nprivate和protected成员。\n\n* 嵌套类和内部类在Java与Kotlin中的对应关系\n\n| 类A在另一个类B中声明       | 在Java中       | 在Kotlin中    |\n|----------------------------|----------------|---------------|\n| 嵌套类（不存储外部引用）   | static class A | class A       |\n| 内部类（存储外部类的引用） | class A        | inner class A |\n\n* Inner类访问Outer类\n```\nclass Outer {\n    inner class Inner {\n        fun getOuterReference(): Outer = this@Outer\n    }\n}\n```\n* 密封类的表达式-所有的直接子类必须嵌套在父类中, 关键字用sealed\n```\nsealed class Expr {\n    class Num(val value: Int): Expr()\n    class Sum(val left: Expr, val right: Expr): Expr()\n}\n\nfun eval(e: Expr): Int =\n    when(e) {\n        is Expr.Num -> e.value\n        is Expr.Sum -> eval(e.right)  + eval(e.left)\n    }\n\nfun main() {\n    val left = Expr.Num(5)\n    val right = Expr.Num(3)\n    val sum = Expr.Sum(left, right)\n    println(eval(sum))  /* 8 */\n}\n```\n\n* 继承父类即使他没有参数也必须要调用父类的狗仔方法，也就是在父类名称后面加空的括号，但是如果是实现\n接口，不需要在他的名称后面加括号。\n\n\n* 使用委托类 - by\n```\nclass CountingTest<T>(\n    val innerSet : MutableCollection<T> = HashSet<T>()\n) : MutableCollection<T> by innerSet {\n    var objectsAdded = 0\n    override fun add(element: T): Boolean {\n        objectsAdded++\n        return innerSet.add(element)\n    }\n\n    override fun addAll(elements: Collection<T>): Boolean {\n        objectsAdded += elements.size\n        return innerSet.addAll(elements)\n    }\n\n}\n\nfun main() {\n    val cset = CountingTest<Int>()\n    cset.addAll(listOf(1, 2, 3))\n    println(\"${cset.objectsAdded} object awere added, ${cset.size}   remain\")\n}\n```\n\n\n* 对象声明是Kotlin中定义单例类的方法。\n* 伴生对象代替了Java的静态方法和字段定义。\n\n\n## 3. run, also, apply, let, with\n\n```\ninline fun <T, R> with(receiver: T, block: T.() -> R): R {\n    return receiver.block()\n}\ninline fun <T> T.also(block: (T) -> Unit): T {\n    block(this)\n    return this\n}\ninline fun <T> T.apply(block: T.() -> Unit): T {\n    block()\n    return this\n}\ninline fun <T, R> T.let(block: (T) -> R): R {\n    return block(this)\n}\ninline fun <T, R> T.run(block: T.() -> R): R {\n    return block()\n}\n```\n","source":"_posts/Android-开发笔记-kotlin基础.md","raw":"---\ntitle: Android-开发笔记-kotlin基础\ndate: 2019-08-23 21:57:49\ntags:\n---\n# 未完待续。\n\n## 1. 流程处理\n\n### when\n```\n/* fizz buzz problem*/\n\nfun fizzBuzz(i: Int) = when {\n    i % 15 == 0 -> \"FizzBuzz\"\n    i % 3 == 0 -> \"Fizz\"\n    i % 5 == 0 -> \"Buzz\"\n    else -> \"$i \"\n}\n\nfun main() {\n    for(i in 1..50)\n        println(fizzBuzz(i))\n\n    /* 从50到1 步长为2 */\n    for(i in 50 downTo 1 step 2)\n        println(fizzBuzz(i))\n}\n```\n\n## 2. 类\n\n### 自定义访问器\n```\nclass Rectangle(val height: Int, val width: Int) {\n    val isSquare: Boolean\n    get() = height == width\n}\n\nval isSquare = Rectangle(40, 40).isSquare\n```\n\n### 继承与扩展\n```\n/* 可重写成员函数*/\nopen class View {\n    open fun click() = println(\"View clicked\")\n}\nclass Button: View() {\n    override fun click() {\n        println(\"Button Clicked\")\n    }\n}\n/* 不能重写扩展函数*/\nfun View.showOff() = println(\"I am a view\")\nfun Button.showOff() = println(\"I am a Button\")\n\nfun main() {\n    val view: View = Button()\n    view.click()   /* Button Clicked */\n    view.showOff() /* I am a view */\n}\n```\n\n* Java类的默认方法是open, 而Kotlin是final, 在open类中仅open函数和override的函数可以在子类中重写,\n当想在open类中override的方法防止被子类重写，可以将此方法标注为final, 来限制他被重写。\n```\nopen class Clickable {\n    open fun click() = println(\"clickable\")\n}\n\nopen class Button: Clickable() {\n    final override fun click() {\n        println(\"button clickable\")\n    }\n}\n```\n* Kotlin中比Java多了一个internal修饰符，其作用是在模块中可见。Kotlin中的默认声明是public，而且在Kotlin中的\nprotected修饰符只能在类和他的子类中可见，不像java一样在同一个包中访问protected的成员。类的扩展函数不能访问类的\nprivate和protected成员。\n\n* 嵌套类和内部类在Java与Kotlin中的对应关系\n\n| 类A在另一个类B中声明       | 在Java中       | 在Kotlin中    |\n|----------------------------|----------------|---------------|\n| 嵌套类（不存储外部引用）   | static class A | class A       |\n| 内部类（存储外部类的引用） | class A        | inner class A |\n\n* Inner类访问Outer类\n```\nclass Outer {\n    inner class Inner {\n        fun getOuterReference(): Outer = this@Outer\n    }\n}\n```\n* 密封类的表达式-所有的直接子类必须嵌套在父类中, 关键字用sealed\n```\nsealed class Expr {\n    class Num(val value: Int): Expr()\n    class Sum(val left: Expr, val right: Expr): Expr()\n}\n\nfun eval(e: Expr): Int =\n    when(e) {\n        is Expr.Num -> e.value\n        is Expr.Sum -> eval(e.right)  + eval(e.left)\n    }\n\nfun main() {\n    val left = Expr.Num(5)\n    val right = Expr.Num(3)\n    val sum = Expr.Sum(left, right)\n    println(eval(sum))  /* 8 */\n}\n```\n\n* 继承父类即使他没有参数也必须要调用父类的狗仔方法，也就是在父类名称后面加空的括号，但是如果是实现\n接口，不需要在他的名称后面加括号。\n\n\n* 使用委托类 - by\n```\nclass CountingTest<T>(\n    val innerSet : MutableCollection<T> = HashSet<T>()\n) : MutableCollection<T> by innerSet {\n    var objectsAdded = 0\n    override fun add(element: T): Boolean {\n        objectsAdded++\n        return innerSet.add(element)\n    }\n\n    override fun addAll(elements: Collection<T>): Boolean {\n        objectsAdded += elements.size\n        return innerSet.addAll(elements)\n    }\n\n}\n\nfun main() {\n    val cset = CountingTest<Int>()\n    cset.addAll(listOf(1, 2, 3))\n    println(\"${cset.objectsAdded} object awere added, ${cset.size}   remain\")\n}\n```\n\n\n* 对象声明是Kotlin中定义单例类的方法。\n* 伴生对象代替了Java的静态方法和字段定义。\n\n\n## 3. run, also, apply, let, with\n\n```\ninline fun <T, R> with(receiver: T, block: T.() -> R): R {\n    return receiver.block()\n}\ninline fun <T> T.also(block: (T) -> Unit): T {\n    block(this)\n    return this\n}\ninline fun <T> T.apply(block: T.() -> Unit): T {\n    block()\n    return this\n}\ninline fun <T, R> T.let(block: (T) -> R): R {\n    return block(this)\n}\ninline fun <T, R> T.run(block: T.() -> R): R {\n    return block()\n}\n```\n","slug":"Android-开发笔记-kotlin基础","published":1,"updated":"2019-09-01T09:19:41.626Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc73o0004u60nohf65gc7","content":"<h1 id=\"未完待续。\"><a href=\"#未完待续。\" class=\"headerlink\" title=\"未完待续。\"></a>未完待续。</h1><h2 id=\"1-流程处理\"><a href=\"#1-流程处理\" class=\"headerlink\" title=\"1. 流程处理\"></a>1. 流程处理</h2><h3 id=\"when\"><a href=\"#when\" class=\"headerlink\" title=\"when\"></a>when</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">/* fizz buzz problem*/</span><br><span class=\"line\"></span><br><span class=\"line\">fun fizzBuzz(i: Int) = when &#123;</span><br><span class=\"line\">    i % 15 == 0 -&gt; &quot;FizzBuzz&quot;</span><br><span class=\"line\">    i % 3 == 0 -&gt; &quot;Fizz&quot;</span><br><span class=\"line\">    i % 5 == 0 -&gt; &quot;Buzz&quot;</span><br><span class=\"line\">    else -&gt; &quot;$i &quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fun main() &#123;</span><br><span class=\"line\">    for(i in 1..50)</span><br><span class=\"line\">        println(fizzBuzz(i))</span><br><span class=\"line\"></span><br><span class=\"line\">    /* 从50到1 步长为2 */</span><br><span class=\"line\">    for(i in 50 downTo 1 step 2)</span><br><span class=\"line\">        println(fizzBuzz(i))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-类\"><a href=\"#2-类\" class=\"headerlink\" title=\"2. 类\"></a>2. 类</h2><h3 id=\"自定义访问器\"><a href=\"#自定义访问器\" class=\"headerlink\" title=\"自定义访问器\"></a>自定义访问器</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Rectangle(val height: Int, val width: Int) &#123;</span><br><span class=\"line\">    val isSquare: Boolean</span><br><span class=\"line\">    get() = height == width</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">val isSquare = Rectangle(40, 40).isSquare</span><br></pre></td></tr></table></figure>\n<h3 id=\"继承与扩展\"><a href=\"#继承与扩展\" class=\"headerlink\" title=\"继承与扩展\"></a>继承与扩展</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">/* 可重写成员函数*/</span><br><span class=\"line\">open class View &#123;</span><br><span class=\"line\">    open fun click() = println(&quot;View clicked&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class Button: View() &#123;</span><br><span class=\"line\">    override fun click() &#123;</span><br><span class=\"line\">        println(&quot;Button Clicked&quot;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* 不能重写扩展函数*/</span><br><span class=\"line\">fun View.showOff() = println(&quot;I am a view&quot;)</span><br><span class=\"line\">fun Button.showOff() = println(&quot;I am a Button&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">fun main() &#123;</span><br><span class=\"line\">    val view: View = Button()</span><br><span class=\"line\">    view.click()   /* Button Clicked */</span><br><span class=\"line\">    view.showOff() /* I am a view */</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>Java类的默认方法是open, 而Kotlin是final, 在open类中仅open函数和override的函数可以在子类中重写,<br>当想在open类中override的方法防止被子类重写，可以将此方法标注为final, 来限制他被重写。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">open class Clickable &#123;</span><br><span class=\"line\">    open fun click() = println(&quot;clickable&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">open class Button: Clickable() &#123;</span><br><span class=\"line\">    final override fun click() &#123;</span><br><span class=\"line\">        println(&quot;button clickable&quot;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Kotlin中比Java多了一个internal修饰符，其作用是在模块中可见。Kotlin中的默认声明是public，而且在Kotlin中的<br>protected修饰符只能在类和他的子类中可见，不像java一样在同一个包中访问protected的成员。类的扩展函数不能访问类的<br>private和protected成员。</p>\n</li>\n<li><p>嵌套类和内部类在Java与Kotlin中的对应关系</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>类A在另一个类B中声明</th>\n<th>在Java中</th>\n<th>在Kotlin中</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>嵌套类（不存储外部引用）</td>\n<td>static class A</td>\n<td>class A</td>\n</tr>\n<tr>\n<td>内部类（存储外部类的引用）</td>\n<td>class A</td>\n<td>inner class A</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><p>Inner类访问Outer类</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Outer &#123;</span><br><span class=\"line\">    inner class Inner &#123;</span><br><span class=\"line\">        fun getOuterReference(): Outer = this@Outer</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>密封类的表达式-所有的直接子类必须嵌套在父类中, 关键字用sealed</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sealed class Expr &#123;</span><br><span class=\"line\">    class Num(val value: Int): Expr()</span><br><span class=\"line\">    class Sum(val left: Expr, val right: Expr): Expr()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fun eval(e: Expr): Int =</span><br><span class=\"line\">    when(e) &#123;</span><br><span class=\"line\">        is Expr.Num -&gt; e.value</span><br><span class=\"line\">        is Expr.Sum -&gt; eval(e.right)  + eval(e.left)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fun main() &#123;</span><br><span class=\"line\">    val left = Expr.Num(5)</span><br><span class=\"line\">    val right = Expr.Num(3)</span><br><span class=\"line\">    val sum = Expr.Sum(left, right)</span><br><span class=\"line\">    println(eval(sum))  /* 8 */</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>继承父类即使他没有参数也必须要调用父类的狗仔方法，也就是在父类名称后面加空的括号，但是如果是实现<br>接口，不需要在他的名称后面加括号。</p>\n</li>\n</ul>\n<ul>\n<li><p>使用委托类 - by</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class CountingTest&lt;T&gt;(</span><br><span class=\"line\">    val innerSet : MutableCollection&lt;T&gt; = HashSet&lt;T&gt;()</span><br><span class=\"line\">) : MutableCollection&lt;T&gt; by innerSet &#123;</span><br><span class=\"line\">    var objectsAdded = 0</span><br><span class=\"line\">    override fun add(element: T): Boolean &#123;</span><br><span class=\"line\">        objectsAdded++</span><br><span class=\"line\">        return innerSet.add(element)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    override fun addAll(elements: Collection&lt;T&gt;): Boolean &#123;</span><br><span class=\"line\">        objectsAdded += elements.size</span><br><span class=\"line\">        return innerSet.addAll(elements)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fun main() &#123;</span><br><span class=\"line\">    val cset = CountingTest&lt;Int&gt;()</span><br><span class=\"line\">    cset.addAll(listOf(1, 2, 3))</span><br><span class=\"line\">    println(&quot;$&#123;cset.objectsAdded&#125; object awere added, $&#123;cset.size&#125;   remain&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>对象声明是Kotlin中定义单例类的方法。</p>\n</li>\n<li>伴生对象代替了Java的静态方法和字段定义。</li>\n</ul>\n<h2 id=\"3-run-also-apply-let-with\"><a href=\"#3-run-also-apply-let-with\" class=\"headerlink\" title=\"3. run, also, apply, let, with\"></a>3. run, also, apply, let, with</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">inline fun &lt;T, R&gt; with(receiver: T, block: T.() -&gt; R): R &#123;</span><br><span class=\"line\">    return receiver.block()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">inline fun &lt;T&gt; T.also(block: (T) -&gt; Unit): T &#123;</span><br><span class=\"line\">    block(this)</span><br><span class=\"line\">    return this</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">inline fun &lt;T&gt; T.apply(block: T.() -&gt; Unit): T &#123;</span><br><span class=\"line\">    block()</span><br><span class=\"line\">    return this</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">inline fun &lt;T, R&gt; T.let(block: (T) -&gt; R): R &#123;</span><br><span class=\"line\">    return block(this)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">inline fun &lt;T, R&gt; T.run(block: T.() -&gt; R): R &#123;</span><br><span class=\"line\">    return block()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"未完待续。\"><a href=\"#未完待续。\" class=\"headerlink\" title=\"未完待续。\"></a>未完待续。</h1><h2 id=\"1-流程处理\"><a href=\"#1-流程处理\" class=\"headerlink\" title=\"1. 流程处理\"></a>1. 流程处理</h2><h3 id=\"when\"><a href=\"#when\" class=\"headerlink\" title=\"when\"></a>when</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">/* fizz buzz problem*/</span><br><span class=\"line\"></span><br><span class=\"line\">fun fizzBuzz(i: Int) = when &#123;</span><br><span class=\"line\">    i % 15 == 0 -&gt; &quot;FizzBuzz&quot;</span><br><span class=\"line\">    i % 3 == 0 -&gt; &quot;Fizz&quot;</span><br><span class=\"line\">    i % 5 == 0 -&gt; &quot;Buzz&quot;</span><br><span class=\"line\">    else -&gt; &quot;$i &quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fun main() &#123;</span><br><span class=\"line\">    for(i in 1..50)</span><br><span class=\"line\">        println(fizzBuzz(i))</span><br><span class=\"line\"></span><br><span class=\"line\">    /* 从50到1 步长为2 */</span><br><span class=\"line\">    for(i in 50 downTo 1 step 2)</span><br><span class=\"line\">        println(fizzBuzz(i))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-类\"><a href=\"#2-类\" class=\"headerlink\" title=\"2. 类\"></a>2. 类</h2><h3 id=\"自定义访问器\"><a href=\"#自定义访问器\" class=\"headerlink\" title=\"自定义访问器\"></a>自定义访问器</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Rectangle(val height: Int, val width: Int) &#123;</span><br><span class=\"line\">    val isSquare: Boolean</span><br><span class=\"line\">    get() = height == width</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">val isSquare = Rectangle(40, 40).isSquare</span><br></pre></td></tr></table></figure>\n<h3 id=\"继承与扩展\"><a href=\"#继承与扩展\" class=\"headerlink\" title=\"继承与扩展\"></a>继承与扩展</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">/* 可重写成员函数*/</span><br><span class=\"line\">open class View &#123;</span><br><span class=\"line\">    open fun click() = println(&quot;View clicked&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class Button: View() &#123;</span><br><span class=\"line\">    override fun click() &#123;</span><br><span class=\"line\">        println(&quot;Button Clicked&quot;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* 不能重写扩展函数*/</span><br><span class=\"line\">fun View.showOff() = println(&quot;I am a view&quot;)</span><br><span class=\"line\">fun Button.showOff() = println(&quot;I am a Button&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">fun main() &#123;</span><br><span class=\"line\">    val view: View = Button()</span><br><span class=\"line\">    view.click()   /* Button Clicked */</span><br><span class=\"line\">    view.showOff() /* I am a view */</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>Java类的默认方法是open, 而Kotlin是final, 在open类中仅open函数和override的函数可以在子类中重写,<br>当想在open类中override的方法防止被子类重写，可以将此方法标注为final, 来限制他被重写。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">open class Clickable &#123;</span><br><span class=\"line\">    open fun click() = println(&quot;clickable&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">open class Button: Clickable() &#123;</span><br><span class=\"line\">    final override fun click() &#123;</span><br><span class=\"line\">        println(&quot;button clickable&quot;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Kotlin中比Java多了一个internal修饰符，其作用是在模块中可见。Kotlin中的默认声明是public，而且在Kotlin中的<br>protected修饰符只能在类和他的子类中可见，不像java一样在同一个包中访问protected的成员。类的扩展函数不能访问类的<br>private和protected成员。</p>\n</li>\n<li><p>嵌套类和内部类在Java与Kotlin中的对应关系</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>类A在另一个类B中声明</th>\n<th>在Java中</th>\n<th>在Kotlin中</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>嵌套类（不存储外部引用）</td>\n<td>static class A</td>\n<td>class A</td>\n</tr>\n<tr>\n<td>内部类（存储外部类的引用）</td>\n<td>class A</td>\n<td>inner class A</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><p>Inner类访问Outer类</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Outer &#123;</span><br><span class=\"line\">    inner class Inner &#123;</span><br><span class=\"line\">        fun getOuterReference(): Outer = this@Outer</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>密封类的表达式-所有的直接子类必须嵌套在父类中, 关键字用sealed</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sealed class Expr &#123;</span><br><span class=\"line\">    class Num(val value: Int): Expr()</span><br><span class=\"line\">    class Sum(val left: Expr, val right: Expr): Expr()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fun eval(e: Expr): Int =</span><br><span class=\"line\">    when(e) &#123;</span><br><span class=\"line\">        is Expr.Num -&gt; e.value</span><br><span class=\"line\">        is Expr.Sum -&gt; eval(e.right)  + eval(e.left)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fun main() &#123;</span><br><span class=\"line\">    val left = Expr.Num(5)</span><br><span class=\"line\">    val right = Expr.Num(3)</span><br><span class=\"line\">    val sum = Expr.Sum(left, right)</span><br><span class=\"line\">    println(eval(sum))  /* 8 */</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>继承父类即使他没有参数也必须要调用父类的狗仔方法，也就是在父类名称后面加空的括号，但是如果是实现<br>接口，不需要在他的名称后面加括号。</p>\n</li>\n</ul>\n<ul>\n<li><p>使用委托类 - by</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class CountingTest&lt;T&gt;(</span><br><span class=\"line\">    val innerSet : MutableCollection&lt;T&gt; = HashSet&lt;T&gt;()</span><br><span class=\"line\">) : MutableCollection&lt;T&gt; by innerSet &#123;</span><br><span class=\"line\">    var objectsAdded = 0</span><br><span class=\"line\">    override fun add(element: T): Boolean &#123;</span><br><span class=\"line\">        objectsAdded++</span><br><span class=\"line\">        return innerSet.add(element)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    override fun addAll(elements: Collection&lt;T&gt;): Boolean &#123;</span><br><span class=\"line\">        objectsAdded += elements.size</span><br><span class=\"line\">        return innerSet.addAll(elements)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fun main() &#123;</span><br><span class=\"line\">    val cset = CountingTest&lt;Int&gt;()</span><br><span class=\"line\">    cset.addAll(listOf(1, 2, 3))</span><br><span class=\"line\">    println(&quot;$&#123;cset.objectsAdded&#125; object awere added, $&#123;cset.size&#125;   remain&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>对象声明是Kotlin中定义单例类的方法。</p>\n</li>\n<li>伴生对象代替了Java的静态方法和字段定义。</li>\n</ul>\n<h2 id=\"3-run-also-apply-let-with\"><a href=\"#3-run-also-apply-let-with\" class=\"headerlink\" title=\"3. run, also, apply, let, with\"></a>3. run, also, apply, let, with</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">inline fun &lt;T, R&gt; with(receiver: T, block: T.() -&gt; R): R &#123;</span><br><span class=\"line\">    return receiver.block()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">inline fun &lt;T&gt; T.also(block: (T) -&gt; Unit): T &#123;</span><br><span class=\"line\">    block(this)</span><br><span class=\"line\">    return this</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">inline fun &lt;T&gt; T.apply(block: T.() -&gt; Unit): T &#123;</span><br><span class=\"line\">    block()</span><br><span class=\"line\">    return this</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">inline fun &lt;T, R&gt; T.let(block: (T) -&gt; R): R &#123;</span><br><span class=\"line\">    return block(this)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">inline fun &lt;T, R&gt; T.run(block: T.() -&gt; R): R &#123;</span><br><span class=\"line\">    return block()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Android-开发笔记-Kodein","date":"2019-10-03T12:57:28.000Z","_content":"\n> Kodein(Kotlin Dependency Injection)并不是一个整整的依赖注入框架，而是依赖检索容器。\n\n## Kodein作用\n\n* Lazily instantiate your dependencies when needed\n* Stop caring about dependency initialization order\n* Easily bind classes or interfaces to their instance or provider\n* Easily debug your dependency bindings and recursions\n* It proposes a very simple and readable declarative DSL\n\n## 如何使用？\n\n1.Install\n```\ncompile 'org.kodein.di:kodein-di-generic-jvm:5.2.0'\ncompile 'org.kodein.di:kodein-di-framework-android-x:5.2.0'\n```\n\n2.Declare the dependency bindings in the Android Application, having it implements KodeinAware\n\n```\nclass MyApp : Application(), KodeinAware {\n\toverride val kodein = Kodein.lazy {\n\t    /* bindings */\n\t}\n}\n```\n\n3.Retrieve the Kodein object with the colsestKodein function\n\n```\nclass MyActivity : Activity(), KodeinAware {\n    override val kodein by closestKodein()\n    val ds: DataSource by instance()\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        ds.connect()\n        /* ... */\n    }\n}\n```\n\n## 绑定方式\n\n1.Singleton 单例 传入 () → T\n\n2.Provider 每次加载都生成新的实例，无参， 传入() -> T\n```\nval kodein = Kodein {\n    bind<Die>() with provider { RandomDie(6) }\n}\n```\n\n3.Factory 跟Provider相似，每次调用会返回一个新的实例，不同的是接受以定义类型的参数并返回绑定类型的对象 (A) -> T\n```\nval kodein = Kodein {\n    bind<Die>() with factory { sides: Int -> RandomDie(sides) }\n}\n```\n","source":"_posts/Android-开发笔记-Kodein.md","raw":"---\ntitle: Android-开发笔记-Kodein\ndate: 2019-10-03 20:57:28\ntags:\n---\n\n> Kodein(Kotlin Dependency Injection)并不是一个整整的依赖注入框架，而是依赖检索容器。\n\n## Kodein作用\n\n* Lazily instantiate your dependencies when needed\n* Stop caring about dependency initialization order\n* Easily bind classes or interfaces to their instance or provider\n* Easily debug your dependency bindings and recursions\n* It proposes a very simple and readable declarative DSL\n\n## 如何使用？\n\n1.Install\n```\ncompile 'org.kodein.di:kodein-di-generic-jvm:5.2.0'\ncompile 'org.kodein.di:kodein-di-framework-android-x:5.2.0'\n```\n\n2.Declare the dependency bindings in the Android Application, having it implements KodeinAware\n\n```\nclass MyApp : Application(), KodeinAware {\n\toverride val kodein = Kodein.lazy {\n\t    /* bindings */\n\t}\n}\n```\n\n3.Retrieve the Kodein object with the colsestKodein function\n\n```\nclass MyActivity : Activity(), KodeinAware {\n    override val kodein by closestKodein()\n    val ds: DataSource by instance()\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        ds.connect()\n        /* ... */\n    }\n}\n```\n\n## 绑定方式\n\n1.Singleton 单例 传入 () → T\n\n2.Provider 每次加载都生成新的实例，无参， 传入() -> T\n```\nval kodein = Kodein {\n    bind<Die>() with provider { RandomDie(6) }\n}\n```\n\n3.Factory 跟Provider相似，每次调用会返回一个新的实例，不同的是接受以定义类型的参数并返回绑定类型的对象 (A) -> T\n```\nval kodein = Kodein {\n    bind<Die>() with factory { sides: Int -> RandomDie(sides) }\n}\n```\n","slug":"Android-开发笔记-Kodein","published":1,"updated":"2019-10-06T13:40:20.659Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc73p0006u60nyv5bp34k","content":"<blockquote>\n<p>Kodein(Kotlin Dependency Injection)并不是一个整整的依赖注入框架，而是依赖检索容器。</p>\n</blockquote>\n<h2 id=\"Kodein作用\"><a href=\"#Kodein作用\" class=\"headerlink\" title=\"Kodein作用\"></a>Kodein作用</h2><ul>\n<li>Lazily instantiate your dependencies when needed</li>\n<li>Stop caring about dependency initialization order</li>\n<li>Easily bind classes or interfaces to their instance or provider</li>\n<li>Easily debug your dependency bindings and recursions</li>\n<li>It proposes a very simple and readable declarative DSL</li>\n</ul>\n<h2 id=\"如何使用？\"><a href=\"#如何使用？\" class=\"headerlink\" title=\"如何使用？\"></a>如何使用？</h2><p>1.Install<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">compile &apos;org.kodein.di:kodein-di-generic-jvm:5.2.0&apos;</span><br><span class=\"line\">compile &apos;org.kodein.di:kodein-di-framework-android-x:5.2.0&apos;</span><br></pre></td></tr></table></figure></p>\n<p>2.Declare the dependency bindings in the Android Application, having it implements KodeinAware</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class MyApp : Application(), KodeinAware &#123;</span><br><span class=\"line\">\toverride val kodein = Kodein.lazy &#123;</span><br><span class=\"line\">\t    /* bindings */</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3.Retrieve the Kodein object with the colsestKodein function</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class MyActivity : Activity(), KodeinAware &#123;</span><br><span class=\"line\">    override val kodein by closestKodein()</span><br><span class=\"line\">    val ds: DataSource by instance()</span><br><span class=\"line\">    override fun onCreate(savedInstanceState: Bundle?) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState)</span><br><span class=\"line\">        ds.connect()</span><br><span class=\"line\">        /* ... */</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"绑定方式\"><a href=\"#绑定方式\" class=\"headerlink\" title=\"绑定方式\"></a>绑定方式</h2><p>1.Singleton 单例 传入 () → T</p>\n<p>2.Provider 每次加载都生成新的实例，无参， 传入() -&gt; T<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">val kodein = Kodein &#123;</span><br><span class=\"line\">    bind&lt;Die&gt;() with provider &#123; RandomDie(6) &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>3.Factory 跟Provider相似，每次调用会返回一个新的实例，不同的是接受以定义类型的参数并返回绑定类型的对象 (A) -&gt; T<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">val kodein = Kodein &#123;</span><br><span class=\"line\">    bind&lt;Die&gt;() with factory &#123; sides: Int -&gt; RandomDie(sides) &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Kodein(Kotlin Dependency Injection)并不是一个整整的依赖注入框架，而是依赖检索容器。</p>\n</blockquote>\n<h2 id=\"Kodein作用\"><a href=\"#Kodein作用\" class=\"headerlink\" title=\"Kodein作用\"></a>Kodein作用</h2><ul>\n<li>Lazily instantiate your dependencies when needed</li>\n<li>Stop caring about dependency initialization order</li>\n<li>Easily bind classes or interfaces to their instance or provider</li>\n<li>Easily debug your dependency bindings and recursions</li>\n<li>It proposes a very simple and readable declarative DSL</li>\n</ul>\n<h2 id=\"如何使用？\"><a href=\"#如何使用？\" class=\"headerlink\" title=\"如何使用？\"></a>如何使用？</h2><p>1.Install<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">compile &apos;org.kodein.di:kodein-di-generic-jvm:5.2.0&apos;</span><br><span class=\"line\">compile &apos;org.kodein.di:kodein-di-framework-android-x:5.2.0&apos;</span><br></pre></td></tr></table></figure></p>\n<p>2.Declare the dependency bindings in the Android Application, having it implements KodeinAware</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class MyApp : Application(), KodeinAware &#123;</span><br><span class=\"line\">\toverride val kodein = Kodein.lazy &#123;</span><br><span class=\"line\">\t    /* bindings */</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3.Retrieve the Kodein object with the colsestKodein function</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class MyActivity : Activity(), KodeinAware &#123;</span><br><span class=\"line\">    override val kodein by closestKodein()</span><br><span class=\"line\">    val ds: DataSource by instance()</span><br><span class=\"line\">    override fun onCreate(savedInstanceState: Bundle?) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState)</span><br><span class=\"line\">        ds.connect()</span><br><span class=\"line\">        /* ... */</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"绑定方式\"><a href=\"#绑定方式\" class=\"headerlink\" title=\"绑定方式\"></a>绑定方式</h2><p>1.Singleton 单例 传入 () → T</p>\n<p>2.Provider 每次加载都生成新的实例，无参， 传入() -&gt; T<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">val kodein = Kodein &#123;</span><br><span class=\"line\">    bind&lt;Die&gt;() with provider &#123; RandomDie(6) &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>3.Factory 跟Provider相似，每次调用会返回一个新的实例，不同的是接受以定义类型的参数并返回绑定类型的对象 (A) -&gt; T<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">val kodein = Kodein &#123;</span><br><span class=\"line\">    bind&lt;Die&gt;() with factory &#123; sides: Int -&gt; RandomDie(sides) &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"Android-开发笔记-常见布局方式","date":"2019-08-20T07:00:50.000Z","_content":"\n## 1. ConstraintLayout\n\nConstraintLayout是最常见的\n\n## 2. FrameLayout\n\n## 3. LinerLayout\n\n## 4. SwipeRefreshLayout 下拉刷新布局\n","source":"_posts/Android-开发笔记-常见布局方式.md","raw":"---\ntitle: Android-开发笔记-常见布局方式\ndate: 2019-08-20 15:00:50\ntags:\n---\n\n## 1. ConstraintLayout\n\nConstraintLayout是最常见的\n\n## 2. FrameLayout\n\n## 3. LinerLayout\n\n## 4. SwipeRefreshLayout 下拉刷新布局\n","slug":"Android-开发笔记-常见布局方式","published":1,"updated":"2019-08-29T15:20:10.495Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc73r0008u60nqy49m4os","content":"<h2 id=\"1-ConstraintLayout\"><a href=\"#1-ConstraintLayout\" class=\"headerlink\" title=\"1. ConstraintLayout\"></a>1. ConstraintLayout</h2><p>ConstraintLayout是最常见的</p>\n<h2 id=\"2-FrameLayout\"><a href=\"#2-FrameLayout\" class=\"headerlink\" title=\"2. FrameLayout\"></a>2. FrameLayout</h2><h2 id=\"3-LinerLayout\"><a href=\"#3-LinerLayout\" class=\"headerlink\" title=\"3. LinerLayout\"></a>3. LinerLayout</h2><h2 id=\"4-SwipeRefreshLayout-下拉刷新布局\"><a href=\"#4-SwipeRefreshLayout-下拉刷新布局\" class=\"headerlink\" title=\"4. SwipeRefreshLayout 下拉刷新布局\"></a>4. SwipeRefreshLayout 下拉刷新布局</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-ConstraintLayout\"><a href=\"#1-ConstraintLayout\" class=\"headerlink\" title=\"1. ConstraintLayout\"></a>1. ConstraintLayout</h2><p>ConstraintLayout是最常见的</p>\n<h2 id=\"2-FrameLayout\"><a href=\"#2-FrameLayout\" class=\"headerlink\" title=\"2. FrameLayout\"></a>2. FrameLayout</h2><h2 id=\"3-LinerLayout\"><a href=\"#3-LinerLayout\" class=\"headerlink\" title=\"3. LinerLayout\"></a>3. LinerLayout</h2><h2 id=\"4-SwipeRefreshLayout-下拉刷新布局\"><a href=\"#4-SwipeRefreshLayout-下拉刷新布局\" class=\"headerlink\" title=\"4. SwipeRefreshLayout 下拉刷新布局\"></a>4. SwipeRefreshLayout 下拉刷新布局</h2>"},{"title":"Android-开发笔记-coroutines","date":"2019-12-02T08:09:18.000Z","_content":"### 概念\n\n协程是一种并发设计模式，并基于其他语言的既定概念。在Android上，协程可帮助解决两个主要问题:\n* 管理长时间运行的任务\n* 提供main-safety，或从主线程安全地调用网络或磁盘操作。\n\n```\nsuspend fun fetchDocs() {                      // Dispatchers.Main\n    val result = get(\"developer.android.com\")  // Dispatchers.Main\n    show(result)                               // Dispatchers.Main\n}\n\nsuspend fun get(url: String) =                 // Dispatchers.Main\n    withContext(Dispatchers.IO) {              // Dispatchers.IO (main-safety block)\n        /* perform network IO here */          // Dispatchers.IO (main-safety block)\n    }                                          // Dispatchers.Main\n}\n```\n\n### Dispatchers\n\n为了指定协程应该在哪里运行，Kotlin提供了三个可以使用的Dispatchers\n\n| Dispatchers.Main                                                       | Dispatchers.IO                                         | Dispatchers.Default                                   |\n|------------------------------------------------------------------------|--------------------------------------------------------|-------------------------------------------------------|\n| Main thread on Android, interact with the UI and perform light work    | Optimized for disk and network IO, off the main thread | Optimized for CPU intensive work, off the main thread |\n| Calling suspend functions,      Call UI functions,   Updating LiveData | Database*,   Reading/writing files,   Networking**     | Sorting a list,   Parsing JSON,   DiffUtils           |\n\n\n### coroutines VS RxJava\n\n一个处理请求的例子\n```\n//RxJava\ninterface SampleService {\n    @GET(\"/users\")\n    fun getTopUsers(): Deferred<List<User>>\n}\nfun load() {\n    disposable +=\n    service.getTopUsers()\n    .subscribeOn(io())\n    .observeOn(mainThread())\n    .subscribe(\n       //\n    )\n}\n//coroutines\ninterface SampleService {\n    @GET(\"/users\")\n    suspend fun getTopUsers(): List<User>\n}\nfun load() {\n        viewModelScope.launch {\n            try {\n                val users = service.getTopUsers()\n                //\n                } catch (e: Exception) {}\n        }\n}\n```\n\n---\n\n从代码风格来看coroutines的写法更加简洁更像是同步的有点像javascript的async/await味道。\n有以下两种方式之一启动协程：\n* launch启动一个新的协程，并且不会将结果返回给调用方。 可以使用发布启动任何被认为是“即发即弃”的工作。\n* async启动一个新的协程，并允许使用await的suspend函数返回结果。\n\nViewModel包含了内置的viewModelScope。这提供了一种在ViewModel范围内启动协程的标准方法，如上代码。\n\n\n### 扩展\n","source":"_posts/Android-开发笔记-coroutines.md","raw":"---\ntitle: Android-开发笔记-coroutines\ndate: 2019-12-02 16:09:18\ntags:\n---\n### 概念\n\n协程是一种并发设计模式，并基于其他语言的既定概念。在Android上，协程可帮助解决两个主要问题:\n* 管理长时间运行的任务\n* 提供main-safety，或从主线程安全地调用网络或磁盘操作。\n\n```\nsuspend fun fetchDocs() {                      // Dispatchers.Main\n    val result = get(\"developer.android.com\")  // Dispatchers.Main\n    show(result)                               // Dispatchers.Main\n}\n\nsuspend fun get(url: String) =                 // Dispatchers.Main\n    withContext(Dispatchers.IO) {              // Dispatchers.IO (main-safety block)\n        /* perform network IO here */          // Dispatchers.IO (main-safety block)\n    }                                          // Dispatchers.Main\n}\n```\n\n### Dispatchers\n\n为了指定协程应该在哪里运行，Kotlin提供了三个可以使用的Dispatchers\n\n| Dispatchers.Main                                                       | Dispatchers.IO                                         | Dispatchers.Default                                   |\n|------------------------------------------------------------------------|--------------------------------------------------------|-------------------------------------------------------|\n| Main thread on Android, interact with the UI and perform light work    | Optimized for disk and network IO, off the main thread | Optimized for CPU intensive work, off the main thread |\n| Calling suspend functions,      Call UI functions,   Updating LiveData | Database*,   Reading/writing files,   Networking**     | Sorting a list,   Parsing JSON,   DiffUtils           |\n\n\n### coroutines VS RxJava\n\n一个处理请求的例子\n```\n//RxJava\ninterface SampleService {\n    @GET(\"/users\")\n    fun getTopUsers(): Deferred<List<User>>\n}\nfun load() {\n    disposable +=\n    service.getTopUsers()\n    .subscribeOn(io())\n    .observeOn(mainThread())\n    .subscribe(\n       //\n    )\n}\n//coroutines\ninterface SampleService {\n    @GET(\"/users\")\n    suspend fun getTopUsers(): List<User>\n}\nfun load() {\n        viewModelScope.launch {\n            try {\n                val users = service.getTopUsers()\n                //\n                } catch (e: Exception) {}\n        }\n}\n```\n\n---\n\n从代码风格来看coroutines的写法更加简洁更像是同步的有点像javascript的async/await味道。\n有以下两种方式之一启动协程：\n* launch启动一个新的协程，并且不会将结果返回给调用方。 可以使用发布启动任何被认为是“即发即弃”的工作。\n* async启动一个新的协程，并允许使用await的suspend函数返回结果。\n\nViewModel包含了内置的viewModelScope。这提供了一种在ViewModel范围内启动协程的标准方法，如上代码。\n\n\n### 扩展\n","slug":"Android-开发笔记-coroutines","published":1,"updated":"2019-12-02T09:43:25.633Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc73t000au60n6fz3akl7","content":"<h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>协程是一种并发设计模式，并基于其他语言的既定概念。在Android上，协程可帮助解决两个主要问题:</p>\n<ul>\n<li>管理长时间运行的任务</li>\n<li>提供main-safety，或从主线程安全地调用网络或磁盘操作。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">suspend fun fetchDocs() &#123;                      // Dispatchers.Main</span><br><span class=\"line\">    val result = get(&quot;developer.android.com&quot;)  // Dispatchers.Main</span><br><span class=\"line\">    show(result)                               // Dispatchers.Main</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">suspend fun get(url: String) =                 // Dispatchers.Main</span><br><span class=\"line\">    withContext(Dispatchers.IO) &#123;              // Dispatchers.IO (main-safety block)</span><br><span class=\"line\">        /* perform network IO here */          // Dispatchers.IO (main-safety block)</span><br><span class=\"line\">    &#125;                                          // Dispatchers.Main</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Dispatchers\"><a href=\"#Dispatchers\" class=\"headerlink\" title=\"Dispatchers\"></a>Dispatchers</h3><p>为了指定协程应该在哪里运行，Kotlin提供了三个可以使用的Dispatchers</p>\n<table>\n<thead>\n<tr>\n<th>Dispatchers.Main</th>\n<th>Dispatchers.IO</th>\n<th>Dispatchers.Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Main thread on Android, interact with the UI and perform light work</td>\n<td>Optimized for disk and network IO, off the main thread</td>\n<td>Optimized for CPU intensive work, off the main thread</td>\n</tr>\n<tr>\n<td>Calling suspend functions,      Call UI functions,   Updating LiveData</td>\n<td>Database*,   Reading/writing files,   Networking**</td>\n<td>Sorting a list,   Parsing JSON,   DiffUtils</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"coroutines-VS-RxJava\"><a href=\"#coroutines-VS-RxJava\" class=\"headerlink\" title=\"coroutines VS RxJava\"></a>coroutines VS RxJava</h3><p>一个处理请求的例子<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">//RxJava</span><br><span class=\"line\">interface SampleService &#123;</span><br><span class=\"line\">    @GET(&quot;/users&quot;)</span><br><span class=\"line\">    fun getTopUsers(): Deferred&lt;List&lt;User&gt;&gt;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fun load() &#123;</span><br><span class=\"line\">    disposable +=</span><br><span class=\"line\">    service.getTopUsers()</span><br><span class=\"line\">    .subscribeOn(io())</span><br><span class=\"line\">    .observeOn(mainThread())</span><br><span class=\"line\">    .subscribe(</span><br><span class=\"line\">       //</span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//coroutines</span><br><span class=\"line\">interface SampleService &#123;</span><br><span class=\"line\">    @GET(&quot;/users&quot;)</span><br><span class=\"line\">    suspend fun getTopUsers(): List&lt;User&gt;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fun load() &#123;</span><br><span class=\"line\">        viewModelScope.launch &#123;</span><br><span class=\"line\">            try &#123;</span><br><span class=\"line\">                val users = service.getTopUsers()</span><br><span class=\"line\">                //</span><br><span class=\"line\">                &#125; catch (e: Exception) &#123;&#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p>从代码风格来看coroutines的写法更加简洁更像是同步的有点像javascript的async/await味道。<br>有以下两种方式之一启动协程：</p>\n<ul>\n<li>launch启动一个新的协程，并且不会将结果返回给调用方。 可以使用发布启动任何被认为是“即发即弃”的工作。</li>\n<li>async启动一个新的协程，并允许使用await的suspend函数返回结果。</li>\n</ul>\n<p>ViewModel包含了内置的viewModelScope。这提供了一种在ViewModel范围内启动协程的标准方法，如上代码。</p>\n<h3 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h3>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>协程是一种并发设计模式，并基于其他语言的既定概念。在Android上，协程可帮助解决两个主要问题:</p>\n<ul>\n<li>管理长时间运行的任务</li>\n<li>提供main-safety，或从主线程安全地调用网络或磁盘操作。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">suspend fun fetchDocs() &#123;                      // Dispatchers.Main</span><br><span class=\"line\">    val result = get(&quot;developer.android.com&quot;)  // Dispatchers.Main</span><br><span class=\"line\">    show(result)                               // Dispatchers.Main</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">suspend fun get(url: String) =                 // Dispatchers.Main</span><br><span class=\"line\">    withContext(Dispatchers.IO) &#123;              // Dispatchers.IO (main-safety block)</span><br><span class=\"line\">        /* perform network IO here */          // Dispatchers.IO (main-safety block)</span><br><span class=\"line\">    &#125;                                          // Dispatchers.Main</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Dispatchers\"><a href=\"#Dispatchers\" class=\"headerlink\" title=\"Dispatchers\"></a>Dispatchers</h3><p>为了指定协程应该在哪里运行，Kotlin提供了三个可以使用的Dispatchers</p>\n<table>\n<thead>\n<tr>\n<th>Dispatchers.Main</th>\n<th>Dispatchers.IO</th>\n<th>Dispatchers.Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Main thread on Android, interact with the UI and perform light work</td>\n<td>Optimized for disk and network IO, off the main thread</td>\n<td>Optimized for CPU intensive work, off the main thread</td>\n</tr>\n<tr>\n<td>Calling suspend functions,      Call UI functions,   Updating LiveData</td>\n<td>Database*,   Reading/writing files,   Networking**</td>\n<td>Sorting a list,   Parsing JSON,   DiffUtils</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"coroutines-VS-RxJava\"><a href=\"#coroutines-VS-RxJava\" class=\"headerlink\" title=\"coroutines VS RxJava\"></a>coroutines VS RxJava</h3><p>一个处理请求的例子<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">//RxJava</span><br><span class=\"line\">interface SampleService &#123;</span><br><span class=\"line\">    @GET(&quot;/users&quot;)</span><br><span class=\"line\">    fun getTopUsers(): Deferred&lt;List&lt;User&gt;&gt;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fun load() &#123;</span><br><span class=\"line\">    disposable +=</span><br><span class=\"line\">    service.getTopUsers()</span><br><span class=\"line\">    .subscribeOn(io())</span><br><span class=\"line\">    .observeOn(mainThread())</span><br><span class=\"line\">    .subscribe(</span><br><span class=\"line\">       //</span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//coroutines</span><br><span class=\"line\">interface SampleService &#123;</span><br><span class=\"line\">    @GET(&quot;/users&quot;)</span><br><span class=\"line\">    suspend fun getTopUsers(): List&lt;User&gt;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fun load() &#123;</span><br><span class=\"line\">        viewModelScope.launch &#123;</span><br><span class=\"line\">            try &#123;</span><br><span class=\"line\">                val users = service.getTopUsers()</span><br><span class=\"line\">                //</span><br><span class=\"line\">                &#125; catch (e: Exception) &#123;&#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p>从代码风格来看coroutines的写法更加简洁更像是同步的有点像javascript的async/await味道。<br>有以下两种方式之一启动协程：</p>\n<ul>\n<li>launch启动一个新的协程，并且不会将结果返回给调用方。 可以使用发布启动任何被认为是“即发即弃”的工作。</li>\n<li>async启动一个新的协程，并允许使用await的suspend函数返回结果。</li>\n</ul>\n<p>ViewModel包含了内置的viewModelScope。这提供了一种在ViewModel范围内启动协程的标准方法，如上代码。</p>\n<h3 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h3>"},{"title":"Android-开发笔记-常见的构架原则","date":"2019-09-14T14:09:40.000Z","_content":"\n# 分离关注点\n\n要遵循的最重要的原则是分离关注点。一种常见的错误是在一个 Activity 或 Fragment 中编写所有代码。\n这些基于界面的类应仅包含处理界面和操作系统交互的逻辑。您应尽可能使这些类保持精简，这样可以避免许多与生命周期相关的问题。\n\n# 通过模型驱动界面\n\n模型是负责处理应用数据的组件。它们独立于应用中的 View 对象和应用组件，因此不受应用的生命周期以及相关的关注点的影响。\n\n持久性是理想之选，原因如下：\n* 如果 Android 操作系统销毁应用以释放资源，用户不会丢失数据。\n* 当网络连接不稳定或不可用时，应用会继续工作。\n\n# 架构\n![](/images/final-architecture.png \"Title\")\n\n# 最佳做法\n\n* 避免将应用的入口点（如 Activity、Service 和广播接收器）指定为数据源。\n* 在应用的各个模块之间设定明确定义的职责界限。\n* 尽量少公开每个模块中的代码。\n* 考虑如何使每个模块可独立测试。\n* 专注于应用的独特核心，以使其从其他应用中脱颖而出。\n* 保留尽可能多的相关数据和最新数据。\n* 将一个数据源指定为单一可信来源。\n\n# Libraries\n\n### Jetpack\n\n* Databinding\n* Lifecycle & ViewModel\n* Paging\n* Room\n* Navigation\n\n### Async Operation\n\n* Coroutine\n\n### DI\n\n* Dagger2\n","source":"_posts/Android-开发笔记-常见的构架原则.md","raw":"---\ntitle: Android-开发笔记-常见的构架原则\ndate: 2019-09-14 22:09:40\ntags:\n---\n\n# 分离关注点\n\n要遵循的最重要的原则是分离关注点。一种常见的错误是在一个 Activity 或 Fragment 中编写所有代码。\n这些基于界面的类应仅包含处理界面和操作系统交互的逻辑。您应尽可能使这些类保持精简，这样可以避免许多与生命周期相关的问题。\n\n# 通过模型驱动界面\n\n模型是负责处理应用数据的组件。它们独立于应用中的 View 对象和应用组件，因此不受应用的生命周期以及相关的关注点的影响。\n\n持久性是理想之选，原因如下：\n* 如果 Android 操作系统销毁应用以释放资源，用户不会丢失数据。\n* 当网络连接不稳定或不可用时，应用会继续工作。\n\n# 架构\n![](/images/final-architecture.png \"Title\")\n\n# 最佳做法\n\n* 避免将应用的入口点（如 Activity、Service 和广播接收器）指定为数据源。\n* 在应用的各个模块之间设定明确定义的职责界限。\n* 尽量少公开每个模块中的代码。\n* 考虑如何使每个模块可独立测试。\n* 专注于应用的独特核心，以使其从其他应用中脱颖而出。\n* 保留尽可能多的相关数据和最新数据。\n* 将一个数据源指定为单一可信来源。\n\n# Libraries\n\n### Jetpack\n\n* Databinding\n* Lifecycle & ViewModel\n* Paging\n* Room\n* Navigation\n\n### Async Operation\n\n* Coroutine\n\n### DI\n\n* Dagger2\n","slug":"Android-开发笔记-常见的构架原则","published":1,"updated":"2019-09-14T15:12:24.551Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc73u000cu60nvzj77or3","content":"<h1 id=\"分离关注点\"><a href=\"#分离关注点\" class=\"headerlink\" title=\"分离关注点\"></a>分离关注点</h1><p>要遵循的最重要的原则是分离关注点。一种常见的错误是在一个 Activity 或 Fragment 中编写所有代码。<br>这些基于界面的类应仅包含处理界面和操作系统交互的逻辑。您应尽可能使这些类保持精简，这样可以避免许多与生命周期相关的问题。</p>\n<h1 id=\"通过模型驱动界面\"><a href=\"#通过模型驱动界面\" class=\"headerlink\" title=\"通过模型驱动界面\"></a>通过模型驱动界面</h1><p>模型是负责处理应用数据的组件。它们独立于应用中的 View 对象和应用组件，因此不受应用的生命周期以及相关的关注点的影响。</p>\n<p>持久性是理想之选，原因如下：</p>\n<ul>\n<li>如果 Android 操作系统销毁应用以释放资源，用户不会丢失数据。</li>\n<li>当网络连接不稳定或不可用时，应用会继续工作。</li>\n</ul>\n<h1 id=\"架构\"><a href=\"#架构\" class=\"headerlink\" title=\"架构\"></a>架构</h1><p><img src=\"/images/final-architecture.png\" alt title=\"Title\"></p>\n<h1 id=\"最佳做法\"><a href=\"#最佳做法\" class=\"headerlink\" title=\"最佳做法\"></a>最佳做法</h1><ul>\n<li>避免将应用的入口点（如 Activity、Service 和广播接收器）指定为数据源。</li>\n<li>在应用的各个模块之间设定明确定义的职责界限。</li>\n<li>尽量少公开每个模块中的代码。</li>\n<li>考虑如何使每个模块可独立测试。</li>\n<li>专注于应用的独特核心，以使其从其他应用中脱颖而出。</li>\n<li>保留尽可能多的相关数据和最新数据。</li>\n<li>将一个数据源指定为单一可信来源。</li>\n</ul>\n<h1 id=\"Libraries\"><a href=\"#Libraries\" class=\"headerlink\" title=\"Libraries\"></a>Libraries</h1><h3 id=\"Jetpack\"><a href=\"#Jetpack\" class=\"headerlink\" title=\"Jetpack\"></a>Jetpack</h3><ul>\n<li>Databinding</li>\n<li>Lifecycle &amp; ViewModel</li>\n<li>Paging</li>\n<li>Room</li>\n<li>Navigation</li>\n</ul>\n<h3 id=\"Async-Operation\"><a href=\"#Async-Operation\" class=\"headerlink\" title=\"Async Operation\"></a>Async Operation</h3><ul>\n<li>Coroutine</li>\n</ul>\n<h3 id=\"DI\"><a href=\"#DI\" class=\"headerlink\" title=\"DI\"></a>DI</h3><ul>\n<li>Dagger2</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"分离关注点\"><a href=\"#分离关注点\" class=\"headerlink\" title=\"分离关注点\"></a>分离关注点</h1><p>要遵循的最重要的原则是分离关注点。一种常见的错误是在一个 Activity 或 Fragment 中编写所有代码。<br>这些基于界面的类应仅包含处理界面和操作系统交互的逻辑。您应尽可能使这些类保持精简，这样可以避免许多与生命周期相关的问题。</p>\n<h1 id=\"通过模型驱动界面\"><a href=\"#通过模型驱动界面\" class=\"headerlink\" title=\"通过模型驱动界面\"></a>通过模型驱动界面</h1><p>模型是负责处理应用数据的组件。它们独立于应用中的 View 对象和应用组件，因此不受应用的生命周期以及相关的关注点的影响。</p>\n<p>持久性是理想之选，原因如下：</p>\n<ul>\n<li>如果 Android 操作系统销毁应用以释放资源，用户不会丢失数据。</li>\n<li>当网络连接不稳定或不可用时，应用会继续工作。</li>\n</ul>\n<h1 id=\"架构\"><a href=\"#架构\" class=\"headerlink\" title=\"架构\"></a>架构</h1><p><img src=\"/images/final-architecture.png\" alt=\"\" title=\"Title\"></p>\n<h1 id=\"最佳做法\"><a href=\"#最佳做法\" class=\"headerlink\" title=\"最佳做法\"></a>最佳做法</h1><ul>\n<li>避免将应用的入口点（如 Activity、Service 和广播接收器）指定为数据源。</li>\n<li>在应用的各个模块之间设定明确定义的职责界限。</li>\n<li>尽量少公开每个模块中的代码。</li>\n<li>考虑如何使每个模块可独立测试。</li>\n<li>专注于应用的独特核心，以使其从其他应用中脱颖而出。</li>\n<li>保留尽可能多的相关数据和最新数据。</li>\n<li>将一个数据源指定为单一可信来源。</li>\n</ul>\n<h1 id=\"Libraries\"><a href=\"#Libraries\" class=\"headerlink\" title=\"Libraries\"></a>Libraries</h1><h3 id=\"Jetpack\"><a href=\"#Jetpack\" class=\"headerlink\" title=\"Jetpack\"></a>Jetpack</h3><ul>\n<li>Databinding</li>\n<li>Lifecycle &amp; ViewModel</li>\n<li>Paging</li>\n<li>Room</li>\n<li>Navigation</li>\n</ul>\n<h3 id=\"Async-Operation\"><a href=\"#Async-Operation\" class=\"headerlink\" title=\"Async Operation\"></a>Async Operation</h3><ul>\n<li>Coroutine</li>\n</ul>\n<h3 id=\"DI\"><a href=\"#DI\" class=\"headerlink\" title=\"DI\"></a>DI</h3><ul>\n<li>Dagger2</li>\n</ul>\n"},{"title":"Android 学习笔记 - RecyclerView","date":"2019-08-19T15:54:45.000Z","_content":"## 1. RecyclerView 概述\n\nRecyclerView是比ListView更为高级和灵活的版本。RecyclerView由多个不同组件的共同工作来展示\n信息。他们分别是Layout Manager(position),Item Animator(animate), Adapter(provide)使代码组织的更合理。\n\n\n## 2. 关于Layout Manager\n\nLinearLayoutManager: 类似ListView的风格，不同于ListView有Vertical和Horizontal方向。\n\nGridLayoutManager: 格子布局、继承自LinearLayoutManager，实现效果类似GridView。\n\nGridLayoutManager: 交错的格子布局，二维网格，每列微偏离前面一个，类似瀑布流的效果。\n\n可由自己实现。\n\n## 3. 实现步骤\n\n1. Add Recyclerview to layout\n2. Connect it to a layout manager\n3. Attach an adapter for the data to be displayed\n4. Add a list adapter -> create viewHolder, bind viewHolder\n5. Add item animation: 默认是DefaultItemAnimator，可自行扩展。\n\n示例代码:\n```\nclass MyActivity : Activity() {\n    private lateinit var recyclerView: RecyclerView\n    private lateinit var viewAdapter: RecyclerView.Adapter<*>\n    private lateinit var viewManager: RecyclerView.LayoutManager\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.my_activity)\n\n        viewManager = LinearLayoutManager(this)\n        viewAdapter = MyAdapter(myDataset)\n\n        recyclerView = findViewById<RecyclerView>(R.id.my_recycler_view).apply {\n\n            layoutManager = viewManager\n            adapter = viewAdapter\n\n        }\n    }\n    // ...\n}\n\n\nclass MyAdapter(private val myDataset: Array<String>) :\n        RecyclerView.Adapter<MyAdapter.MyViewHolder>() {\n\n    class MyViewHolder(val textView: TextView) : RecyclerView.ViewHolder(textView)\n\n    override fun onCreateViewHolder(parent: ViewGroup,\n                                    viewType: Int): MyAdapter.MyViewHolder {\n     // create a new view\n    }\n\n    // Replace the contents of a view (invoked by the layout manager)\n    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {\n        // - get element from your dataset at this position\n        // - replace the contents of the view with that element\n    }\n\n    // Return the size of your dataset (invoked by the layout manager)\n    override fun getItemCount() = myDataset.size\n}\n\n\n```\n","source":"_posts/Android-开发笔记-RecycleView.md","raw":"---\ntitle: Android 学习笔记 - RecyclerView\ndate: 2019-08-19 23:54:45\ntags:\n---\n## 1. RecyclerView 概述\n\nRecyclerView是比ListView更为高级和灵活的版本。RecyclerView由多个不同组件的共同工作来展示\n信息。他们分别是Layout Manager(position),Item Animator(animate), Adapter(provide)使代码组织的更合理。\n\n\n## 2. 关于Layout Manager\n\nLinearLayoutManager: 类似ListView的风格，不同于ListView有Vertical和Horizontal方向。\n\nGridLayoutManager: 格子布局、继承自LinearLayoutManager，实现效果类似GridView。\n\nGridLayoutManager: 交错的格子布局，二维网格，每列微偏离前面一个，类似瀑布流的效果。\n\n可由自己实现。\n\n## 3. 实现步骤\n\n1. Add Recyclerview to layout\n2. Connect it to a layout manager\n3. Attach an adapter for the data to be displayed\n4. Add a list adapter -> create viewHolder, bind viewHolder\n5. Add item animation: 默认是DefaultItemAnimator，可自行扩展。\n\n示例代码:\n```\nclass MyActivity : Activity() {\n    private lateinit var recyclerView: RecyclerView\n    private lateinit var viewAdapter: RecyclerView.Adapter<*>\n    private lateinit var viewManager: RecyclerView.LayoutManager\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.my_activity)\n\n        viewManager = LinearLayoutManager(this)\n        viewAdapter = MyAdapter(myDataset)\n\n        recyclerView = findViewById<RecyclerView>(R.id.my_recycler_view).apply {\n\n            layoutManager = viewManager\n            adapter = viewAdapter\n\n        }\n    }\n    // ...\n}\n\n\nclass MyAdapter(private val myDataset: Array<String>) :\n        RecyclerView.Adapter<MyAdapter.MyViewHolder>() {\n\n    class MyViewHolder(val textView: TextView) : RecyclerView.ViewHolder(textView)\n\n    override fun onCreateViewHolder(parent: ViewGroup,\n                                    viewType: Int): MyAdapter.MyViewHolder {\n     // create a new view\n    }\n\n    // Replace the contents of a view (invoked by the layout manager)\n    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {\n        // - get element from your dataset at this position\n        // - replace the contents of the view with that element\n    }\n\n    // Return the size of your dataset (invoked by the layout manager)\n    override fun getItemCount() = myDataset.size\n}\n\n\n```\n","slug":"Android-开发笔记-RecycleView","published":1,"updated":"2019-08-19T16:49:44.623Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc73w000eu60nler7y1zu","content":"<h2 id=\"1-RecyclerView-概述\"><a href=\"#1-RecyclerView-概述\" class=\"headerlink\" title=\"1. RecyclerView 概述\"></a>1. RecyclerView 概述</h2><p>RecyclerView是比ListView更为高级和灵活的版本。RecyclerView由多个不同组件的共同工作来展示<br>信息。他们分别是Layout Manager(position),Item Animator(animate), Adapter(provide)使代码组织的更合理。</p>\n<h2 id=\"2-关于Layout-Manager\"><a href=\"#2-关于Layout-Manager\" class=\"headerlink\" title=\"2. 关于Layout Manager\"></a>2. 关于Layout Manager</h2><p>LinearLayoutManager: 类似ListView的风格，不同于ListView有Vertical和Horizontal方向。</p>\n<p>GridLayoutManager: 格子布局、继承自LinearLayoutManager，实现效果类似GridView。</p>\n<p>GridLayoutManager: 交错的格子布局，二维网格，每列微偏离前面一个，类似瀑布流的效果。</p>\n<p>可由自己实现。</p>\n<h2 id=\"3-实现步骤\"><a href=\"#3-实现步骤\" class=\"headerlink\" title=\"3. 实现步骤\"></a>3. 实现步骤</h2><ol>\n<li>Add Recyclerview to layout</li>\n<li>Connect it to a layout manager</li>\n<li>Attach an adapter for the data to be displayed</li>\n<li>Add a list adapter -&gt; create viewHolder, bind viewHolder</li>\n<li>Add item animation: 默认是DefaultItemAnimator，可自行扩展。</li>\n</ol>\n<p>示例代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class MyActivity : Activity() &#123;</span><br><span class=\"line\">    private lateinit var recyclerView: RecyclerView</span><br><span class=\"line\">    private lateinit var viewAdapter: RecyclerView.Adapter&lt;*&gt;</span><br><span class=\"line\">    private lateinit var viewManager: RecyclerView.LayoutManager</span><br><span class=\"line\"></span><br><span class=\"line\">    override fun onCreate(savedInstanceState: Bundle?) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState)</span><br><span class=\"line\">        setContentView(R.layout.my_activity)</span><br><span class=\"line\"></span><br><span class=\"line\">        viewManager = LinearLayoutManager(this)</span><br><span class=\"line\">        viewAdapter = MyAdapter(myDataset)</span><br><span class=\"line\"></span><br><span class=\"line\">        recyclerView = findViewById&lt;RecyclerView&gt;(R.id.my_recycler_view).apply &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            layoutManager = viewManager</span><br><span class=\"line\">            adapter = viewAdapter</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    // ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class MyAdapter(private val myDataset: Array&lt;String&gt;) :</span><br><span class=\"line\">        RecyclerView.Adapter&lt;MyAdapter.MyViewHolder&gt;() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    class MyViewHolder(val textView: TextView) : RecyclerView.ViewHolder(textView)</span><br><span class=\"line\"></span><br><span class=\"line\">    override fun onCreateViewHolder(parent: ViewGroup,</span><br><span class=\"line\">                                    viewType: Int): MyAdapter.MyViewHolder &#123;</span><br><span class=\"line\">     // create a new view</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Replace the contents of a view (invoked by the layout manager)</span><br><span class=\"line\">    override fun onBindViewHolder(holder: MyViewHolder, position: Int) &#123;</span><br><span class=\"line\">        // - get element from your dataset at this position</span><br><span class=\"line\">        // - replace the contents of the view with that element</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Return the size of your dataset (invoked by the layout manager)</span><br><span class=\"line\">    override fun getItemCount() = myDataset.size</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-RecyclerView-概述\"><a href=\"#1-RecyclerView-概述\" class=\"headerlink\" title=\"1. RecyclerView 概述\"></a>1. RecyclerView 概述</h2><p>RecyclerView是比ListView更为高级和灵活的版本。RecyclerView由多个不同组件的共同工作来展示<br>信息。他们分别是Layout Manager(position),Item Animator(animate), Adapter(provide)使代码组织的更合理。</p>\n<h2 id=\"2-关于Layout-Manager\"><a href=\"#2-关于Layout-Manager\" class=\"headerlink\" title=\"2. 关于Layout Manager\"></a>2. 关于Layout Manager</h2><p>LinearLayoutManager: 类似ListView的风格，不同于ListView有Vertical和Horizontal方向。</p>\n<p>GridLayoutManager: 格子布局、继承自LinearLayoutManager，实现效果类似GridView。</p>\n<p>GridLayoutManager: 交错的格子布局，二维网格，每列微偏离前面一个，类似瀑布流的效果。</p>\n<p>可由自己实现。</p>\n<h2 id=\"3-实现步骤\"><a href=\"#3-实现步骤\" class=\"headerlink\" title=\"3. 实现步骤\"></a>3. 实现步骤</h2><ol>\n<li>Add Recyclerview to layout</li>\n<li>Connect it to a layout manager</li>\n<li>Attach an adapter for the data to be displayed</li>\n<li>Add a list adapter -&gt; create viewHolder, bind viewHolder</li>\n<li>Add item animation: 默认是DefaultItemAnimator，可自行扩展。</li>\n</ol>\n<p>示例代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class MyActivity : Activity() &#123;</span><br><span class=\"line\">    private lateinit var recyclerView: RecyclerView</span><br><span class=\"line\">    private lateinit var viewAdapter: RecyclerView.Adapter&lt;*&gt;</span><br><span class=\"line\">    private lateinit var viewManager: RecyclerView.LayoutManager</span><br><span class=\"line\"></span><br><span class=\"line\">    override fun onCreate(savedInstanceState: Bundle?) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState)</span><br><span class=\"line\">        setContentView(R.layout.my_activity)</span><br><span class=\"line\"></span><br><span class=\"line\">        viewManager = LinearLayoutManager(this)</span><br><span class=\"line\">        viewAdapter = MyAdapter(myDataset)</span><br><span class=\"line\"></span><br><span class=\"line\">        recyclerView = findViewById&lt;RecyclerView&gt;(R.id.my_recycler_view).apply &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            layoutManager = viewManager</span><br><span class=\"line\">            adapter = viewAdapter</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    // ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class MyAdapter(private val myDataset: Array&lt;String&gt;) :</span><br><span class=\"line\">        RecyclerView.Adapter&lt;MyAdapter.MyViewHolder&gt;() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    class MyViewHolder(val textView: TextView) : RecyclerView.ViewHolder(textView)</span><br><span class=\"line\"></span><br><span class=\"line\">    override fun onCreateViewHolder(parent: ViewGroup,</span><br><span class=\"line\">                                    viewType: Int): MyAdapter.MyViewHolder &#123;</span><br><span class=\"line\">     // create a new view</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Replace the contents of a view (invoked by the layout manager)</span><br><span class=\"line\">    override fun onBindViewHolder(holder: MyViewHolder, position: Int) &#123;</span><br><span class=\"line\">        // - get element from your dataset at this position</span><br><span class=\"line\">        // - replace the contents of the view with that element</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Return the size of your dataset (invoked by the layout manager)</span><br><span class=\"line\">    override fun getItemCount() = myDataset.size</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"Express Application using Typescript","date":"2019-12-22T06:58:28.000Z","_content":"\n\n\nInstall dependencies\n\n```\nyarn add @types/node @types/express ts-node typescript nodemon --dev\nyarn add express\n```\n\nCreate a `tsconfig.json`  file in root of your application or run `npx tsc --init`\n\n```\n//more about compile options\n//https://www.typescriptlang.org/docs/handbook/compiler-options.html\n{\n\"compilerOptions\":\n  {\n  \"target\": \"es6\",\n  \"module\": \"commonjs\",\n  \"allowJs\": true,\n  \"outDir\": \"./build\",\n  \"rootDir\": \"./src\",\n  \"esModuleInterop\": true\n  }\n}\n```\n\nAdd scripts to package.json file.\n\n```\n \"scripts\": {\n    \"dev\": \"nodemon src/server.ts\",\n    \"start\": \"ts-node dist/server.js\",\n    \"build\": \"tsc -p .\"\n  },\n```\n\nFile structure\n\n```\n- dist\n- node_modules\n- src\npackage.json\ntsconfig.json\n\n\n//src\n- controllers\n- interfaces\n- middleware\napp.ts\nserver.ts\n```\n\nEdit app.ts\n\n```\nimport * as express from 'express'\nimport {Application} from 'express'\n\nclass App {\n    public app: Application\n    public port: number\n\n    constructor(appInit: {port: number; middleWares: any; controllers: any;}) {\n        this.app = express()\n        this.port = appInit.port\n        this.middlewares(appInit.middleWares)\n        this.routes(appInit.controllers)\n    }\n\n    private middlewares(middleWares: { forEach: (arg0: (middleWare: any) => void) => void; }) {\n        middleWares.forEach(middleWare => {\n            this.app.use(middleWare)\n        })\n    }\n\n    private routes(controllers: { forEach: (arg0: (controller: any) => void) => void; }) {\n        controllers.forEach(controller => {\n            this.app.use('/', controller.router)\n        })\n    }\n\n    public listen() {\n        this.app.listen(this.port, () => {\n            console.log(`App listening on the    http://localhost:${this.port}`)\n        })\n    }\n\n}\n\nexport default App\n\n```\n\nEdit server.ts\n\n```\nimport App from './app'\n\nimport * as bodyParser from 'body-parser'\nimport loggerMiddleware from './middleware/logger';\nimport AuthController from './controllers/auth.controller'\n\nconst app = new App({\n    port: 3000,\n    controllers: [\n        new AuthController()\n    ],\n    middleWares: [\n        bodyParser.json(),\n        bodyParser.urlencoded({extended: true}),\n        loggerMiddleware\n    ]\n})\n\napp.listen()\n```\n\nAdd middleware\n\n```\nimport {Request, Response} from \"express\"\n\nconst loggerMiddleware = (req: Request, res: Response, next) => {\n    console.log('Request logged:', req.method, req.path)\n    next()\n}\n\nexport default loggerMiddleware\n\n```\n\nAdd base  controller interface\n\n```\ninterface IControllerBase {\n    initRoutes(): any\n}\n\nexport default IControllerBase\n```\n\nAdd controller\n\n```\nimport * as express from 'express'\nimport { Request, Response } from 'express'\nimport IControllerBase from '../interfaces/IControllerBase.interface'\n\nclass AuthController implements IControllerBase {\n    public path = '/login'\n    public router = express.Router()\n\n    constructor() {\n        this.initRoutes()\n    }\n\n    public initRoutes() {\n        this.router.get(this.path, this.login)\n    }\n\n    login = (req: Request, res: Response) => {\n        res.json({message: 'ok'})\n    }\n\n}\n\nexport default AuthController\n```\n\nRun the app\n\n```\nyarn run dev\n```\n\n> TODO:\n>\n> 1.Connect to postgressql & Create model with Typescript definitations\n>\n> [https://sequelize.org/v5/manual/typescript.html](https://sequelize.org/v5/manual/typescript.html)\n>\n> use sequelize-cli to generate typescript model is better\n>\n> 2.Controllers => Seperation of  route and logic\n\n\n","source":"_posts/Express-Application-using-Typescript.md","raw":"---\ntitle: Express Application using Typescript\ndate: 2019-12-22 14:58:28\ntags:\n---\n\n\n\nInstall dependencies\n\n```\nyarn add @types/node @types/express ts-node typescript nodemon --dev\nyarn add express\n```\n\nCreate a `tsconfig.json`  file in root of your application or run `npx tsc --init`\n\n```\n//more about compile options\n//https://www.typescriptlang.org/docs/handbook/compiler-options.html\n{\n\"compilerOptions\":\n  {\n  \"target\": \"es6\",\n  \"module\": \"commonjs\",\n  \"allowJs\": true,\n  \"outDir\": \"./build\",\n  \"rootDir\": \"./src\",\n  \"esModuleInterop\": true\n  }\n}\n```\n\nAdd scripts to package.json file.\n\n```\n \"scripts\": {\n    \"dev\": \"nodemon src/server.ts\",\n    \"start\": \"ts-node dist/server.js\",\n    \"build\": \"tsc -p .\"\n  },\n```\n\nFile structure\n\n```\n- dist\n- node_modules\n- src\npackage.json\ntsconfig.json\n\n\n//src\n- controllers\n- interfaces\n- middleware\napp.ts\nserver.ts\n```\n\nEdit app.ts\n\n```\nimport * as express from 'express'\nimport {Application} from 'express'\n\nclass App {\n    public app: Application\n    public port: number\n\n    constructor(appInit: {port: number; middleWares: any; controllers: any;}) {\n        this.app = express()\n        this.port = appInit.port\n        this.middlewares(appInit.middleWares)\n        this.routes(appInit.controllers)\n    }\n\n    private middlewares(middleWares: { forEach: (arg0: (middleWare: any) => void) => void; }) {\n        middleWares.forEach(middleWare => {\n            this.app.use(middleWare)\n        })\n    }\n\n    private routes(controllers: { forEach: (arg0: (controller: any) => void) => void; }) {\n        controllers.forEach(controller => {\n            this.app.use('/', controller.router)\n        })\n    }\n\n    public listen() {\n        this.app.listen(this.port, () => {\n            console.log(`App listening on the    http://localhost:${this.port}`)\n        })\n    }\n\n}\n\nexport default App\n\n```\n\nEdit server.ts\n\n```\nimport App from './app'\n\nimport * as bodyParser from 'body-parser'\nimport loggerMiddleware from './middleware/logger';\nimport AuthController from './controllers/auth.controller'\n\nconst app = new App({\n    port: 3000,\n    controllers: [\n        new AuthController()\n    ],\n    middleWares: [\n        bodyParser.json(),\n        bodyParser.urlencoded({extended: true}),\n        loggerMiddleware\n    ]\n})\n\napp.listen()\n```\n\nAdd middleware\n\n```\nimport {Request, Response} from \"express\"\n\nconst loggerMiddleware = (req: Request, res: Response, next) => {\n    console.log('Request logged:', req.method, req.path)\n    next()\n}\n\nexport default loggerMiddleware\n\n```\n\nAdd base  controller interface\n\n```\ninterface IControllerBase {\n    initRoutes(): any\n}\n\nexport default IControllerBase\n```\n\nAdd controller\n\n```\nimport * as express from 'express'\nimport { Request, Response } from 'express'\nimport IControllerBase from '../interfaces/IControllerBase.interface'\n\nclass AuthController implements IControllerBase {\n    public path = '/login'\n    public router = express.Router()\n\n    constructor() {\n        this.initRoutes()\n    }\n\n    public initRoutes() {\n        this.router.get(this.path, this.login)\n    }\n\n    login = (req: Request, res: Response) => {\n        res.json({message: 'ok'})\n    }\n\n}\n\nexport default AuthController\n```\n\nRun the app\n\n```\nyarn run dev\n```\n\n> TODO:\n>\n> 1.Connect to postgressql & Create model with Typescript definitations\n>\n> [https://sequelize.org/v5/manual/typescript.html](https://sequelize.org/v5/manual/typescript.html)\n>\n> use sequelize-cli to generate typescript model is better\n>\n> 2.Controllers => Seperation of  route and logic\n\n\n","slug":"Express-Application-using-Typescript","published":1,"updated":"2019-12-22T12:26:30.254Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc73y000fu60net4j6e1c","content":"<p>Install dependencies</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn add @types/node @types/express ts-node typescript nodemon --dev</span><br><span class=\"line\">yarn add express</span><br></pre></td></tr></table></figure>\n<p>Create a <code>tsconfig.json</code>  file in root of your application or run <code>npx tsc --init</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">//more about compile options</span><br><span class=\"line\">//https://www.typescriptlang.org/docs/handbook/compiler-options.html</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&quot;compilerOptions&quot;:</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  &quot;target&quot;: &quot;es6&quot;,</span><br><span class=\"line\">  &quot;module&quot;: &quot;commonjs&quot;,</span><br><span class=\"line\">  &quot;allowJs&quot;: true,</span><br><span class=\"line\">  &quot;outDir&quot;: &quot;./build&quot;,</span><br><span class=\"line\">  &quot;rootDir&quot;: &quot;./src&quot;,</span><br><span class=\"line\">  &quot;esModuleInterop&quot;: true</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Add scripts to package.json file.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;scripts&quot;: &#123;</span><br><span class=\"line\">   &quot;dev&quot;: &quot;nodemon src/server.ts&quot;,</span><br><span class=\"line\">   &quot;start&quot;: &quot;ts-node dist/server.js&quot;,</span><br><span class=\"line\">   &quot;build&quot;: &quot;tsc -p .&quot;</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n<p>File structure</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">- dist</span><br><span class=\"line\">- node_modules</span><br><span class=\"line\">- src</span><br><span class=\"line\">package.json</span><br><span class=\"line\">tsconfig.json</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//src</span><br><span class=\"line\">- controllers</span><br><span class=\"line\">- interfaces</span><br><span class=\"line\">- middleware</span><br><span class=\"line\">app.ts</span><br><span class=\"line\">server.ts</span><br></pre></td></tr></table></figure>\n<p>Edit app.ts</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">import * as express from &apos;express&apos;</span><br><span class=\"line\">import &#123;Application&#125; from &apos;express&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">class App &#123;</span><br><span class=\"line\">    public app: Application</span><br><span class=\"line\">    public port: number</span><br><span class=\"line\"></span><br><span class=\"line\">    constructor(appInit: &#123;port: number; middleWares: any; controllers: any;&#125;) &#123;</span><br><span class=\"line\">        this.app = express()</span><br><span class=\"line\">        this.port = appInit.port</span><br><span class=\"line\">        this.middlewares(appInit.middleWares)</span><br><span class=\"line\">        this.routes(appInit.controllers)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private middlewares(middleWares: &#123; forEach: (arg0: (middleWare: any) =&gt; void) =&gt; void; &#125;) &#123;</span><br><span class=\"line\">        middleWares.forEach(middleWare =&gt; &#123;</span><br><span class=\"line\">            this.app.use(middleWare)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private routes(controllers: &#123; forEach: (arg0: (controller: any) =&gt; void) =&gt; void; &#125;) &#123;</span><br><span class=\"line\">        controllers.forEach(controller =&gt; &#123;</span><br><span class=\"line\">            this.app.use(&apos;/&apos;, controller.router)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public listen() &#123;</span><br><span class=\"line\">        this.app.listen(this.port, () =&gt; &#123;</span><br><span class=\"line\">            console.log(`App listening on the    http://localhost:$&#123;this.port&#125;`)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">export default App</span><br></pre></td></tr></table></figure>\n<p>Edit server.ts</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">import App from &apos;./app&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">import * as bodyParser from &apos;body-parser&apos;</span><br><span class=\"line\">import loggerMiddleware from &apos;./middleware/logger&apos;;</span><br><span class=\"line\">import AuthController from &apos;./controllers/auth.controller&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">const app = new App(&#123;</span><br><span class=\"line\">    port: 3000,</span><br><span class=\"line\">    controllers: [</span><br><span class=\"line\">        new AuthController()</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    middleWares: [</span><br><span class=\"line\">        bodyParser.json(),</span><br><span class=\"line\">        bodyParser.urlencoded(&#123;extended: true&#125;),</span><br><span class=\"line\">        loggerMiddleware</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">app.listen()</span><br></pre></td></tr></table></figure>\n<p>Add middleware</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">import &#123;Request, Response&#125; from &quot;express&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">const loggerMiddleware = (req: Request, res: Response, next) =&gt; &#123;</span><br><span class=\"line\">    console.log(&apos;Request logged:&apos;, req.method, req.path)</span><br><span class=\"line\">    next()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">export default loggerMiddleware</span><br></pre></td></tr></table></figure>\n<p>Add base  controller interface</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">interface IControllerBase &#123;</span><br><span class=\"line\">    initRoutes(): any</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">export default IControllerBase</span><br></pre></td></tr></table></figure>\n<p>Add controller</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">import * as express from &apos;express&apos;</span><br><span class=\"line\">import &#123; Request, Response &#125; from &apos;express&apos;</span><br><span class=\"line\">import IControllerBase from &apos;../interfaces/IControllerBase.interface&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">class AuthController implements IControllerBase &#123;</span><br><span class=\"line\">    public path = &apos;/login&apos;</span><br><span class=\"line\">    public router = express.Router()</span><br><span class=\"line\"></span><br><span class=\"line\">    constructor() &#123;</span><br><span class=\"line\">        this.initRoutes()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public initRoutes() &#123;</span><br><span class=\"line\">        this.router.get(this.path, this.login)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    login = (req: Request, res: Response) =&gt; &#123;</span><br><span class=\"line\">        res.json(&#123;message: &apos;ok&apos;&#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">export default AuthController</span><br></pre></td></tr></table></figure>\n<p>Run the app</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn run dev</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>TODO:</p>\n<p>1.Connect to postgressql &amp; Create model with Typescript definitations</p>\n<p><a href=\"https://sequelize.org/v5/manual/typescript.html\" target=\"_blank\" rel=\"external\">https://sequelize.org/v5/manual/typescript.html</a></p>\n<p>use sequelize-cli to generate typescript model is better</p>\n<p>2.Controllers =&gt; Seperation of  route and logic</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>Install dependencies</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn add @types/node @types/express ts-node typescript nodemon --dev</span><br><span class=\"line\">yarn add express</span><br></pre></td></tr></table></figure>\n<p>Create a <code>tsconfig.json</code>  file in root of your application or run <code>npx tsc --init</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">//more about compile options</span><br><span class=\"line\">//https://www.typescriptlang.org/docs/handbook/compiler-options.html</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&quot;compilerOptions&quot;:</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  &quot;target&quot;: &quot;es6&quot;,</span><br><span class=\"line\">  &quot;module&quot;: &quot;commonjs&quot;,</span><br><span class=\"line\">  &quot;allowJs&quot;: true,</span><br><span class=\"line\">  &quot;outDir&quot;: &quot;./build&quot;,</span><br><span class=\"line\">  &quot;rootDir&quot;: &quot;./src&quot;,</span><br><span class=\"line\">  &quot;esModuleInterop&quot;: true</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Add scripts to package.json file.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;scripts&quot;: &#123;</span><br><span class=\"line\">   &quot;dev&quot;: &quot;nodemon src/server.ts&quot;,</span><br><span class=\"line\">   &quot;start&quot;: &quot;ts-node dist/server.js&quot;,</span><br><span class=\"line\">   &quot;build&quot;: &quot;tsc -p .&quot;</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n<p>File structure</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">- dist</span><br><span class=\"line\">- node_modules</span><br><span class=\"line\">- src</span><br><span class=\"line\">package.json</span><br><span class=\"line\">tsconfig.json</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//src</span><br><span class=\"line\">- controllers</span><br><span class=\"line\">- interfaces</span><br><span class=\"line\">- middleware</span><br><span class=\"line\">app.ts</span><br><span class=\"line\">server.ts</span><br></pre></td></tr></table></figure>\n<p>Edit app.ts</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">import * as express from &apos;express&apos;</span><br><span class=\"line\">import &#123;Application&#125; from &apos;express&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">class App &#123;</span><br><span class=\"line\">    public app: Application</span><br><span class=\"line\">    public port: number</span><br><span class=\"line\"></span><br><span class=\"line\">    constructor(appInit: &#123;port: number; middleWares: any; controllers: any;&#125;) &#123;</span><br><span class=\"line\">        this.app = express()</span><br><span class=\"line\">        this.port = appInit.port</span><br><span class=\"line\">        this.middlewares(appInit.middleWares)</span><br><span class=\"line\">        this.routes(appInit.controllers)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private middlewares(middleWares: &#123; forEach: (arg0: (middleWare: any) =&gt; void) =&gt; void; &#125;) &#123;</span><br><span class=\"line\">        middleWares.forEach(middleWare =&gt; &#123;</span><br><span class=\"line\">            this.app.use(middleWare)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private routes(controllers: &#123; forEach: (arg0: (controller: any) =&gt; void) =&gt; void; &#125;) &#123;</span><br><span class=\"line\">        controllers.forEach(controller =&gt; &#123;</span><br><span class=\"line\">            this.app.use(&apos;/&apos;, controller.router)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public listen() &#123;</span><br><span class=\"line\">        this.app.listen(this.port, () =&gt; &#123;</span><br><span class=\"line\">            console.log(`App listening on the    http://localhost:$&#123;this.port&#125;`)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">export default App</span><br></pre></td></tr></table></figure>\n<p>Edit server.ts</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">import App from &apos;./app&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">import * as bodyParser from &apos;body-parser&apos;</span><br><span class=\"line\">import loggerMiddleware from &apos;./middleware/logger&apos;;</span><br><span class=\"line\">import AuthController from &apos;./controllers/auth.controller&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">const app = new App(&#123;</span><br><span class=\"line\">    port: 3000,</span><br><span class=\"line\">    controllers: [</span><br><span class=\"line\">        new AuthController()</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    middleWares: [</span><br><span class=\"line\">        bodyParser.json(),</span><br><span class=\"line\">        bodyParser.urlencoded(&#123;extended: true&#125;),</span><br><span class=\"line\">        loggerMiddleware</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">app.listen()</span><br></pre></td></tr></table></figure>\n<p>Add middleware</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">import &#123;Request, Response&#125; from &quot;express&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">const loggerMiddleware = (req: Request, res: Response, next) =&gt; &#123;</span><br><span class=\"line\">    console.log(&apos;Request logged:&apos;, req.method, req.path)</span><br><span class=\"line\">    next()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">export default loggerMiddleware</span><br></pre></td></tr></table></figure>\n<p>Add base  controller interface</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">interface IControllerBase &#123;</span><br><span class=\"line\">    initRoutes(): any</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">export default IControllerBase</span><br></pre></td></tr></table></figure>\n<p>Add controller</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">import * as express from &apos;express&apos;</span><br><span class=\"line\">import &#123; Request, Response &#125; from &apos;express&apos;</span><br><span class=\"line\">import IControllerBase from &apos;../interfaces/IControllerBase.interface&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">class AuthController implements IControllerBase &#123;</span><br><span class=\"line\">    public path = &apos;/login&apos;</span><br><span class=\"line\">    public router = express.Router()</span><br><span class=\"line\"></span><br><span class=\"line\">    constructor() &#123;</span><br><span class=\"line\">        this.initRoutes()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public initRoutes() &#123;</span><br><span class=\"line\">        this.router.get(this.path, this.login)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    login = (req: Request, res: Response) =&gt; &#123;</span><br><span class=\"line\">        res.json(&#123;message: &apos;ok&apos;&#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">export default AuthController</span><br></pre></td></tr></table></figure>\n<p>Run the app</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn run dev</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>TODO:</p>\n<p>1.Connect to postgressql &amp; Create model with Typescript definitations</p>\n<p><a href=\"https://sequelize.org/v5/manual/typescript.html\">https://sequelize.org/v5/manual/typescript.html</a></p>\n<p>use sequelize-cli to generate typescript model is better</p>\n<p>2.Controllers =&gt; Seperation of  route and logic</p>\n</blockquote>\n"},{"title":"CPU Intensive Node.js","date":"2019-10-05T15:04:21.000Z","_content":"\n> Node.js 单线程模式在运行CPU密集型运算时会出现阻塞这个单线程的问题\n\n## Problem\n\n```\napp.get('/fb', function (req, res, next) {\n    const {n} = req.query\n    res.json({message:'ok', value: fib(n)});\n})\n\n\napp.get('/fb2', function (req, res, next) {\n    const {n} = req.query\n    console.log(req.body)\n    return res.json({message:'ok', value: 111})\n})\n\n\n// 模拟CPU密集型运算\nfunction fib(n) {\n    if(n === 1)\n        return 1\n    if(n === 2)\n        return 1\n    else return fib(n-2) +fib(n-1)\n\n}\n```\n\n当请求fb未返回之前，fb2的结果会因为fb请求的阻塞而不能立即返回结果\n\n\n## Fork\n\nNode.js 可以 fork一个child processes来进行CPU密集型运算而不去阻塞事件队列。fork用于执行js文件创建Node.js子进程。\n而且fork方式创建的子进程与父进程之间建立了IPC通信管道，因此子进程和父进程之间可以通过send的方式发送消息。\n\n```\n//index.js\n\nconst {fork} = require('child_process')\n\napp.get('/fb', function (req, res, next) {\n    const {n} = req.query\n    console.log(req.body)\n    const worker = fork('./worker')\n\n    worker.on('message', ({ value }) => {\n        res.json({message:'ok', value});\n        worker.kill();\n    });\n    worker.send({n});\n})\n\napp.get('/fb2', function (req, res, next) {\n    const {n} = req.query\n    console.log(req.body)\n    return res.json({message:'ok', value: 111})\n})\n\n\n\n\n\n// worker.js\nconst _ = require('lodash')\nprocess.on('message', ({ n }) => {\n\n    process.send({ value: fib(_.toInteger(n)) });\n});\n\nfunction fib(n) {\n    if(n === 1)\n        return 1\n    if(n === 2)\n        return 1\n    else return fib(n-2) +fib(n-1)\n\n}\n\n```\n\n* 注：fork方式创建的子进程与父进程是完全独立的，它拥有单独的内存，单独的V8实例，因此当请求很频繁时，并不推荐使用fork创建很多的Node.js子进程\n\n## Kue\n","source":"_posts/CPU-Intensive-Node-js.md","raw":"---\ntitle: CPU Intensive Node.js\ndate: 2019-10-05 23:04:21\ntags:\n---\n\n> Node.js 单线程模式在运行CPU密集型运算时会出现阻塞这个单线程的问题\n\n## Problem\n\n```\napp.get('/fb', function (req, res, next) {\n    const {n} = req.query\n    res.json({message:'ok', value: fib(n)});\n})\n\n\napp.get('/fb2', function (req, res, next) {\n    const {n} = req.query\n    console.log(req.body)\n    return res.json({message:'ok', value: 111})\n})\n\n\n// 模拟CPU密集型运算\nfunction fib(n) {\n    if(n === 1)\n        return 1\n    if(n === 2)\n        return 1\n    else return fib(n-2) +fib(n-1)\n\n}\n```\n\n当请求fb未返回之前，fb2的结果会因为fb请求的阻塞而不能立即返回结果\n\n\n## Fork\n\nNode.js 可以 fork一个child processes来进行CPU密集型运算而不去阻塞事件队列。fork用于执行js文件创建Node.js子进程。\n而且fork方式创建的子进程与父进程之间建立了IPC通信管道，因此子进程和父进程之间可以通过send的方式发送消息。\n\n```\n//index.js\n\nconst {fork} = require('child_process')\n\napp.get('/fb', function (req, res, next) {\n    const {n} = req.query\n    console.log(req.body)\n    const worker = fork('./worker')\n\n    worker.on('message', ({ value }) => {\n        res.json({message:'ok', value});\n        worker.kill();\n    });\n    worker.send({n});\n})\n\napp.get('/fb2', function (req, res, next) {\n    const {n} = req.query\n    console.log(req.body)\n    return res.json({message:'ok', value: 111})\n})\n\n\n\n\n\n// worker.js\nconst _ = require('lodash')\nprocess.on('message', ({ n }) => {\n\n    process.send({ value: fib(_.toInteger(n)) });\n});\n\nfunction fib(n) {\n    if(n === 1)\n        return 1\n    if(n === 2)\n        return 1\n    else return fib(n-2) +fib(n-1)\n\n}\n\n```\n\n* 注：fork方式创建的子进程与父进程是完全独立的，它拥有单独的内存，单独的V8实例，因此当请求很频繁时，并不推荐使用fork创建很多的Node.js子进程\n\n## Kue\n","slug":"CPU-Intensive-Node-js","published":1,"updated":"2019-10-06T16:07:45.224Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc73z000gu60nkizoz9wx","content":"<blockquote>\n<p>Node.js 单线程模式在运行CPU密集型运算时会出现阻塞这个单线程的问题</p>\n</blockquote>\n<h2 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">app.get(&apos;/fb&apos;, function (req, res, next) &#123;</span><br><span class=\"line\">    const &#123;n&#125; = req.query</span><br><span class=\"line\">    res.json(&#123;message:&apos;ok&apos;, value: fib(n)&#125;);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app.get(&apos;/fb2&apos;, function (req, res, next) &#123;</span><br><span class=\"line\">    const &#123;n&#125; = req.query</span><br><span class=\"line\">    console.log(req.body)</span><br><span class=\"line\">    return res.json(&#123;message:&apos;ok&apos;, value: 111&#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// 模拟CPU密集型运算</span><br><span class=\"line\">function fib(n) &#123;</span><br><span class=\"line\">    if(n === 1)</span><br><span class=\"line\">        return 1</span><br><span class=\"line\">    if(n === 2)</span><br><span class=\"line\">        return 1</span><br><span class=\"line\">    else return fib(n-2) +fib(n-1)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当请求fb未返回之前，fb2的结果会因为fb请求的阻塞而不能立即返回结果</p>\n<h2 id=\"Fork\"><a href=\"#Fork\" class=\"headerlink\" title=\"Fork\"></a>Fork</h2><p>Node.js 可以 fork一个child processes来进行CPU密集型运算而不去阻塞事件队列。fork用于执行js文件创建Node.js子进程。<br>而且fork方式创建的子进程与父进程之间建立了IPC通信管道，因此子进程和父进程之间可以通过send的方式发送消息。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">//index.js</span><br><span class=\"line\"></span><br><span class=\"line\">const &#123;fork&#125; = require(&apos;child_process&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">app.get(&apos;/fb&apos;, function (req, res, next) &#123;</span><br><span class=\"line\">    const &#123;n&#125; = req.query</span><br><span class=\"line\">    console.log(req.body)</span><br><span class=\"line\">    const worker = fork(&apos;./worker&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">    worker.on(&apos;message&apos;, (&#123; value &#125;) =&gt; &#123;</span><br><span class=\"line\">        res.json(&#123;message:&apos;ok&apos;, value&#125;);</span><br><span class=\"line\">        worker.kill();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    worker.send(&#123;n&#125;);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">app.get(&apos;/fb2&apos;, function (req, res, next) &#123;</span><br><span class=\"line\">    const &#123;n&#125; = req.query</span><br><span class=\"line\">    console.log(req.body)</span><br><span class=\"line\">    return res.json(&#123;message:&apos;ok&apos;, value: 111&#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// worker.js</span><br><span class=\"line\">const _ = require(&apos;lodash&apos;)</span><br><span class=\"line\">process.on(&apos;message&apos;, (&#123; n &#125;) =&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    process.send(&#123; value: fib(_.toInteger(n)) &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">function fib(n) &#123;</span><br><span class=\"line\">    if(n === 1)</span><br><span class=\"line\">        return 1</span><br><span class=\"line\">    if(n === 2)</span><br><span class=\"line\">        return 1</span><br><span class=\"line\">    else return fib(n-2) +fib(n-1)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>注：fork方式创建的子进程与父进程是完全独立的，它拥有单独的内存，单独的V8实例，因此当请求很频繁时，并不推荐使用fork创建很多的Node.js子进程</li>\n</ul>\n<h2 id=\"Kue\"><a href=\"#Kue\" class=\"headerlink\" title=\"Kue\"></a>Kue</h2>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Node.js 单线程模式在运行CPU密集型运算时会出现阻塞这个单线程的问题</p>\n</blockquote>\n<h2 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">app.get(&apos;/fb&apos;, function (req, res, next) &#123;</span><br><span class=\"line\">    const &#123;n&#125; = req.query</span><br><span class=\"line\">    res.json(&#123;message:&apos;ok&apos;, value: fib(n)&#125;);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app.get(&apos;/fb2&apos;, function (req, res, next) &#123;</span><br><span class=\"line\">    const &#123;n&#125; = req.query</span><br><span class=\"line\">    console.log(req.body)</span><br><span class=\"line\">    return res.json(&#123;message:&apos;ok&apos;, value: 111&#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// 模拟CPU密集型运算</span><br><span class=\"line\">function fib(n) &#123;</span><br><span class=\"line\">    if(n === 1)</span><br><span class=\"line\">        return 1</span><br><span class=\"line\">    if(n === 2)</span><br><span class=\"line\">        return 1</span><br><span class=\"line\">    else return fib(n-2) +fib(n-1)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当请求fb未返回之前，fb2的结果会因为fb请求的阻塞而不能立即返回结果</p>\n<h2 id=\"Fork\"><a href=\"#Fork\" class=\"headerlink\" title=\"Fork\"></a>Fork</h2><p>Node.js 可以 fork一个child processes来进行CPU密集型运算而不去阻塞事件队列。fork用于执行js文件创建Node.js子进程。<br>而且fork方式创建的子进程与父进程之间建立了IPC通信管道，因此子进程和父进程之间可以通过send的方式发送消息。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">//index.js</span><br><span class=\"line\"></span><br><span class=\"line\">const &#123;fork&#125; = require(&apos;child_process&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">app.get(&apos;/fb&apos;, function (req, res, next) &#123;</span><br><span class=\"line\">    const &#123;n&#125; = req.query</span><br><span class=\"line\">    console.log(req.body)</span><br><span class=\"line\">    const worker = fork(&apos;./worker&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">    worker.on(&apos;message&apos;, (&#123; value &#125;) =&gt; &#123;</span><br><span class=\"line\">        res.json(&#123;message:&apos;ok&apos;, value&#125;);</span><br><span class=\"line\">        worker.kill();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    worker.send(&#123;n&#125;);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">app.get(&apos;/fb2&apos;, function (req, res, next) &#123;</span><br><span class=\"line\">    const &#123;n&#125; = req.query</span><br><span class=\"line\">    console.log(req.body)</span><br><span class=\"line\">    return res.json(&#123;message:&apos;ok&apos;, value: 111&#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// worker.js</span><br><span class=\"line\">const _ = require(&apos;lodash&apos;)</span><br><span class=\"line\">process.on(&apos;message&apos;, (&#123; n &#125;) =&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    process.send(&#123; value: fib(_.toInteger(n)) &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">function fib(n) &#123;</span><br><span class=\"line\">    if(n === 1)</span><br><span class=\"line\">        return 1</span><br><span class=\"line\">    if(n === 2)</span><br><span class=\"line\">        return 1</span><br><span class=\"line\">    else return fib(n-2) +fib(n-1)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>注：fork方式创建的子进程与父进程是完全独立的，它拥有单独的内存，单独的V8实例，因此当请求很频繁时，并不推荐使用fork创建很多的Node.js子进程</li>\n</ul>\n<h2 id=\"Kue\"><a href=\"#Kue\" class=\"headerlink\" title=\"Kue\"></a>Kue</h2>"},{"title":"Mobx vs Mobx State Tree(MST)","date":"2019-06-23T06:21:59.000Z","_content":"Mobx State Tree(MST)他建立在MobX的基础之上,\nMobX速度快，但不提供开箱即用的任何组织结构，因此集中获取整个状态的快照，\n从快照中的恢复状态，时间旅行要么不可行，要么由开发人员手动支持。\nMST通过将单独的存储组织到交互式和交互式节点的单个树中来支持所有上述功能。\nMST的中心是活树的概念。该树由可变但受严格保护的对象组成，这些对象富含运行时类型信息。换句话说，每个树具有形状（类型信息）和状态（数据）。\n从这个活树中，自动生成不可变的，结构上共享的快照。\n然而，所有这些都需要付出一些代价，而MST通常比纯MobX慢一些。因此，不需要这些功能，请只使用MobX。\n","source":"_posts/Mobx-vs-Mobx-State-Tree-MST.md","raw":"---\ntitle: Mobx vs Mobx State Tree(MST)\ndate: 2019-06-23 14:21:59\ntags:\n---\nMobx State Tree(MST)他建立在MobX的基础之上,\nMobX速度快，但不提供开箱即用的任何组织结构，因此集中获取整个状态的快照，\n从快照中的恢复状态，时间旅行要么不可行，要么由开发人员手动支持。\nMST通过将单独的存储组织到交互式和交互式节点的单个树中来支持所有上述功能。\nMST的中心是活树的概念。该树由可变但受严格保护的对象组成，这些对象富含运行时类型信息。换句话说，每个树具有形状（类型信息）和状态（数据）。\n从这个活树中，自动生成不可变的，结构上共享的快照。\n然而，所有这些都需要付出一些代价，而MST通常比纯MobX慢一些。因此，不需要这些功能，请只使用MobX。\n","slug":"Mobx-vs-Mobx-State-Tree-MST","published":1,"updated":"2019-06-23T21:03:31.749Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc73z000hu60ngfjq5cfj","content":"<p>Mobx State Tree(MST)他建立在MobX的基础之上,<br>MobX速度快，但不提供开箱即用的任何组织结构，因此集中获取整个状态的快照，<br>从快照中的恢复状态，时间旅行要么不可行，要么由开发人员手动支持。<br>MST通过将单独的存储组织到交互式和交互式节点的单个树中来支持所有上述功能。<br>MST的中心是活树的概念。该树由可变但受严格保护的对象组成，这些对象富含运行时类型信息。换句话说，每个树具有形状（类型信息）和状态（数据）。<br>从这个活树中，自动生成不可变的，结构上共享的快照。<br>然而，所有这些都需要付出一些代价，而MST通常比纯MobX慢一些。因此，不需要这些功能，请只使用MobX。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Mobx State Tree(MST)他建立在MobX的基础之上,<br>MobX速度快，但不提供开箱即用的任何组织结构，因此集中获取整个状态的快照，<br>从快照中的恢复状态，时间旅行要么不可行，要么由开发人员手动支持。<br>MST通过将单独的存储组织到交互式和交互式节点的单个树中来支持所有上述功能。<br>MST的中心是活树的概念。该树由可变但受严格保护的对象组成，这些对象富含运行时类型信息。换句话说，每个树具有形状（类型信息）和状态（数据）。<br>从这个活树中，自动生成不可变的，结构上共享的快照。<br>然而，所有这些都需要付出一些代价，而MST通常比纯MobX慢一些。因此，不需要这些功能，请只使用MobX。</p>\n"},{"title":"Postgresql index types and typical use case","date":"2019-11-03T03:50:07.000Z","_content":"\n### B-Tree\n\nB-Tree is default index that when you create index. B-trees attempt to\nremain balanced, with the amount of data in each branch of the tree being\nroughly the same. Therefore the number oflevels that must be traversed to\nfind rows is always in the same ballpark. **B-trees can handle equality and\nrange queries on data that can be sorted into some ordering.** They can\noperate against all data types,and can also be used to retrieve NULL values.\n\n### Hash\n\n**Hash indexes can only handle simple equality comparisons.**\nHash indexes at times can provide faster lookups than B-Tree indexes,\nand can boast faster creation times as well, but they are not transaction safe,\nthe advantage over using a B-Tree is rather small.\n\n### Generalized Search Tree (GiST)\n\nGiST indexes are most useful when you have data that can in some way overlap\nwith the value of that same column but from another row.The best thing about\nGiST indexes are if you have say a geometry data type and you want to see if\ntwo polygons contained some point.The most common data types where you\nwant to leverage GiST indexes are **Geometry types and Text when dealing\nwith full-text search**.\n\n\n### Generalized Inverted Indexes (GIN)\n\nGIN indexes are most useful when you have data types that contain multiple\nvalues in a single column,**such as Arrays, JSONB, Range types, hStore**.\nGIN and GiST indexes can often be beneficial on the same column types.\nOne can often boast better performance but larger disk footprint in the\ncase of GIN and vice versa for GiST.When it comes to GIN vs. GiST there\nisn’t a perfect one size fits all.\n\n### Other Indexs\n\n* Block range indexes (BRIN)\n* Space partitioned GiST indexes (SP-GiST)\n","source":"_posts/Postgresql-index-types-and-typical-use-case.md","raw":"---\ntitle: Postgresql index types and typical use case\ndate: 2019-11-03 11:50:07\ntags:\n---\n\n### B-Tree\n\nB-Tree is default index that when you create index. B-trees attempt to\nremain balanced, with the amount of data in each branch of the tree being\nroughly the same. Therefore the number oflevels that must be traversed to\nfind rows is always in the same ballpark. **B-trees can handle equality and\nrange queries on data that can be sorted into some ordering.** They can\noperate against all data types,and can also be used to retrieve NULL values.\n\n### Hash\n\n**Hash indexes can only handle simple equality comparisons.**\nHash indexes at times can provide faster lookups than B-Tree indexes,\nand can boast faster creation times as well, but they are not transaction safe,\nthe advantage over using a B-Tree is rather small.\n\n### Generalized Search Tree (GiST)\n\nGiST indexes are most useful when you have data that can in some way overlap\nwith the value of that same column but from another row.The best thing about\nGiST indexes are if you have say a geometry data type and you want to see if\ntwo polygons contained some point.The most common data types where you\nwant to leverage GiST indexes are **Geometry types and Text when dealing\nwith full-text search**.\n\n\n### Generalized Inverted Indexes (GIN)\n\nGIN indexes are most useful when you have data types that contain multiple\nvalues in a single column,**such as Arrays, JSONB, Range types, hStore**.\nGIN and GiST indexes can often be beneficial on the same column types.\nOne can often boast better performance but larger disk footprint in the\ncase of GIN and vice versa for GiST.When it comes to GIN vs. GiST there\nisn’t a perfect one size fits all.\n\n### Other Indexs\n\n* Block range indexes (BRIN)\n* Space partitioned GiST indexes (SP-GiST)\n","slug":"Postgresql-index-types-and-typical-use-case","published":1,"updated":"2019-11-03T05:51:01.782Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc740000iu60np29jgylg","content":"<h3 id=\"B-Tree\"><a href=\"#B-Tree\" class=\"headerlink\" title=\"B-Tree\"></a>B-Tree</h3><p>B-Tree is default index that when you create index. B-trees attempt to<br>remain balanced, with the amount of data in each branch of the tree being<br>roughly the same. Therefore the number oflevels that must be traversed to<br>find rows is always in the same ballpark. <strong>B-trees can handle equality and<br>range queries on data that can be sorted into some ordering.</strong> They can<br>operate against all data types,and can also be used to retrieve NULL values.</p>\n<h3 id=\"Hash\"><a href=\"#Hash\" class=\"headerlink\" title=\"Hash\"></a>Hash</h3><p><strong>Hash indexes can only handle simple equality comparisons.</strong><br>Hash indexes at times can provide faster lookups than B-Tree indexes,<br>and can boast faster creation times as well, but they are not transaction safe,<br>the advantage over using a B-Tree is rather small.</p>\n<h3 id=\"Generalized-Search-Tree-GiST\"><a href=\"#Generalized-Search-Tree-GiST\" class=\"headerlink\" title=\"Generalized Search Tree (GiST)\"></a>Generalized Search Tree (GiST)</h3><p>GiST indexes are most useful when you have data that can in some way overlap<br>with the value of that same column but from another row.The best thing about<br>GiST indexes are if you have say a geometry data type and you want to see if<br>two polygons contained some point.The most common data types where you<br>want to leverage GiST indexes are <strong>Geometry types and Text when dealing<br>with full-text search</strong>.</p>\n<h3 id=\"Generalized-Inverted-Indexes-GIN\"><a href=\"#Generalized-Inverted-Indexes-GIN\" class=\"headerlink\" title=\"Generalized Inverted Indexes (GIN)\"></a>Generalized Inverted Indexes (GIN)</h3><p>GIN indexes are most useful when you have data types that contain multiple<br>values in a single column,<strong>such as Arrays, JSONB, Range types, hStore</strong>.<br>GIN and GiST indexes can often be beneficial on the same column types.<br>One can often boast better performance but larger disk footprint in the<br>case of GIN and vice versa for GiST.When it comes to GIN vs. GiST there<br>isn’t a perfect one size fits all.</p>\n<h3 id=\"Other-Indexs\"><a href=\"#Other-Indexs\" class=\"headerlink\" title=\"Other Indexs\"></a>Other Indexs</h3><ul>\n<li>Block range indexes (BRIN)</li>\n<li>Space partitioned GiST indexes (SP-GiST)</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"B-Tree\"><a href=\"#B-Tree\" class=\"headerlink\" title=\"B-Tree\"></a>B-Tree</h3><p>B-Tree is default index that when you create index. B-trees attempt to<br>remain balanced, with the amount of data in each branch of the tree being<br>roughly the same. Therefore the number oflevels that must be traversed to<br>find rows is always in the same ballpark. <strong>B-trees can handle equality and<br>range queries on data that can be sorted into some ordering.</strong> They can<br>operate against all data types,and can also be used to retrieve NULL values.</p>\n<h3 id=\"Hash\"><a href=\"#Hash\" class=\"headerlink\" title=\"Hash\"></a>Hash</h3><p><strong>Hash indexes can only handle simple equality comparisons.</strong><br>Hash indexes at times can provide faster lookups than B-Tree indexes,<br>and can boast faster creation times as well, but they are not transaction safe,<br>the advantage over using a B-Tree is rather small.</p>\n<h3 id=\"Generalized-Search-Tree-GiST\"><a href=\"#Generalized-Search-Tree-GiST\" class=\"headerlink\" title=\"Generalized Search Tree (GiST)\"></a>Generalized Search Tree (GiST)</h3><p>GiST indexes are most useful when you have data that can in some way overlap<br>with the value of that same column but from another row.The best thing about<br>GiST indexes are if you have say a geometry data type and you want to see if<br>two polygons contained some point.The most common data types where you<br>want to leverage GiST indexes are <strong>Geometry types and Text when dealing<br>with full-text search</strong>.</p>\n<h3 id=\"Generalized-Inverted-Indexes-GIN\"><a href=\"#Generalized-Inverted-Indexes-GIN\" class=\"headerlink\" title=\"Generalized Inverted Indexes (GIN)\"></a>Generalized Inverted Indexes (GIN)</h3><p>GIN indexes are most useful when you have data types that contain multiple<br>values in a single column,<strong>such as Arrays, JSONB, Range types, hStore</strong>.<br>GIN and GiST indexes can often be beneficial on the same column types.<br>One can often boast better performance but larger disk footprint in the<br>case of GIN and vice versa for GiST.When it comes to GIN vs. GiST there<br>isn’t a perfect one size fits all.</p>\n<h3 id=\"Other-Indexs\"><a href=\"#Other-Indexs\" class=\"headerlink\" title=\"Other Indexs\"></a>Other Indexs</h3><ul>\n<li>Block range indexes (BRIN)</li>\n<li>Space partitioned GiST indexes (SP-GiST)</li>\n</ul>\n"},{"title":"PostgreSQL服务器配置之常用连接和认证方式","date":"2019-08-04T01:55:11.000Z","_content":"\n## 1. 连接设置\n\n### listen_addresses\n指定服务器在哪些 TCP/IP 地址上监听客户端连接。值的形式是一个逗号分隔的主机名和/或数字 IP 地址列表。\n默认值是localhost，它只允许建立本地 TCP/IP “环回”连接。特殊项*对应所有可用 IP 接口。项0.0.0.0允许监听所有 IPv4 地址并且::允许监听所有 IPv6 地址。\n如果列表为空，服务器将根本不会监听任何 IP 接口，在这种情况中只能使用 Unix 域套接字来连接它。\n### password_encryption\n当在CREATE USER或ALTER ROLE 中指定了一个密码时，这个参数决定加密密码所使用的算法。\n默认值是md5， 它将密码存储为MD5哈希（也接受on作为md5的别名）。\n将该参数设置为scram-sha-256将使用SCRAM-SHA-256加密密码。\n### max_connections\n决定数据库的最大并发连接数。默认值通常是 100 个连接\n\n## 2. 常用认证方式\n\n### 信任认证（trust）\n当trust认证被指定时，无条件通过认证，PostgreSQL假设任何可以连接到服务器的人都被授权使用他们指定的任何数据库用户名（即使是超级用户）访问数据库。\n但是在database和 user列中设置的限制仍然适用。只有当在操作系统层对进入服务器的连接有足够保护时，才应该使用这种方法。\n### 口令认证（scram-sha-256，md5 ，password）\n方法scram-sha-256执行SCRAM-SHA-256认证。这是一种挑战-响应架构， 可防止密码在不可信连接上嗅探，并支持以密码散列的形式将密码存储在服务器上， 这种形式被认为是安全的。\n这是目前提供的方法中最安全的方法。\n\n方法md5使用自定义安全性较低的质询-响应机制。它使用加密密码进行认证，可以防止密码嗅探，并避免以纯文本形式将密码存储在服务器上，\n但如果攻击者设法从服务器窃取密码哈希，则不提供保护。而且， MD5哈希算法现在不再被认为对于确定的攻击是安全的。\n\n方法password用明文密码进行认证\n\n### Ident 认证\nident 认证方法通过从一个 ident 服务器获得客户端的操作系统用户名并且用它作为被允许的数据库用户名（和可选的用户名映射）来工作。\n也就是说客户端操作系统中存在对应的用户。它只在 TCP/IP 连接上支持。 (即 host, hostssl, hostnossl)。通过更改map允许在系统和数据库用户名之间的映射。\n\n### Peer 认证\nPeer 认证方法通过从内核获得客户端的操作系统用户名并把它用作被允许的数据库用户名（和可选的用户名映射）来工作。这种方法只在本地连接上支持。\n同样需要客户端操作系统中存在对应的用户。通过更改map允许在系统和数据库用户名之间的映射。\n","source":"_posts/PostgreSQL服务器配置之常用连接和认证方式.md","raw":"---\ntitle: PostgreSQL服务器配置之常用连接和认证方式\ndate: 2019-08-04 09:55:11\ntags:\n---\n\n## 1. 连接设置\n\n### listen_addresses\n指定服务器在哪些 TCP/IP 地址上监听客户端连接。值的形式是一个逗号分隔的主机名和/或数字 IP 地址列表。\n默认值是localhost，它只允许建立本地 TCP/IP “环回”连接。特殊项*对应所有可用 IP 接口。项0.0.0.0允许监听所有 IPv4 地址并且::允许监听所有 IPv6 地址。\n如果列表为空，服务器将根本不会监听任何 IP 接口，在这种情况中只能使用 Unix 域套接字来连接它。\n### password_encryption\n当在CREATE USER或ALTER ROLE 中指定了一个密码时，这个参数决定加密密码所使用的算法。\n默认值是md5， 它将密码存储为MD5哈希（也接受on作为md5的别名）。\n将该参数设置为scram-sha-256将使用SCRAM-SHA-256加密密码。\n### max_connections\n决定数据库的最大并发连接数。默认值通常是 100 个连接\n\n## 2. 常用认证方式\n\n### 信任认证（trust）\n当trust认证被指定时，无条件通过认证，PostgreSQL假设任何可以连接到服务器的人都被授权使用他们指定的任何数据库用户名（即使是超级用户）访问数据库。\n但是在database和 user列中设置的限制仍然适用。只有当在操作系统层对进入服务器的连接有足够保护时，才应该使用这种方法。\n### 口令认证（scram-sha-256，md5 ，password）\n方法scram-sha-256执行SCRAM-SHA-256认证。这是一种挑战-响应架构， 可防止密码在不可信连接上嗅探，并支持以密码散列的形式将密码存储在服务器上， 这种形式被认为是安全的。\n这是目前提供的方法中最安全的方法。\n\n方法md5使用自定义安全性较低的质询-响应机制。它使用加密密码进行认证，可以防止密码嗅探，并避免以纯文本形式将密码存储在服务器上，\n但如果攻击者设法从服务器窃取密码哈希，则不提供保护。而且， MD5哈希算法现在不再被认为对于确定的攻击是安全的。\n\n方法password用明文密码进行认证\n\n### Ident 认证\nident 认证方法通过从一个 ident 服务器获得客户端的操作系统用户名并且用它作为被允许的数据库用户名（和可选的用户名映射）来工作。\n也就是说客户端操作系统中存在对应的用户。它只在 TCP/IP 连接上支持。 (即 host, hostssl, hostnossl)。通过更改map允许在系统和数据库用户名之间的映射。\n\n### Peer 认证\nPeer 认证方法通过从内核获得客户端的操作系统用户名并把它用作被允许的数据库用户名（和可选的用户名映射）来工作。这种方法只在本地连接上支持。\n同样需要客户端操作系统中存在对应的用户。通过更改map允许在系统和数据库用户名之间的映射。\n","slug":"PostgreSQL服务器配置之常用连接和认证方式","published":1,"updated":"2019-08-04T02:27:48.739Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc741000ju60nikppvq3i","content":"<h2 id=\"1-连接设置\"><a href=\"#1-连接设置\" class=\"headerlink\" title=\"1. 连接设置\"></a>1. 连接设置</h2><h3 id=\"listen-addresses\"><a href=\"#listen-addresses\" class=\"headerlink\" title=\"listen_addresses\"></a>listen_addresses</h3><p>指定服务器在哪些 TCP/IP 地址上监听客户端连接。值的形式是一个逗号分隔的主机名和/或数字 IP 地址列表。<br>默认值是localhost，它只允许建立本地 TCP/IP “环回”连接。特殊项*对应所有可用 IP 接口。项0.0.0.0允许监听所有 IPv4 地址并且::允许监听所有 IPv6 地址。<br>如果列表为空，服务器将根本不会监听任何 IP 接口，在这种情况中只能使用 Unix 域套接字来连接它。</p>\n<h3 id=\"password-encryption\"><a href=\"#password-encryption\" class=\"headerlink\" title=\"password_encryption\"></a>password_encryption</h3><p>当在CREATE USER或ALTER ROLE 中指定了一个密码时，这个参数决定加密密码所使用的算法。<br>默认值是md5， 它将密码存储为MD5哈希（也接受on作为md5的别名）。<br>将该参数设置为scram-sha-256将使用SCRAM-SHA-256加密密码。</p>\n<h3 id=\"max-connections\"><a href=\"#max-connections\" class=\"headerlink\" title=\"max_connections\"></a>max_connections</h3><p>决定数据库的最大并发连接数。默认值通常是 100 个连接</p>\n<h2 id=\"2-常用认证方式\"><a href=\"#2-常用认证方式\" class=\"headerlink\" title=\"2. 常用认证方式\"></a>2. 常用认证方式</h2><h3 id=\"信任认证（trust）\"><a href=\"#信任认证（trust）\" class=\"headerlink\" title=\"信任认证（trust）\"></a>信任认证（trust）</h3><p>当trust认证被指定时，无条件通过认证，PostgreSQL假设任何可以连接到服务器的人都被授权使用他们指定的任何数据库用户名（即使是超级用户）访问数据库。<br>但是在database和 user列中设置的限制仍然适用。只有当在操作系统层对进入服务器的连接有足够保护时，才应该使用这种方法。</p>\n<h3 id=\"口令认证（scram-sha-256，md5-，password）\"><a href=\"#口令认证（scram-sha-256，md5-，password）\" class=\"headerlink\" title=\"口令认证（scram-sha-256，md5 ，password）\"></a>口令认证（scram-sha-256，md5 ，password）</h3><p>方法scram-sha-256执行SCRAM-SHA-256认证。这是一种挑战-响应架构， 可防止密码在不可信连接上嗅探，并支持以密码散列的形式将密码存储在服务器上， 这种形式被认为是安全的。<br>这是目前提供的方法中最安全的方法。</p>\n<p>方法md5使用自定义安全性较低的质询-响应机制。它使用加密密码进行认证，可以防止密码嗅探，并避免以纯文本形式将密码存储在服务器上，<br>但如果攻击者设法从服务器窃取密码哈希，则不提供保护。而且， MD5哈希算法现在不再被认为对于确定的攻击是安全的。</p>\n<p>方法password用明文密码进行认证</p>\n<h3 id=\"Ident-认证\"><a href=\"#Ident-认证\" class=\"headerlink\" title=\"Ident 认证\"></a>Ident 认证</h3><p>ident 认证方法通过从一个 ident 服务器获得客户端的操作系统用户名并且用它作为被允许的数据库用户名（和可选的用户名映射）来工作。<br>也就是说客户端操作系统中存在对应的用户。它只在 TCP/IP 连接上支持。 (即 host, hostssl, hostnossl)。通过更改map允许在系统和数据库用户名之间的映射。</p>\n<h3 id=\"Peer-认证\"><a href=\"#Peer-认证\" class=\"headerlink\" title=\"Peer 认证\"></a>Peer 认证</h3><p>Peer 认证方法通过从内核获得客户端的操作系统用户名并把它用作被允许的数据库用户名（和可选的用户名映射）来工作。这种方法只在本地连接上支持。<br>同样需要客户端操作系统中存在对应的用户。通过更改map允许在系统和数据库用户名之间的映射。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-连接设置\"><a href=\"#1-连接设置\" class=\"headerlink\" title=\"1. 连接设置\"></a>1. 连接设置</h2><h3 id=\"listen-addresses\"><a href=\"#listen-addresses\" class=\"headerlink\" title=\"listen_addresses\"></a>listen_addresses</h3><p>指定服务器在哪些 TCP/IP 地址上监听客户端连接。值的形式是一个逗号分隔的主机名和/或数字 IP 地址列表。<br>默认值是localhost，它只允许建立本地 TCP/IP “环回”连接。特殊项*对应所有可用 IP 接口。项0.0.0.0允许监听所有 IPv4 地址并且::允许监听所有 IPv6 地址。<br>如果列表为空，服务器将根本不会监听任何 IP 接口，在这种情况中只能使用 Unix 域套接字来连接它。</p>\n<h3 id=\"password-encryption\"><a href=\"#password-encryption\" class=\"headerlink\" title=\"password_encryption\"></a>password_encryption</h3><p>当在CREATE USER或ALTER ROLE 中指定了一个密码时，这个参数决定加密密码所使用的算法。<br>默认值是md5， 它将密码存储为MD5哈希（也接受on作为md5的别名）。<br>将该参数设置为scram-sha-256将使用SCRAM-SHA-256加密密码。</p>\n<h3 id=\"max-connections\"><a href=\"#max-connections\" class=\"headerlink\" title=\"max_connections\"></a>max_connections</h3><p>决定数据库的最大并发连接数。默认值通常是 100 个连接</p>\n<h2 id=\"2-常用认证方式\"><a href=\"#2-常用认证方式\" class=\"headerlink\" title=\"2. 常用认证方式\"></a>2. 常用认证方式</h2><h3 id=\"信任认证（trust）\"><a href=\"#信任认证（trust）\" class=\"headerlink\" title=\"信任认证（trust）\"></a>信任认证（trust）</h3><p>当trust认证被指定时，无条件通过认证，PostgreSQL假设任何可以连接到服务器的人都被授权使用他们指定的任何数据库用户名（即使是超级用户）访问数据库。<br>但是在database和 user列中设置的限制仍然适用。只有当在操作系统层对进入服务器的连接有足够保护时，才应该使用这种方法。</p>\n<h3 id=\"口令认证（scram-sha-256，md5-，password）\"><a href=\"#口令认证（scram-sha-256，md5-，password）\" class=\"headerlink\" title=\"口令认证（scram-sha-256，md5 ，password）\"></a>口令认证（scram-sha-256，md5 ，password）</h3><p>方法scram-sha-256执行SCRAM-SHA-256认证。这是一种挑战-响应架构， 可防止密码在不可信连接上嗅探，并支持以密码散列的形式将密码存储在服务器上， 这种形式被认为是安全的。<br>这是目前提供的方法中最安全的方法。</p>\n<p>方法md5使用自定义安全性较低的质询-响应机制。它使用加密密码进行认证，可以防止密码嗅探，并避免以纯文本形式将密码存储在服务器上，<br>但如果攻击者设法从服务器窃取密码哈希，则不提供保护。而且， MD5哈希算法现在不再被认为对于确定的攻击是安全的。</p>\n<p>方法password用明文密码进行认证</p>\n<h3 id=\"Ident-认证\"><a href=\"#Ident-认证\" class=\"headerlink\" title=\"Ident 认证\"></a>Ident 认证</h3><p>ident 认证方法通过从一个 ident 服务器获得客户端的操作系统用户名并且用它作为被允许的数据库用户名（和可选的用户名映射）来工作。<br>也就是说客户端操作系统中存在对应的用户。它只在 TCP/IP 连接上支持。 (即 host, hostssl, hostnossl)。通过更改map允许在系统和数据库用户名之间的映射。</p>\n<h3 id=\"Peer-认证\"><a href=\"#Peer-认证\" class=\"headerlink\" title=\"Peer 认证\"></a>Peer 认证</h3><p>Peer 认证方法通过从内核获得客户端的操作系统用户名并把它用作被允许的数据库用户名（和可选的用户名映射）来工作。这种方法只在本地连接上支持。<br>同样需要客户端操作系统中存在对应的用户。通过更改map允许在系统和数据库用户名之间的映射。</p>\n"},{"title":"Graceful shutdown in Node","date":"2020-06-25T07:09:33.000Z","_content":"\n### Graceful shutdown\n\nBefore when you deploy a new version of your application with process manager or just want to shut down the server with <Ctrl>+C , you need some steps first. Stop acceping new requests, finish all ongoing requests, and clean up the resources it used, including db connections , file locks, redis and so on. Graceful shutdown means when all your requests to the server is respond and not any data processing work left.\n\n### How do I shutdown\n\n1. Handle process kill signal\n\n2. Stop new requests form client\n\n3. Close all data process\n\n4. Exit from process\n\nFisrt, we need handle the signal to the application that wants to shutdown.  Common [signals]([https://nodejs.org/api/process.html](https://nodejs.org/api/process.html) have **SIGTERM**, **SIGINT** and so on. A **signal** is an asynchronous notification sent to a **process** or to a specific thread to notify an event that occurred. 'SIGINT' generated with <Ctrl>+C in the terminal.The 'SIGTERM' signal is a generic signal used to cause program termination.\n\n```js\nprocess.on('SIGTERM', () => {\n  console.info('SIGTERM signal received.');\n});\nprocess.on('SIGINT', () => {\n  console.info('SIGTERM signal received.');\n});\n\n//other events\nprocess.on('exit', ()=> {});\nprocess.on('uncaughtException', ()=> {});\nprocess.on('unhandledRejection', ()=> {});\nprocess.on('rejectionHandled',()=> {});\n```\n\nSecond,  stop new requests from client. It can be done using [server.close]([https://nodejs.org/api/http.html?#http_server_close_callback](https://nodejs.org/api/http.html?#http_server_close_callback) function\n\n```js\nprocess.on('SIGTERM', () => {\n  console.info('SIGTERM signal received.');\n  server.close(() => {\n    console.log('Http server closed.');\n  });\n});\n```\n\nThird, close all data process\n\n```js\nprocess.on('SIGTERM', () => {\n  console.info('SIGTERM signal received.');\n  server.close(() => {\n    console.log('Http server closed.');\n    mongoose.connection.close(false, () => {\n      console.log('MongoDb connection closed.');\n    });\n  });\n});\n```\n\nLast, close all data process.As we know NodeJS will exit when EventLoop queue is empty and nothing left to do. But sometimes your application can have more functions and will not exit automatically, in this point comes our last work to do.  We need to exit from process using process.exit function.\n\n```js\nprocess.on('SIGTERM', () => {\n  console.info('SIGTERM signal received.');\n  server.close(() => {\n    console.log('Http server closed.');\n    // boolean means [force], see in mongoose doc\n    mongoose.connection.close(false, () => {\n      console.log('MongoDb connection closed.');\n      process.exit(0);\n    });\n  });\n});\n```\n\n\n\n### Reference\n\n[https://hackernoon.com/graceful-shutdown-in-nodejs-2f8f59d1c357](https://hackernoon.com/graceful-shutdown-in-nodejs-2f8f59d1c357)\n\n[https://nodejs.org/api/process.html](https://nodejs.org/api/process.html)\n\n[https://expressjs.com/en/advanced/healthcheck-graceful-shutdown.html](https://expressjs.com/en/advanced/healthcheck-graceful-shutdown.html)\n\n[https://pm2.keymetrics.io/docs/usage/signals-clean-restart/](https://pm2.keymetrics.io/docs/usage/signals-clean-restart/)\n\n\n","source":"_posts/Graceful-shutdown-in-Node.md","raw":"---\ntitle: Graceful shutdown in Node\ndate: 2020-06-25 15:09:33\ntags:\n---\n\n### Graceful shutdown\n\nBefore when you deploy a new version of your application with process manager or just want to shut down the server with <Ctrl>+C , you need some steps first. Stop acceping new requests, finish all ongoing requests, and clean up the resources it used, including db connections , file locks, redis and so on. Graceful shutdown means when all your requests to the server is respond and not any data processing work left.\n\n### How do I shutdown\n\n1. Handle process kill signal\n\n2. Stop new requests form client\n\n3. Close all data process\n\n4. Exit from process\n\nFisrt, we need handle the signal to the application that wants to shutdown.  Common [signals]([https://nodejs.org/api/process.html](https://nodejs.org/api/process.html) have **SIGTERM**, **SIGINT** and so on. A **signal** is an asynchronous notification sent to a **process** or to a specific thread to notify an event that occurred. 'SIGINT' generated with <Ctrl>+C in the terminal.The 'SIGTERM' signal is a generic signal used to cause program termination.\n\n```js\nprocess.on('SIGTERM', () => {\n  console.info('SIGTERM signal received.');\n});\nprocess.on('SIGINT', () => {\n  console.info('SIGTERM signal received.');\n});\n\n//other events\nprocess.on('exit', ()=> {});\nprocess.on('uncaughtException', ()=> {});\nprocess.on('unhandledRejection', ()=> {});\nprocess.on('rejectionHandled',()=> {});\n```\n\nSecond,  stop new requests from client. It can be done using [server.close]([https://nodejs.org/api/http.html?#http_server_close_callback](https://nodejs.org/api/http.html?#http_server_close_callback) function\n\n```js\nprocess.on('SIGTERM', () => {\n  console.info('SIGTERM signal received.');\n  server.close(() => {\n    console.log('Http server closed.');\n  });\n});\n```\n\nThird, close all data process\n\n```js\nprocess.on('SIGTERM', () => {\n  console.info('SIGTERM signal received.');\n  server.close(() => {\n    console.log('Http server closed.');\n    mongoose.connection.close(false, () => {\n      console.log('MongoDb connection closed.');\n    });\n  });\n});\n```\n\nLast, close all data process.As we know NodeJS will exit when EventLoop queue is empty and nothing left to do. But sometimes your application can have more functions and will not exit automatically, in this point comes our last work to do.  We need to exit from process using process.exit function.\n\n```js\nprocess.on('SIGTERM', () => {\n  console.info('SIGTERM signal received.');\n  server.close(() => {\n    console.log('Http server closed.');\n    // boolean means [force], see in mongoose doc\n    mongoose.connection.close(false, () => {\n      console.log('MongoDb connection closed.');\n      process.exit(0);\n    });\n  });\n});\n```\n\n\n\n### Reference\n\n[https://hackernoon.com/graceful-shutdown-in-nodejs-2f8f59d1c357](https://hackernoon.com/graceful-shutdown-in-nodejs-2f8f59d1c357)\n\n[https://nodejs.org/api/process.html](https://nodejs.org/api/process.html)\n\n[https://expressjs.com/en/advanced/healthcheck-graceful-shutdown.html](https://expressjs.com/en/advanced/healthcheck-graceful-shutdown.html)\n\n[https://pm2.keymetrics.io/docs/usage/signals-clean-restart/](https://pm2.keymetrics.io/docs/usage/signals-clean-restart/)\n\n\n","slug":"Graceful-shutdown-in-Node","published":1,"updated":"2020-06-25T08:20:28.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc741000ku60nrktib3ig","content":"<h3 id=\"Graceful-shutdown\"><a href=\"#Graceful-shutdown\" class=\"headerlink\" title=\"Graceful shutdown\"></a>Graceful shutdown</h3><p>Before when you deploy a new version of your application with process manager or just want to shut down the server with <ctrl>+C , you need some steps first. Stop acceping new requests, finish all ongoing requests, and clean up the resources it used, including db connections , file locks, redis and so on. Graceful shutdown means when all your requests to the server is respond and not any data processing work left.</ctrl></p>\n<h3 id=\"How-do-I-shutdown\"><a href=\"#How-do-I-shutdown\" class=\"headerlink\" title=\"How do I shutdown\"></a>How do I shutdown</h3><ol>\n<li><p>Handle process kill signal</p>\n</li>\n<li><p>Stop new requests form client</p>\n</li>\n<li><p>Close all data process</p>\n</li>\n<li><p>Exit from process</p>\n</li>\n</ol>\n<p>Fisrt, we need handle the signal to the application that wants to shutdown.  Common <a href=\"[https://nodejs.org/api/process.html](https://nodejs.org/api/process.html\">signals</a> have <strong>SIGTERM</strong>, <strong>SIGINT</strong> and so on. A <strong>signal</strong> is an asynchronous notification sent to a <strong>process</strong> or to a specific thread to notify an event that occurred. ‘SIGINT’ generated with <ctrl>+C in the terminal.The ‘SIGTERM’ signal is a generic signal used to cause program termination.</ctrl></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">process.on(<span class=\"string\">'SIGTERM'</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">'SIGTERM signal received.'</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">process.on(<span class=\"string\">'SIGINT'</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">'SIGTERM signal received.'</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//other events</span></span><br><span class=\"line\">process.on(<span class=\"string\">'exit'</span>, ()=&gt; &#123;&#125;);</span><br><span class=\"line\">process.on(<span class=\"string\">'uncaughtException'</span>, ()=&gt; &#123;&#125;);</span><br><span class=\"line\">process.on(<span class=\"string\">'unhandledRejection'</span>, ()=&gt; &#123;&#125;);</span><br><span class=\"line\">process.on(<span class=\"string\">'rejectionHandled'</span>,()=&gt; &#123;&#125;);</span><br></pre></td></tr></table></figure>\n<p>Second,  stop new requests from client. It can be done using <a href=\"[https://nodejs.org/api/http.html?#http_server_close_callback](https://nodejs.org/api/http.html?#http_server_close_callback\">server.close</a> function</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">process.on(<span class=\"string\">'SIGTERM'</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">'SIGTERM signal received.'</span>);</span><br><span class=\"line\">  server.close(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Http server closed.'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Third, close all data process</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">process.on(<span class=\"string\">'SIGTERM'</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">'SIGTERM signal received.'</span>);</span><br><span class=\"line\">  server.close(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Http server closed.'</span>);</span><br><span class=\"line\">    mongoose.connection.close(<span class=\"literal\">false</span>, () =&gt; &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'MongoDb connection closed.'</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Last, close all data process.As we know NodeJS will exit when EventLoop queue is empty and nothing left to do. But sometimes your application can have more functions and will not exit automatically, in this point comes our last work to do.  We need to exit from process using process.exit function.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">process.on(<span class=\"string\">'SIGTERM'</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">'SIGTERM signal received.'</span>);</span><br><span class=\"line\">  server.close(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Http server closed.'</span>);</span><br><span class=\"line\">    <span class=\"comment\">// boolean means [force], see in mongoose doc</span></span><br><span class=\"line\">    mongoose.connection.close(<span class=\"literal\">false</span>, () =&gt; &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'MongoDb connection closed.'</span>);</span><br><span class=\"line\">      process.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h3><p><a href=\"https://hackernoon.com/graceful-shutdown-in-nodejs-2f8f59d1c357\" target=\"_blank\" rel=\"external\">https://hackernoon.com/graceful-shutdown-in-nodejs-2f8f59d1c357</a></p>\n<p><a href=\"https://nodejs.org/api/process.html\" target=\"_blank\" rel=\"external\">https://nodejs.org/api/process.html</a></p>\n<p><a href=\"https://expressjs.com/en/advanced/healthcheck-graceful-shutdown.html\" target=\"_blank\" rel=\"external\">https://expressjs.com/en/advanced/healthcheck-graceful-shutdown.html</a></p>\n<p><a href=\"https://pm2.keymetrics.io/docs/usage/signals-clean-restart/\" target=\"_blank\" rel=\"external\">https://pm2.keymetrics.io/docs/usage/signals-clean-restart/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Graceful-shutdown\"><a href=\"#Graceful-shutdown\" class=\"headerlink\" title=\"Graceful shutdown\"></a>Graceful shutdown</h3><p>Before when you deploy a new version of your application with process manager or just want to shut down the server with <Ctrl>+C , you need some steps first. Stop acceping new requests, finish all ongoing requests, and clean up the resources it used, including db connections , file locks, redis and so on. Graceful shutdown means when all your requests to the server is respond and not any data processing work left.</p>\n<h3 id=\"How-do-I-shutdown\"><a href=\"#How-do-I-shutdown\" class=\"headerlink\" title=\"How do I shutdown\"></a>How do I shutdown</h3><ol>\n<li><p>Handle process kill signal</p>\n</li>\n<li><p>Stop new requests form client</p>\n</li>\n<li><p>Close all data process</p>\n</li>\n<li><p>Exit from process</p>\n</li>\n</ol>\n<p>Fisrt, we need handle the signal to the application that wants to shutdown.  Common <a href=\"[https://nodejs.org/api/process.html](https://nodejs.org/api/process.html\">signals</a> have <strong>SIGTERM</strong>, <strong>SIGINT</strong> and so on. A <strong>signal</strong> is an asynchronous notification sent to a <strong>process</strong> or to a specific thread to notify an event that occurred. ‘SIGINT’ generated with <Ctrl>+C in the terminal.The ‘SIGTERM’ signal is a generic signal used to cause program termination.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">process.on(<span class=\"string\">'SIGTERM'</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">'SIGTERM signal received.'</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">process.on(<span class=\"string\">'SIGINT'</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">'SIGTERM signal received.'</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//other events</span></span><br><span class=\"line\">process.on(<span class=\"string\">'exit'</span>, ()=&gt; &#123;&#125;);</span><br><span class=\"line\">process.on(<span class=\"string\">'uncaughtException'</span>, ()=&gt; &#123;&#125;);</span><br><span class=\"line\">process.on(<span class=\"string\">'unhandledRejection'</span>, ()=&gt; &#123;&#125;);</span><br><span class=\"line\">process.on(<span class=\"string\">'rejectionHandled'</span>,()=&gt; &#123;&#125;);</span><br></pre></td></tr></table></figure>\n<p>Second,  stop new requests from client. It can be done using <a href=\"[https://nodejs.org/api/http.html?#http_server_close_callback](https://nodejs.org/api/http.html?#http_server_close_callback\">server.close</a> function</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">process.on(<span class=\"string\">'SIGTERM'</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">'SIGTERM signal received.'</span>);</span><br><span class=\"line\">  server.close(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Http server closed.'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Third, close all data process</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">process.on(<span class=\"string\">'SIGTERM'</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">'SIGTERM signal received.'</span>);</span><br><span class=\"line\">  server.close(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Http server closed.'</span>);</span><br><span class=\"line\">    mongoose.connection.close(<span class=\"literal\">false</span>, () =&gt; &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'MongoDb connection closed.'</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Last, close all data process.As we know NodeJS will exit when EventLoop queue is empty and nothing left to do. But sometimes your application can have more functions and will not exit automatically, in this point comes our last work to do.  We need to exit from process using process.exit function.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">process.on(<span class=\"string\">'SIGTERM'</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">'SIGTERM signal received.'</span>);</span><br><span class=\"line\">  server.close(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Http server closed.'</span>);</span><br><span class=\"line\">    <span class=\"comment\">// boolean means [force], see in mongoose doc</span></span><br><span class=\"line\">    mongoose.connection.close(<span class=\"literal\">false</span>, () =&gt; &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'MongoDb connection closed.'</span>);</span><br><span class=\"line\">      process.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h3><p><a href=\"https://hackernoon.com/graceful-shutdown-in-nodejs-2f8f59d1c357\">https://hackernoon.com/graceful-shutdown-in-nodejs-2f8f59d1c357</a></p>\n<p><a href=\"https://nodejs.org/api/process.html\">https://nodejs.org/api/process.html</a></p>\n<p><a href=\"https://expressjs.com/en/advanced/healthcheck-graceful-shutdown.html\">https://expressjs.com/en/advanced/healthcheck-graceful-shutdown.html</a></p>\n<p><a href=\"https://pm2.keymetrics.io/docs/usage/signals-clean-restart/\">https://pm2.keymetrics.io/docs/usage/signals-clean-restart/</a></p>\n"},{"title":"RoR 搭建web应用","date":"2020-04-23T14:02:38.000Z","_content":"\n### Installing Rails\n\n1. mac 环境默认装有ruby ，`ruby -v` 查看版本 \n\n2. 替换gem源 \n   \n   ```shell\n   gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/\n   ```\n\n3. 安装Rails\n   \n   ```shell\n   sudo gem install rails\n   ```\n\n4. 测试安装是否正确\n   \n   ```shell\n   ❯ rails -v\n   Rails 6.0.2.2\n   ```\n\n### Createing Application\n\n```shell\nrails new blog\n```\n\n替换Gemfile的 source为 `source 'https://gems.ruby-china.com'` 然后在`bundle install`\n\n注：Since Rails 6, Webpacker is the default JavaScript compiler. So you'll also have to set it up before starting your Rails server.\n\n1. Install `yarn` using your OS package manager, or take a look at    [https://yarnpkg.com/en/docs/install](https://yarnpkg.com/en/docs/install)\n2. Set it up `rails webpacker:install`\n3. Make sure all packages are up to date `yarn install --check-files`\n4. Start your Rails server `rails s`\n\n\n\n## Node.js pros and cons\n\n| Node.js pros                                                                                                                                                                                                                                         | Node.js cons                                                  |\n| ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------- |\n| It represents the “JavaScript everywhere” paradigm<br/>It’s fast<br/>It’s lightweight<br/>It’s scalable<br/>Easy working with large files<br/>It handles multiple requests simultaneously<br/>It is growing really fast<br/>Good community around it | Low maturity<br/>No multithreading<br/>Can be rather unstable |\n\n## Ruby on Rails pros and cons\n\n| Ruby on Rails pros                                                                                                                                                       | Ruby on Rails cons                                                                                                                        |\n| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------- |\n| Speed of development<br/>Simple, English-like syntax<br/>Good community around it<br/>Open-source solution with a rich set of gems<br/>**Convention Over Configuration** | Low performance<br/>Low scalability<br/>Slow runtime speed<br/>Lack of flexibility<br/>Open-source solution with a (too) rich set of gems |\n\n\n","source":"_posts/RoR-搭建web应用.md","raw":"---\ntitle: RoR 搭建web应用\ndate: 2020-04-23 22:02:38\ntags:\n---\n\n### Installing Rails\n\n1. mac 环境默认装有ruby ，`ruby -v` 查看版本 \n\n2. 替换gem源 \n   \n   ```shell\n   gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/\n   ```\n\n3. 安装Rails\n   \n   ```shell\n   sudo gem install rails\n   ```\n\n4. 测试安装是否正确\n   \n   ```shell\n   ❯ rails -v\n   Rails 6.0.2.2\n   ```\n\n### Createing Application\n\n```shell\nrails new blog\n```\n\n替换Gemfile的 source为 `source 'https://gems.ruby-china.com'` 然后在`bundle install`\n\n注：Since Rails 6, Webpacker is the default JavaScript compiler. So you'll also have to set it up before starting your Rails server.\n\n1. Install `yarn` using your OS package manager, or take a look at    [https://yarnpkg.com/en/docs/install](https://yarnpkg.com/en/docs/install)\n2. Set it up `rails webpacker:install`\n3. Make sure all packages are up to date `yarn install --check-files`\n4. Start your Rails server `rails s`\n\n\n\n## Node.js pros and cons\n\n| Node.js pros                                                                                                                                                                                                                                         | Node.js cons                                                  |\n| ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------- |\n| It represents the “JavaScript everywhere” paradigm<br/>It’s fast<br/>It’s lightweight<br/>It’s scalable<br/>Easy working with large files<br/>It handles multiple requests simultaneously<br/>It is growing really fast<br/>Good community around it | Low maturity<br/>No multithreading<br/>Can be rather unstable |\n\n## Ruby on Rails pros and cons\n\n| Ruby on Rails pros                                                                                                                                                       | Ruby on Rails cons                                                                                                                        |\n| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------- |\n| Speed of development<br/>Simple, English-like syntax<br/>Good community around it<br/>Open-source solution with a rich set of gems<br/>**Convention Over Configuration** | Low performance<br/>Low scalability<br/>Slow runtime speed<br/>Lack of flexibility<br/>Open-source solution with a (too) rich set of gems |\n\n\n","slug":"RoR-搭建web应用","published":1,"updated":"2020-05-02T02:46:47.649Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc742000lu60ny4uhoxap","content":"<h3 id=\"Installing-Rails\"><a href=\"#Installing-Rails\" class=\"headerlink\" title=\"Installing Rails\"></a>Installing Rails</h3><ol>\n<li><p>mac 环境默认装有ruby ，<code>ruby -v</code> 查看版本 </p>\n</li>\n<li><p>替换gem源 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装Rails</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo gem install rails</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>测试安装是否正确</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">❯ rails -v</span><br><span class=\"line\">Rails 6.0.2.2</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"Createing-Application\"><a href=\"#Createing-Application\" class=\"headerlink\" title=\"Createing Application\"></a>Createing Application</h3><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">rails new blog</span><br></pre></td></tr></table></figure>\n<p>替换Gemfile的 source为 <code>source &#39;https://gems.ruby-china.com&#39;</code> 然后在<code>bundle install</code></p>\n<p>注：Since Rails 6, Webpacker is the default JavaScript compiler. So you’ll also have to set it up before starting your Rails server.</p>\n<ol>\n<li>Install <code>yarn</code> using your OS package manager, or take a look at    <a href=\"https://yarnpkg.com/en/docs/install\" target=\"_blank\" rel=\"external\">https://yarnpkg.com/en/docs/install</a></li>\n<li>Set it up <code>rails webpacker:install</code></li>\n<li>Make sure all packages are up to date <code>yarn install --check-files</code></li>\n<li>Start your Rails server <code>rails s</code></li>\n</ol>\n<h2 id=\"Node-js-pros-and-cons\"><a href=\"#Node-js-pros-and-cons\" class=\"headerlink\" title=\"Node.js pros and cons\"></a>Node.js pros and cons</h2><table>\n<thead>\n<tr>\n<th>Node.js pros</th>\n<th>Node.js cons</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>It represents the “JavaScript everywhere” paradigm<br>It’s fast<br>It’s lightweight<br>It’s scalable<br>Easy working with large files<br>It handles multiple requests simultaneously<br>It is growing really fast<br>Good community around it</td>\n<td>Low maturity<br>No multithreading<br>Can be rather unstable</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Ruby-on-Rails-pros-and-cons\"><a href=\"#Ruby-on-Rails-pros-and-cons\" class=\"headerlink\" title=\"Ruby on Rails pros and cons\"></a>Ruby on Rails pros and cons</h2><table>\n<thead>\n<tr>\n<th>Ruby on Rails pros</th>\n<th>Ruby on Rails cons</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Speed of development<br>Simple, English-like syntax<br>Good community around it<br>Open-source solution with a rich set of gems<br><strong>Convention Over Configuration</strong></td>\n<td>Low performance<br>Low scalability<br>Slow runtime speed<br>Lack of flexibility<br>Open-source solution with a (too) rich set of gems</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Installing-Rails\"><a href=\"#Installing-Rails\" class=\"headerlink\" title=\"Installing Rails\"></a>Installing Rails</h3><ol>\n<li><p>mac 环境默认装有ruby ，<code>ruby -v</code> 查看版本 </p>\n</li>\n<li><p>替换gem源 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装Rails</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo gem install rails</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>测试安装是否正确</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">❯ rails -v</span><br><span class=\"line\">Rails 6.0.2.2</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"Createing-Application\"><a href=\"#Createing-Application\" class=\"headerlink\" title=\"Createing Application\"></a>Createing Application</h3><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">rails new blog</span><br></pre></td></tr></table></figure>\n<p>替换Gemfile的 source为 <code>source &#39;https://gems.ruby-china.com&#39;</code> 然后在<code>bundle install</code></p>\n<p>注：Since Rails 6, Webpacker is the default JavaScript compiler. So you’ll also have to set it up before starting your Rails server.</p>\n<ol>\n<li>Install <code>yarn</code> using your OS package manager, or take a look at    <a href=\"https://yarnpkg.com/en/docs/install\">https://yarnpkg.com/en/docs/install</a></li>\n<li>Set it up <code>rails webpacker:install</code></li>\n<li>Make sure all packages are up to date <code>yarn install --check-files</code></li>\n<li>Start your Rails server <code>rails s</code></li>\n</ol>\n<h2 id=\"Node-js-pros-and-cons\"><a href=\"#Node-js-pros-and-cons\" class=\"headerlink\" title=\"Node.js pros and cons\"></a>Node.js pros and cons</h2><table>\n<thead>\n<tr>\n<th>Node.js pros</th>\n<th>Node.js cons</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>It represents the “JavaScript everywhere” paradigm<br/>It’s fast<br/>It’s lightweight<br/>It’s scalable<br/>Easy working with large files<br/>It handles multiple requests simultaneously<br/>It is growing really fast<br/>Good community around it</td>\n<td>Low maturity<br/>No multithreading<br/>Can be rather unstable</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Ruby-on-Rails-pros-and-cons\"><a href=\"#Ruby-on-Rails-pros-and-cons\" class=\"headerlink\" title=\"Ruby on Rails pros and cons\"></a>Ruby on Rails pros and cons</h2><table>\n<thead>\n<tr>\n<th>Ruby on Rails pros</th>\n<th>Ruby on Rails cons</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Speed of development<br/>Simple, English-like syntax<br/>Good community around it<br/>Open-source solution with a rich set of gems<br/><strong>Convention Over Configuration</strong></td>\n<td>Low performance<br/>Low scalability<br/>Slow runtime speed<br/>Lack of flexibility<br/>Open-source solution with a (too) rich set of gems</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"Sequelize为什么需要使用Migrations","date":"2019-04-24T13:42:23.000Z","_content":"\n在项目中可以使用model在生成数据库表结构，也可以用migrations来生成表结构，\n但当我习惯于使用migrations来生成表结构，了解migrations的好处之后不会再回过头来\n使用model来直接生成表结构。migration可以实现操作数据库的所用功能，\n下文中列出了使用migrations的几个好处。\n\n###  Migrations相当于Git\n\n在Sequelize文档中对于migrations的定义如下：\n就像使用Git / SVN管理源代码中的更改一样，你可以使用迁移来跟踪对数据库的更改。\n生成的每个migration都有他生成的时间，当你只用model来生成表结构的时候无法追踪\n生成或者修改表结构的时间。使用migration可以方便的对表结构进行追踪记录和维护，\n而且migration的记录对于其他开发人员了解表结构也有很大的帮助。相当于Git这一个\n特点使使用migration的最重要原因。\n\n### Migration效率更高\n\n当你熟悉了migration的命令之后可以提高建立model和表结构的效率\n```\nsequelize model:create --name modelname --attributes  name:string,gender:enum\n```\n当你运行这样一句命令就可以快速的建立一个只有type类型的model，然后在生成的migration\n加上约束，外健。。。等等就可以建立一个model\n```\nsequelize migration:create --name xxxx\n```\n当你运行这一命令可以单独生成一个migration文件，可以进行加一个column，添加一个约束，\n改变column的type等操作\n```\nsequelize db:migrate   //运行migration，建立表结构\nsequelize db:migrate:undo //撤销上一个migation ，也可以指定回退到哪一步\n```\n\n当你只需要掌握这几个简单的命令，那么可以快速的进行model的建立，model的修改等等操作，\n并且随时可以进行撤销。\n\n### 代码更安全\n\n当你不使用migration来建立表结构的时候可能在代码上会遗留一些如\n<strong>db.sequelize.sync({force:true})</strong>这样的代码来进行\n表结构的建立。当我部署到环境的时候会确认好几遍来确认这段代码已经被注释掉。\n当在代码结构中保留这些drop的语句是很危险也很可怕的一件事情。\n\n","source":"_posts/Sequelize为什么需要使用Maigration.md","raw":"---\ntitle: Sequelize为什么需要使用Migrations\ndate: 2019-04-24 21:42:23\ntags:\n---\n\n在项目中可以使用model在生成数据库表结构，也可以用migrations来生成表结构，\n但当我习惯于使用migrations来生成表结构，了解migrations的好处之后不会再回过头来\n使用model来直接生成表结构。migration可以实现操作数据库的所用功能，\n下文中列出了使用migrations的几个好处。\n\n###  Migrations相当于Git\n\n在Sequelize文档中对于migrations的定义如下：\n就像使用Git / SVN管理源代码中的更改一样，你可以使用迁移来跟踪对数据库的更改。\n生成的每个migration都有他生成的时间，当你只用model来生成表结构的时候无法追踪\n生成或者修改表结构的时间。使用migration可以方便的对表结构进行追踪记录和维护，\n而且migration的记录对于其他开发人员了解表结构也有很大的帮助。相当于Git这一个\n特点使使用migration的最重要原因。\n\n### Migration效率更高\n\n当你熟悉了migration的命令之后可以提高建立model和表结构的效率\n```\nsequelize model:create --name modelname --attributes  name:string,gender:enum\n```\n当你运行这样一句命令就可以快速的建立一个只有type类型的model，然后在生成的migration\n加上约束，外健。。。等等就可以建立一个model\n```\nsequelize migration:create --name xxxx\n```\n当你运行这一命令可以单独生成一个migration文件，可以进行加一个column，添加一个约束，\n改变column的type等操作\n```\nsequelize db:migrate   //运行migration，建立表结构\nsequelize db:migrate:undo //撤销上一个migation ，也可以指定回退到哪一步\n```\n\n当你只需要掌握这几个简单的命令，那么可以快速的进行model的建立，model的修改等等操作，\n并且随时可以进行撤销。\n\n### 代码更安全\n\n当你不使用migration来建立表结构的时候可能在代码上会遗留一些如\n<strong>db.sequelize.sync({force:true})</strong>这样的代码来进行\n表结构的建立。当我部署到环境的时候会确认好几遍来确认这段代码已经被注释掉。\n当在代码结构中保留这些drop的语句是很危险也很可怕的一件事情。\n\n","slug":"Sequelize为什么需要使用Maigration","published":1,"updated":"2019-04-24T14:34:12.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc742000mu60nss3d8yf8","content":"<p>在项目中可以使用model在生成数据库表结构，也可以用migrations来生成表结构，<br>但当我习惯于使用migrations来生成表结构，了解migrations的好处之后不会再回过头来<br>使用model来直接生成表结构。migration可以实现操作数据库的所用功能，<br>下文中列出了使用migrations的几个好处。</p>\n<h3 id=\"Migrations相当于Git\"><a href=\"#Migrations相当于Git\" class=\"headerlink\" title=\"Migrations相当于Git\"></a>Migrations相当于Git</h3><p>在Sequelize文档中对于migrations的定义如下：<br>就像使用Git / SVN管理源代码中的更改一样，你可以使用迁移来跟踪对数据库的更改。<br>生成的每个migration都有他生成的时间，当你只用model来生成表结构的时候无法追踪<br>生成或者修改表结构的时间。使用migration可以方便的对表结构进行追踪记录和维护，<br>而且migration的记录对于其他开发人员了解表结构也有很大的帮助。相当于Git这一个<br>特点使使用migration的最重要原因。</p>\n<h3 id=\"Migration效率更高\"><a href=\"#Migration效率更高\" class=\"headerlink\" title=\"Migration效率更高\"></a>Migration效率更高</h3><p>当你熟悉了migration的命令之后可以提高建立model和表结构的效率<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sequelize model:create --name modelname --attributes  name:string,gender:enum</span><br></pre></td></tr></table></figure></p>\n<p>当你运行这样一句命令就可以快速的建立一个只有type类型的model，然后在生成的migration<br>加上约束，外健。。。等等就可以建立一个model<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sequelize migration:create --name xxxx</span><br></pre></td></tr></table></figure></p>\n<p>当你运行这一命令可以单独生成一个migration文件，可以进行加一个column，添加一个约束，<br>改变column的type等操作<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sequelize db:migrate   //运行migration，建立表结构</span><br><span class=\"line\">sequelize db:migrate:undo //撤销上一个migation ，也可以指定回退到哪一步</span><br></pre></td></tr></table></figure></p>\n<p>当你只需要掌握这几个简单的命令，那么可以快速的进行model的建立，model的修改等等操作，<br>并且随时可以进行撤销。</p>\n<h3 id=\"代码更安全\"><a href=\"#代码更安全\" class=\"headerlink\" title=\"代码更安全\"></a>代码更安全</h3><p>当你不使用migration来建立表结构的时候可能在代码上会遗留一些如<br><strong>db.sequelize.sync({force:true})</strong>这样的代码来进行<br>表结构的建立。当我部署到环境的时候会确认好几遍来确认这段代码已经被注释掉。<br>当在代码结构中保留这些drop的语句是很危险也很可怕的一件事情。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在项目中可以使用model在生成数据库表结构，也可以用migrations来生成表结构，<br>但当我习惯于使用migrations来生成表结构，了解migrations的好处之后不会再回过头来<br>使用model来直接生成表结构。migration可以实现操作数据库的所用功能，<br>下文中列出了使用migrations的几个好处。</p>\n<h3 id=\"Migrations相当于Git\"><a href=\"#Migrations相当于Git\" class=\"headerlink\" title=\"Migrations相当于Git\"></a>Migrations相当于Git</h3><p>在Sequelize文档中对于migrations的定义如下：<br>就像使用Git / SVN管理源代码中的更改一样，你可以使用迁移来跟踪对数据库的更改。<br>生成的每个migration都有他生成的时间，当你只用model来生成表结构的时候无法追踪<br>生成或者修改表结构的时间。使用migration可以方便的对表结构进行追踪记录和维护，<br>而且migration的记录对于其他开发人员了解表结构也有很大的帮助。相当于Git这一个<br>特点使使用migration的最重要原因。</p>\n<h3 id=\"Migration效率更高\"><a href=\"#Migration效率更高\" class=\"headerlink\" title=\"Migration效率更高\"></a>Migration效率更高</h3><p>当你熟悉了migration的命令之后可以提高建立model和表结构的效率<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sequelize model:create --name modelname --attributes  name:string,gender:enum</span><br></pre></td></tr></table></figure></p>\n<p>当你运行这样一句命令就可以快速的建立一个只有type类型的model，然后在生成的migration<br>加上约束，外健。。。等等就可以建立一个model<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sequelize migration:create --name xxxx</span><br></pre></td></tr></table></figure></p>\n<p>当你运行这一命令可以单独生成一个migration文件，可以进行加一个column，添加一个约束，<br>改变column的type等操作<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sequelize db:migrate   //运行migration，建立表结构</span><br><span class=\"line\">sequelize db:migrate:undo //撤销上一个migation ，也可以指定回退到哪一步</span><br></pre></td></tr></table></figure></p>\n<p>当你只需要掌握这几个简单的命令，那么可以快速的进行model的建立，model的修改等等操作，<br>并且随时可以进行撤销。</p>\n<h3 id=\"代码更安全\"><a href=\"#代码更安全\" class=\"headerlink\" title=\"代码更安全\"></a>代码更安全</h3><p>当你不使用migration来建立表结构的时候可能在代码上会遗留一些如<br><strong>db.sequelize.sync({force:true})</strong>这样的代码来进行<br>表结构的建立。当我部署到环境的时候会确认好几遍来确认这段代码已经被注释掉。<br>当在代码结构中保留这些drop的语句是很危险也很可怕的一件事情。</p>\n"},{"title":"Redux vs Mobx比较","date":"2019-06-07T01:39:23.000Z","_content":"\n### 1. Community\n<img src=\"/images/redux-mobx.png\"  width=\"800\" height=\"400\">\n<img src=\"/images/stats.png\">\n\n### 2. Style\n\n| Redux                  | Mobx                                   |\n|------------------------|----------------------------------------|\n| Functional Programming | Object-oriented + Reactive programming |\n| 大量模版文件和代码     | 少量模版文件和代码                     |\n| 需要处理一步的中间件如thunk,saga     | 不需要thunk                     |\n\n### 3.Management\n\n| Redux                          | Mobx                         |\n|--------------------------------|------------------------------|\n| 通常单一store                  | 多个store                    |\n| 对象形式存储数据               | 可观察对象                   |\n| 状态对象不可变只读             | 状态对象可变重写             |\n| react-redux(Provider，connect) | mobx-react(Provider, inject) |\n","source":"_posts/Redux-vs-Mobx比较.md","raw":"---\ntitle: Redux vs Mobx比较\ndate: 2019-06-07 09:39:23\ntags:\n---\n\n### 1. Community\n<img src=\"/images/redux-mobx.png\"  width=\"800\" height=\"400\">\n<img src=\"/images/stats.png\">\n\n### 2. Style\n\n| Redux                  | Mobx                                   |\n|------------------------|----------------------------------------|\n| Functional Programming | Object-oriented + Reactive programming |\n| 大量模版文件和代码     | 少量模版文件和代码                     |\n| 需要处理一步的中间件如thunk,saga     | 不需要thunk                     |\n\n### 3.Management\n\n| Redux                          | Mobx                         |\n|--------------------------------|------------------------------|\n| 通常单一store                  | 多个store                    |\n| 对象形式存储数据               | 可观察对象                   |\n| 状态对象不可变只读             | 状态对象可变重写             |\n| react-redux(Provider，connect) | mobx-react(Provider, inject) |\n","slug":"Redux-vs-Mobx比较","published":1,"updated":"2019-06-14T00:21:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc743000nu60n0ys26wij","content":"<h3 id=\"1-Community\"><a href=\"#1-Community\" class=\"headerlink\" title=\"1. Community\"></a>1. Community</h3><p><img src=\"/images/redux-mobx.png\" width=\"800\" height=\"400\"><br><img src=\"/images/stats.png\"></p>\n<h3 id=\"2-Style\"><a href=\"#2-Style\" class=\"headerlink\" title=\"2. Style\"></a>2. Style</h3><table>\n<thead>\n<tr>\n<th>Redux</th>\n<th>Mobx</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Functional Programming</td>\n<td>Object-oriented + Reactive programming</td>\n</tr>\n<tr>\n<td>大量模版文件和代码</td>\n<td>少量模版文件和代码</td>\n</tr>\n<tr>\n<td>需要处理一步的中间件如thunk,saga</td>\n<td>不需要thunk</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"3-Management\"><a href=\"#3-Management\" class=\"headerlink\" title=\"3.Management\"></a>3.Management</h3><table>\n<thead>\n<tr>\n<th>Redux</th>\n<th>Mobx</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>通常单一store</td>\n<td>多个store</td>\n</tr>\n<tr>\n<td>对象形式存储数据</td>\n<td>可观察对象</td>\n</tr>\n<tr>\n<td>状态对象不可变只读</td>\n<td>状态对象可变重写</td>\n</tr>\n<tr>\n<td>react-redux(Provider，connect)</td>\n<td>mobx-react(Provider, inject)</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-Community\"><a href=\"#1-Community\" class=\"headerlink\" title=\"1. Community\"></a>1. Community</h3><p><img src=\"/images/redux-mobx.png\"  width=\"800\" height=\"400\"><br><img src=\"/images/stats.png\"></p>\n<h3 id=\"2-Style\"><a href=\"#2-Style\" class=\"headerlink\" title=\"2. Style\"></a>2. Style</h3><table>\n<thead>\n<tr>\n<th>Redux</th>\n<th>Mobx</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Functional Programming</td>\n<td>Object-oriented + Reactive programming</td>\n</tr>\n<tr>\n<td>大量模版文件和代码</td>\n<td>少量模版文件和代码</td>\n</tr>\n<tr>\n<td>需要处理一步的中间件如thunk,saga</td>\n<td>不需要thunk</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"3-Management\"><a href=\"#3-Management\" class=\"headerlink\" title=\"3.Management\"></a>3.Management</h3><table>\n<thead>\n<tr>\n<th>Redux</th>\n<th>Mobx</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>通常单一store</td>\n<td>多个store</td>\n</tr>\n<tr>\n<td>对象形式存储数据</td>\n<td>可观察对象</td>\n</tr>\n<tr>\n<td>状态对象不可变只读</td>\n<td>状态对象可变重写</td>\n</tr>\n<tr>\n<td>react-redux(Provider，connect)</td>\n<td>mobx-react(Provider, inject)</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"Postgresql事务隔离界别的总结","date":"2019-05-04T00:30:40.000Z","_content":"SQL标准定义了四种隔离级别，但在Postgresql中只有三个级别，所以所选的隔离级别比\nSQL标准或者Mysql高一个级别。\n\n### Read committed\n\n在其中的select语句可以看到语句进行之前已经commit的事务的结果\n也就是说在一个transaction中 select 可能会获得两个不同的结果，\n但是select可以看到在这个事务中已经update的结果只是不能看到其他事务未提交之前的结果。\n在官方文档上有一个有趣的例子。两个网页的点击量是9和10，现在有这样的两个事务\n```\nBEGIN;\nUPDATE website SET hits = hits + 1;\n-- run from another session:  DELETE FROM website WHERE hits = 10;\nCOMMIT;\n```\n执行这两个事务后之前点击量9和10的网页都没有删除。\n原因是因为在更新之前9不等于10所以被skip掉，然后这个事物想删除更新之前是10的网页，\n等待update释放锁，当update事务完成后 Read committed 级别有一个nonrepeatable read（在读已提交模式中，每个命令都是从一个新的快照开始），\n发现现在的值为11，所以不满足条件，所以两条数据都没有被删除。\n\n### Repeatable 和 Serializable\nRepeatable 和 Serializable 的级别是最高的他们的区别在于幻读。\n事实上，这个级别完全像可重复读一样地工作，除了它会监视一些条件，\n这些条件可能导致一个可序列化事务的并发集合的执行产生的行为与这些事务所有可能的序列化\n（一次一个）执行不一致。\n```\nclass | value\n-------+-------\n     1 |    10\n     1 |    20\n     2 |   100\n     2 |   200\n```\n第一个事务\n```\nSELECT SUM(value) FROM mytab WHERE class = 1;\n```\n然后将结果以class = 2 插入表\n\n第二个并发事务\n```\nSELECT SUM(value) FROM mytab WHERE class = 2;\n```\n如果是 Repeatable级别那么所得到的结果是300，而且两个事务都能提交，之后如果查询class =2 的 和得到的是330。\n姨？不是300吗？这就是 Repeatable欢度的结果，而如果 是Serializable 级别的话\n```\nERROR:  could not serialize access due to read/write dependencies among transactions\n```\n一个事务能提交，而另一个事务会出现这个错误\n\n* 注意：在Postgresql中默认的级别是Read Committed 而 Mysql中默认的级别是Repeatable Read 级别\n\n\n### 总结\n在psql中Read Committed 可以应付大多数情况，而repeableread 和 serialiable\n需要 操作由徐立华冲突带来的错误进行再一次的提交。注意的一点是\n只有更新事务可能需要被重试；只读事务将永远不会有序列化冲突。\n","source":"_posts/Postgresql并发控制之事务隔离界别的总结.md","raw":"---\ntitle: Postgresql事务隔离界别的总结\ndate: 2019-05-04 08:30:40\ntags:\n---\nSQL标准定义了四种隔离级别，但在Postgresql中只有三个级别，所以所选的隔离级别比\nSQL标准或者Mysql高一个级别。\n\n### Read committed\n\n在其中的select语句可以看到语句进行之前已经commit的事务的结果\n也就是说在一个transaction中 select 可能会获得两个不同的结果，\n但是select可以看到在这个事务中已经update的结果只是不能看到其他事务未提交之前的结果。\n在官方文档上有一个有趣的例子。两个网页的点击量是9和10，现在有这样的两个事务\n```\nBEGIN;\nUPDATE website SET hits = hits + 1;\n-- run from another session:  DELETE FROM website WHERE hits = 10;\nCOMMIT;\n```\n执行这两个事务后之前点击量9和10的网页都没有删除。\n原因是因为在更新之前9不等于10所以被skip掉，然后这个事物想删除更新之前是10的网页，\n等待update释放锁，当update事务完成后 Read committed 级别有一个nonrepeatable read（在读已提交模式中，每个命令都是从一个新的快照开始），\n发现现在的值为11，所以不满足条件，所以两条数据都没有被删除。\n\n### Repeatable 和 Serializable\nRepeatable 和 Serializable 的级别是最高的他们的区别在于幻读。\n事实上，这个级别完全像可重复读一样地工作，除了它会监视一些条件，\n这些条件可能导致一个可序列化事务的并发集合的执行产生的行为与这些事务所有可能的序列化\n（一次一个）执行不一致。\n```\nclass | value\n-------+-------\n     1 |    10\n     1 |    20\n     2 |   100\n     2 |   200\n```\n第一个事务\n```\nSELECT SUM(value) FROM mytab WHERE class = 1;\n```\n然后将结果以class = 2 插入表\n\n第二个并发事务\n```\nSELECT SUM(value) FROM mytab WHERE class = 2;\n```\n如果是 Repeatable级别那么所得到的结果是300，而且两个事务都能提交，之后如果查询class =2 的 和得到的是330。\n姨？不是300吗？这就是 Repeatable欢度的结果，而如果 是Serializable 级别的话\n```\nERROR:  could not serialize access due to read/write dependencies among transactions\n```\n一个事务能提交，而另一个事务会出现这个错误\n\n* 注意：在Postgresql中默认的级别是Read Committed 而 Mysql中默认的级别是Repeatable Read 级别\n\n\n### 总结\n在psql中Read Committed 可以应付大多数情况，而repeableread 和 serialiable\n需要 操作由徐立华冲突带来的错误进行再一次的提交。注意的一点是\n只有更新事务可能需要被重试；只读事务将永远不会有序列化冲突。\n","slug":"Postgresql并发控制之事务隔离界别的总结","published":1,"updated":"2019-05-04T00:53:14.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc743000ou60nq1dml1zn","content":"<p>SQL标准定义了四种隔离级别，但在Postgresql中只有三个级别，所以所选的隔离级别比<br>SQL标准或者Mysql高一个级别。</p>\n<h3 id=\"Read-committed\"><a href=\"#Read-committed\" class=\"headerlink\" title=\"Read committed\"></a>Read committed</h3><p>在其中的select语句可以看到语句进行之前已经commit的事务的结果<br>也就是说在一个transaction中 select 可能会获得两个不同的结果，<br>但是select可以看到在这个事务中已经update的结果只是不能看到其他事务未提交之前的结果。<br>在官方文档上有一个有趣的例子。两个网页的点击量是9和10，现在有这样的两个事务<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">BEGIN;</span><br><span class=\"line\">UPDATE website SET hits = hits + 1;</span><br><span class=\"line\">-- run from another session:  DELETE FROM website WHERE hits = 10;</span><br><span class=\"line\">COMMIT;</span><br></pre></td></tr></table></figure></p>\n<p>执行这两个事务后之前点击量9和10的网页都没有删除。<br>原因是因为在更新之前9不等于10所以被skip掉，然后这个事物想删除更新之前是10的网页，<br>等待update释放锁，当update事务完成后 Read committed 级别有一个nonrepeatable read（在读已提交模式中，每个命令都是从一个新的快照开始），<br>发现现在的值为11，所以不满足条件，所以两条数据都没有被删除。</p>\n<h3 id=\"Repeatable-和-Serializable\"><a href=\"#Repeatable-和-Serializable\" class=\"headerlink\" title=\"Repeatable 和 Serializable\"></a>Repeatable 和 Serializable</h3><p>Repeatable 和 Serializable 的级别是最高的他们的区别在于幻读。<br>事实上，这个级别完全像可重复读一样地工作，除了它会监视一些条件，<br>这些条件可能导致一个可序列化事务的并发集合的执行产生的行为与这些事务所有可能的序列化<br>（一次一个）执行不一致。<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class | value</span><br><span class=\"line\">-------+-------</span><br><span class=\"line\">     1 |    10</span><br><span class=\"line\">     1 |    20</span><br><span class=\"line\">     2 |   100</span><br><span class=\"line\">     2 |   200</span><br></pre></td></tr></table></figure></p>\n<p>第一个事务<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">SELECT SUM(value) FROM mytab WHERE class = 1;</span><br></pre></td></tr></table></figure></p>\n<p>然后将结果以class = 2 插入表</p>\n<p>第二个并发事务<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">SELECT SUM(value) FROM mytab WHERE class = 2;</span><br></pre></td></tr></table></figure></p>\n<p>如果是 Repeatable级别那么所得到的结果是300，而且两个事务都能提交，之后如果查询class =2 的 和得到的是330。<br>姨？不是300吗？这就是 Repeatable欢度的结果，而如果 是Serializable 级别的话<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ERROR:  could not serialize access due to read/write dependencies among transactions</span><br></pre></td></tr></table></figure></p>\n<p>一个事务能提交，而另一个事务会出现这个错误</p>\n<ul>\n<li>注意：在Postgresql中默认的级别是Read Committed 而 Mysql中默认的级别是Repeatable Read 级别</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>在psql中Read Committed 可以应付大多数情况，而repeableread 和 serialiable<br>需要 操作由徐立华冲突带来的错误进行再一次的提交。注意的一点是<br>只有更新事务可能需要被重试；只读事务将永远不会有序列化冲突。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>SQL标准定义了四种隔离级别，但在Postgresql中只有三个级别，所以所选的隔离级别比<br>SQL标准或者Mysql高一个级别。</p>\n<h3 id=\"Read-committed\"><a href=\"#Read-committed\" class=\"headerlink\" title=\"Read committed\"></a>Read committed</h3><p>在其中的select语句可以看到语句进行之前已经commit的事务的结果<br>也就是说在一个transaction中 select 可能会获得两个不同的结果，<br>但是select可以看到在这个事务中已经update的结果只是不能看到其他事务未提交之前的结果。<br>在官方文档上有一个有趣的例子。两个网页的点击量是9和10，现在有这样的两个事务<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">BEGIN;</span><br><span class=\"line\">UPDATE website SET hits = hits + 1;</span><br><span class=\"line\">-- run from another session:  DELETE FROM website WHERE hits = 10;</span><br><span class=\"line\">COMMIT;</span><br></pre></td></tr></table></figure></p>\n<p>执行这两个事务后之前点击量9和10的网页都没有删除。<br>原因是因为在更新之前9不等于10所以被skip掉，然后这个事物想删除更新之前是10的网页，<br>等待update释放锁，当update事务完成后 Read committed 级别有一个nonrepeatable read（在读已提交模式中，每个命令都是从一个新的快照开始），<br>发现现在的值为11，所以不满足条件，所以两条数据都没有被删除。</p>\n<h3 id=\"Repeatable-和-Serializable\"><a href=\"#Repeatable-和-Serializable\" class=\"headerlink\" title=\"Repeatable 和 Serializable\"></a>Repeatable 和 Serializable</h3><p>Repeatable 和 Serializable 的级别是最高的他们的区别在于幻读。<br>事实上，这个级别完全像可重复读一样地工作，除了它会监视一些条件，<br>这些条件可能导致一个可序列化事务的并发集合的执行产生的行为与这些事务所有可能的序列化<br>（一次一个）执行不一致。<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class | value</span><br><span class=\"line\">-------+-------</span><br><span class=\"line\">     1 |    10</span><br><span class=\"line\">     1 |    20</span><br><span class=\"line\">     2 |   100</span><br><span class=\"line\">     2 |   200</span><br></pre></td></tr></table></figure></p>\n<p>第一个事务<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">SELECT SUM(value) FROM mytab WHERE class = 1;</span><br></pre></td></tr></table></figure></p>\n<p>然后将结果以class = 2 插入表</p>\n<p>第二个并发事务<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">SELECT SUM(value) FROM mytab WHERE class = 2;</span><br></pre></td></tr></table></figure></p>\n<p>如果是 Repeatable级别那么所得到的结果是300，而且两个事务都能提交，之后如果查询class =2 的 和得到的是330。<br>姨？不是300吗？这就是 Repeatable欢度的结果，而如果 是Serializable 级别的话<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ERROR:  could not serialize access due to read/write dependencies among transactions</span><br></pre></td></tr></table></figure></p>\n<p>一个事务能提交，而另一个事务会出现这个错误</p>\n<ul>\n<li>注意：在Postgresql中默认的级别是Read Committed 而 Mysql中默认的级别是Repeatable Read 级别</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>在psql中Read Committed 可以应付大多数情况，而repeableread 和 serialiable<br>需要 操作由徐立华冲突带来的错误进行再一次的提交。注意的一点是<br>只有更新事务可能需要被重试；只读事务将永远不会有序列化冲突。</p>\n"},{"title":"Swift学习之算法","date":"2019-12-17T15:56:26.000Z","_content":"\n\n\n> 接触一门语言，使用这个语言写写算法感觉可以快速掌握一些基础语句和特点，\n> \n> 为此打算使用swift写一些简单常用的算法，并与javascript比较来快速掌握语言精髓。\n\n# 排序\n\n## 快速排序\n\n```\n//swift 版本\nimport UIKit\n\nlet arr = [3, 5, 2, 7, 1, 4]\nfunc quicksort<T: Comparable>(_ a: [T]) -> [T] {\n  guard a.count > 1 else { return a }\n  let pivot = a[a.count/2]\n  let less = a.filter { $0 < pivot }\n  let equal = a.filter { $0 == pivot }\n  let greater = a.filter { $0 > pivot }\n  return quicksort(less) + equal + quicksort(greater)\n}\nquicksort(arr) //[1, 2, 3, 4, 5, 7]\n```\n\n```\nfunction quicksort(arr) {\n    if(arr.length <= 1) return arr\n    const pivot = arr[Math.round(arr.length/2)]\n    const less = arr.filter(e => e < pivot)\n    const equal = arr.filter(e => e === pivot)\n    const greater = arr.filter(e => e > pivot)\n\n    return [].concat(quicksort(less), equal, quicksort(greater))\n}\n\n\nconst test = [1, 2, 3, 4, 5, 7];\nquicksort(test)//[1, 2, 3, 4, 5, 7]\n```\n\n\n","source":"_posts/Swift学习之算法.md","raw":"---\ntitle: Swift学习之算法\ndate: 2019-12-17 23:56:26\ntags:\n---\n\n\n\n> 接触一门语言，使用这个语言写写算法感觉可以快速掌握一些基础语句和特点，\n> \n> 为此打算使用swift写一些简单常用的算法，并与javascript比较来快速掌握语言精髓。\n\n# 排序\n\n## 快速排序\n\n```\n//swift 版本\nimport UIKit\n\nlet arr = [3, 5, 2, 7, 1, 4]\nfunc quicksort<T: Comparable>(_ a: [T]) -> [T] {\n  guard a.count > 1 else { return a }\n  let pivot = a[a.count/2]\n  let less = a.filter { $0 < pivot }\n  let equal = a.filter { $0 == pivot }\n  let greater = a.filter { $0 > pivot }\n  return quicksort(less) + equal + quicksort(greater)\n}\nquicksort(arr) //[1, 2, 3, 4, 5, 7]\n```\n\n```\nfunction quicksort(arr) {\n    if(arr.length <= 1) return arr\n    const pivot = arr[Math.round(arr.length/2)]\n    const less = arr.filter(e => e < pivot)\n    const equal = arr.filter(e => e === pivot)\n    const greater = arr.filter(e => e > pivot)\n\n    return [].concat(quicksort(less), equal, quicksort(greater))\n}\n\n\nconst test = [1, 2, 3, 4, 5, 7];\nquicksort(test)//[1, 2, 3, 4, 5, 7]\n```\n\n\n","slug":"Swift学习之算法","published":1,"updated":"2019-12-17T16:04:59.678Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc744000pu60n2cc7ris7","content":"<blockquote>\n<p>接触一门语言，使用这个语言写写算法感觉可以快速掌握一些基础语句和特点，</p>\n<p>为此打算使用swift写一些简单常用的算法，并与javascript比较来快速掌握语言精髓。</p>\n</blockquote>\n<h1 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h1><h2 id=\"快速排序\"><a href=\"#快速排序\" class=\"headerlink\" title=\"快速排序\"></a>快速排序</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">//swift 版本</span><br><span class=\"line\">import UIKit</span><br><span class=\"line\"></span><br><span class=\"line\">let arr = [3, 5, 2, 7, 1, 4]</span><br><span class=\"line\">func quicksort&lt;T: Comparable&gt;(_ a: [T]) -&gt; [T] &#123;</span><br><span class=\"line\">  guard a.count &gt; 1 else &#123; return a &#125;</span><br><span class=\"line\">  let pivot = a[a.count/2]</span><br><span class=\"line\">  let less = a.filter &#123; $0 &lt; pivot &#125;</span><br><span class=\"line\">  let equal = a.filter &#123; $0 == pivot &#125;</span><br><span class=\"line\">  let greater = a.filter &#123; $0 &gt; pivot &#125;</span><br><span class=\"line\">  return quicksort(less) + equal + quicksort(greater)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">quicksort(arr) //[1, 2, 3, 4, 5, 7]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">function quicksort(arr) &#123;</span><br><span class=\"line\">    if(arr.length &lt;= 1) return arr</span><br><span class=\"line\">    const pivot = arr[Math.round(arr.length/2)]</span><br><span class=\"line\">    const less = arr.filter(e =&gt; e &lt; pivot)</span><br><span class=\"line\">    const equal = arr.filter(e =&gt; e === pivot)</span><br><span class=\"line\">    const greater = arr.filter(e =&gt; e &gt; pivot)</span><br><span class=\"line\"></span><br><span class=\"line\">    return [].concat(quicksort(less), equal, quicksort(greater))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">const test = [1, 2, 3, 4, 5, 7];</span><br><span class=\"line\">quicksort(test)//[1, 2, 3, 4, 5, 7]</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>接触一门语言，使用这个语言写写算法感觉可以快速掌握一些基础语句和特点，</p>\n<p>为此打算使用swift写一些简单常用的算法，并与javascript比较来快速掌握语言精髓。</p>\n</blockquote>\n<h1 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h1><h2 id=\"快速排序\"><a href=\"#快速排序\" class=\"headerlink\" title=\"快速排序\"></a>快速排序</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">//swift 版本</span><br><span class=\"line\">import UIKit</span><br><span class=\"line\"></span><br><span class=\"line\">let arr = [3, 5, 2, 7, 1, 4]</span><br><span class=\"line\">func quicksort&lt;T: Comparable&gt;(_ a: [T]) -&gt; [T] &#123;</span><br><span class=\"line\">  guard a.count &gt; 1 else &#123; return a &#125;</span><br><span class=\"line\">  let pivot = a[a.count/2]</span><br><span class=\"line\">  let less = a.filter &#123; $0 &lt; pivot &#125;</span><br><span class=\"line\">  let equal = a.filter &#123; $0 == pivot &#125;</span><br><span class=\"line\">  let greater = a.filter &#123; $0 &gt; pivot &#125;</span><br><span class=\"line\">  return quicksort(less) + equal + quicksort(greater)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">quicksort(arr) //[1, 2, 3, 4, 5, 7]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">function quicksort(arr) &#123;</span><br><span class=\"line\">    if(arr.length &lt;= 1) return arr</span><br><span class=\"line\">    const pivot = arr[Math.round(arr.length/2)]</span><br><span class=\"line\">    const less = arr.filter(e =&gt; e &lt; pivot)</span><br><span class=\"line\">    const equal = arr.filter(e =&gt; e === pivot)</span><br><span class=\"line\">    const greater = arr.filter(e =&gt; e &gt; pivot)</span><br><span class=\"line\"></span><br><span class=\"line\">    return [].concat(quicksort(less), equal, quicksort(greater))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">const test = [1, 2, 3, 4, 5, 7];</span><br><span class=\"line\">quicksort(test)//[1, 2, 3, 4, 5, 7]</span><br></pre></td></tr></table></figure>\n"},{"title":"Vue.js组件通信模式","date":"2019-04-22T10:05:20.000Z","_content":"\n有几种方法可用于Vue.js中的组件间通信。对于大多数情况，正常的情况下Props和Events应该足够了，但是也可以使用其他方法。\n\n##### Props&Events\n通常的通信方法涉及Props和Events。这种通用模式提供了一种强大的组件之间通信方式，而不会对涉及哪些组件产生任何依赖性或限制。\n\n###### Props：\nProps允许将任何数据类型传递给子组件，并允许控制组件接收的数据类型。支持更新也是被动的，允许子组件在父数据更改时更新。\n模版用法：\n```\n<my-component v-bind:prop1=\"parentValue\"></my-component>\n<!-- Or more succinctly, -->\n<my-component :prop1=\"parentValue\"></my-component>\n```\n###### Events：\n事件提供了一种向父组件通知子组件更改的方法。\n```\n<my-component v-on:myEvent=\"parentHandler\"></my-component>\n<!-- Or more succinctly, -->\n<my-component @myEvent=\"parentHandler\"></my-component>\n```\n发射一个事件：\n```\nexport default {\n  methods: {\n    fireEvent() {\n      this.$emit('myEvent', eventValueOne, eventValueTwo);\n    }\n  }\n}\n```\n此外，还可以创建全局事件，以便在应用中的任何位置传递事件。\n##### 绑定：\n使用v-model允许将props与事件组合以进行双向绑定。这通常用于输入组件。\nv-model假定值prop和input事件，但这可以自定义。\n```\n<my-component v-model=\"prop1\"></my-component>\n```\n```\n<my-checkbox v-model=\"foo\" value=\"some value\"></my-checkbox>\n<!-- equivalent to: -->\n<my-checkbox :checked=\"foo\" @change=\"val => { foo = val }\" value=\"some value\"> </my-checkbox>\n```\n使用情况：需要在组件之间进行几乎任何类型的数据传递和消息传递。\n##### Provide/Inject：\nVue的一个新增功能是Provice/Inject机制。它允许从祖先组件到其所有后代的数据或方法的选择性展示。虽然Provice/Inject本身不是反应性的，但它可以用于传递被动对象。\nProvice/Inject可能不是一个开发一个应用程序好主意，但它可以在编写整个自定义呈现的组件库时非常方便。\n具体用法：https://vuejs.org/v2/api/#provide-inject\n##### 直接访问：\n\n如果直接访问父或子组件上的属性或方法，你可以使用每个组件的this.$parent和this.$children属性来完全访问父组件和子组件上的所有内容。\n然而，这绝对是一个可怕的想法。如果发现自己处于需要这样做的境地，那么有99.99958％的可能性做错了并且应该重构。\n因为在父组件和子组件之间的标记中引入了实现和结构之间的直接耦合，使它们变得不灵活且容易破坏。\n","source":"_posts/Vue-js组件通信模式.md","raw":"---\ntitle: Vue.js组件通信模式\ndate: 2019-04-22 18:05:20\ntags:\n---\n\n有几种方法可用于Vue.js中的组件间通信。对于大多数情况，正常的情况下Props和Events应该足够了，但是也可以使用其他方法。\n\n##### Props&Events\n通常的通信方法涉及Props和Events。这种通用模式提供了一种强大的组件之间通信方式，而不会对涉及哪些组件产生任何依赖性或限制。\n\n###### Props：\nProps允许将任何数据类型传递给子组件，并允许控制组件接收的数据类型。支持更新也是被动的，允许子组件在父数据更改时更新。\n模版用法：\n```\n<my-component v-bind:prop1=\"parentValue\"></my-component>\n<!-- Or more succinctly, -->\n<my-component :prop1=\"parentValue\"></my-component>\n```\n###### Events：\n事件提供了一种向父组件通知子组件更改的方法。\n```\n<my-component v-on:myEvent=\"parentHandler\"></my-component>\n<!-- Or more succinctly, -->\n<my-component @myEvent=\"parentHandler\"></my-component>\n```\n发射一个事件：\n```\nexport default {\n  methods: {\n    fireEvent() {\n      this.$emit('myEvent', eventValueOne, eventValueTwo);\n    }\n  }\n}\n```\n此外，还可以创建全局事件，以便在应用中的任何位置传递事件。\n##### 绑定：\n使用v-model允许将props与事件组合以进行双向绑定。这通常用于输入组件。\nv-model假定值prop和input事件，但这可以自定义。\n```\n<my-component v-model=\"prop1\"></my-component>\n```\n```\n<my-checkbox v-model=\"foo\" value=\"some value\"></my-checkbox>\n<!-- equivalent to: -->\n<my-checkbox :checked=\"foo\" @change=\"val => { foo = val }\" value=\"some value\"> </my-checkbox>\n```\n使用情况：需要在组件之间进行几乎任何类型的数据传递和消息传递。\n##### Provide/Inject：\nVue的一个新增功能是Provice/Inject机制。它允许从祖先组件到其所有后代的数据或方法的选择性展示。虽然Provice/Inject本身不是反应性的，但它可以用于传递被动对象。\nProvice/Inject可能不是一个开发一个应用程序好主意，但它可以在编写整个自定义呈现的组件库时非常方便。\n具体用法：https://vuejs.org/v2/api/#provide-inject\n##### 直接访问：\n\n如果直接访问父或子组件上的属性或方法，你可以使用每个组件的this.$parent和this.$children属性来完全访问父组件和子组件上的所有内容。\n然而，这绝对是一个可怕的想法。如果发现自己处于需要这样做的境地，那么有99.99958％的可能性做错了并且应该重构。\n因为在父组件和子组件之间的标记中引入了实现和结构之间的直接耦合，使它们变得不灵活且容易破坏。\n","slug":"Vue-js组件通信模式","published":1,"updated":"2019-04-22T10:12:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc744000qu60n5zva8l5q","content":"<p>有几种方法可用于Vue.js中的组件间通信。对于大多数情况，正常的情况下Props和Events应该足够了，但是也可以使用其他方法。</p>\n<h5 id=\"Props-amp-Events\"><a href=\"#Props-amp-Events\" class=\"headerlink\" title=\"Props&amp;Events\"></a>Props&amp;Events</h5><p>通常的通信方法涉及Props和Events。这种通用模式提供了一种强大的组件之间通信方式，而不会对涉及哪些组件产生任何依赖性或限制。</p>\n<h6 id=\"Props：\"><a href=\"#Props：\" class=\"headerlink\" title=\"Props：\"></a>Props：</h6><p>Props允许将任何数据类型传递给子组件，并允许控制组件接收的数据类型。支持更新也是被动的，允许子组件在父数据更改时更新。<br>模版用法：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;my-component v-bind:prop1=&quot;parentValue&quot;&gt;&lt;/my-component&gt;</span><br><span class=\"line\">&lt;!-- Or more succinctly, --&gt;</span><br><span class=\"line\">&lt;my-component :prop1=&quot;parentValue&quot;&gt;&lt;/my-component&gt;</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Events：\"><a href=\"#Events：\" class=\"headerlink\" title=\"Events：\"></a>Events：</h6><p>事件提供了一种向父组件通知子组件更改的方法。<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;my-component v-on:myEvent=&quot;parentHandler&quot;&gt;&lt;/my-component&gt;</span><br><span class=\"line\">&lt;!-- Or more succinctly, --&gt;</span><br><span class=\"line\">&lt;my-component @myEvent=&quot;parentHandler&quot;&gt;&lt;/my-component&gt;</span><br></pre></td></tr></table></figure></p>\n<p>发射一个事件：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">export default &#123;</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    fireEvent() &#123;</span><br><span class=\"line\">      this.$emit(&apos;myEvent&apos;, eventValueOne, eventValueTwo);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>此外，还可以创建全局事件，以便在应用中的任何位置传递事件。</p>\n<h5 id=\"绑定：\"><a href=\"#绑定：\" class=\"headerlink\" title=\"绑定：\"></a>绑定：</h5><p>使用v-model允许将props与事件组合以进行双向绑定。这通常用于输入组件。<br>v-model假定值prop和input事件，但这可以自定义。<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;my-component v-model=&quot;prop1&quot;&gt;&lt;/my-component&gt;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;my-checkbox v-model=&quot;foo&quot; value=&quot;some value&quot;&gt;&lt;/my-checkbox&gt;</span><br><span class=\"line\">&lt;!-- equivalent to: --&gt;</span><br><span class=\"line\">&lt;my-checkbox :checked=&quot;foo&quot; @change=&quot;val =&gt; &#123; foo = val &#125;&quot; value=&quot;some value&quot;&gt; &lt;/my-checkbox&gt;</span><br></pre></td></tr></table></figure>\n<p>使用情况：需要在组件之间进行几乎任何类型的数据传递和消息传递。</p>\n<h5 id=\"Provide-Inject：\"><a href=\"#Provide-Inject：\" class=\"headerlink\" title=\"Provide/Inject：\"></a>Provide/Inject：</h5><p>Vue的一个新增功能是Provice/Inject机制。它允许从祖先组件到其所有后代的数据或方法的选择性展示。虽然Provice/Inject本身不是反应性的，但它可以用于传递被动对象。<br>Provice/Inject可能不是一个开发一个应用程序好主意，但它可以在编写整个自定义呈现的组件库时非常方便。<br>具体用法：<a href=\"https://vuejs.org/v2/api/#provide-inject\" target=\"_blank\" rel=\"external\">https://vuejs.org/v2/api/#provide-inject</a></p>\n<h5 id=\"直接访问：\"><a href=\"#直接访问：\" class=\"headerlink\" title=\"直接访问：\"></a>直接访问：</h5><p>如果直接访问父或子组件上的属性或方法，你可以使用每个组件的this.$parent和this.$children属性来完全访问父组件和子组件上的所有内容。<br>然而，这绝对是一个可怕的想法。如果发现自己处于需要这样做的境地，那么有99.99958％的可能性做错了并且应该重构。<br>因为在父组件和子组件之间的标记中引入了实现和结构之间的直接耦合，使它们变得不灵活且容易破坏。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>有几种方法可用于Vue.js中的组件间通信。对于大多数情况，正常的情况下Props和Events应该足够了，但是也可以使用其他方法。</p>\n<h5 id=\"Props-amp-Events\"><a href=\"#Props-amp-Events\" class=\"headerlink\" title=\"Props&amp;Events\"></a>Props&amp;Events</h5><p>通常的通信方法涉及Props和Events。这种通用模式提供了一种强大的组件之间通信方式，而不会对涉及哪些组件产生任何依赖性或限制。</p>\n<h6 id=\"Props：\"><a href=\"#Props：\" class=\"headerlink\" title=\"Props：\"></a>Props：</h6><p>Props允许将任何数据类型传递给子组件，并允许控制组件接收的数据类型。支持更新也是被动的，允许子组件在父数据更改时更新。<br>模版用法：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;my-component v-bind:prop1=&quot;parentValue&quot;&gt;&lt;/my-component&gt;</span><br><span class=\"line\">&lt;!-- Or more succinctly, --&gt;</span><br><span class=\"line\">&lt;my-component :prop1=&quot;parentValue&quot;&gt;&lt;/my-component&gt;</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Events：\"><a href=\"#Events：\" class=\"headerlink\" title=\"Events：\"></a>Events：</h6><p>事件提供了一种向父组件通知子组件更改的方法。<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;my-component v-on:myEvent=&quot;parentHandler&quot;&gt;&lt;/my-component&gt;</span><br><span class=\"line\">&lt;!-- Or more succinctly, --&gt;</span><br><span class=\"line\">&lt;my-component @myEvent=&quot;parentHandler&quot;&gt;&lt;/my-component&gt;</span><br></pre></td></tr></table></figure></p>\n<p>发射一个事件：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">export default &#123;</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    fireEvent() &#123;</span><br><span class=\"line\">      this.$emit(&apos;myEvent&apos;, eventValueOne, eventValueTwo);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>此外，还可以创建全局事件，以便在应用中的任何位置传递事件。</p>\n<h5 id=\"绑定：\"><a href=\"#绑定：\" class=\"headerlink\" title=\"绑定：\"></a>绑定：</h5><p>使用v-model允许将props与事件组合以进行双向绑定。这通常用于输入组件。<br>v-model假定值prop和input事件，但这可以自定义。<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;my-component v-model=&quot;prop1&quot;&gt;&lt;/my-component&gt;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;my-checkbox v-model=&quot;foo&quot; value=&quot;some value&quot;&gt;&lt;/my-checkbox&gt;</span><br><span class=\"line\">&lt;!-- equivalent to: --&gt;</span><br><span class=\"line\">&lt;my-checkbox :checked=&quot;foo&quot; @change=&quot;val =&gt; &#123; foo = val &#125;&quot; value=&quot;some value&quot;&gt; &lt;/my-checkbox&gt;</span><br></pre></td></tr></table></figure>\n<p>使用情况：需要在组件之间进行几乎任何类型的数据传递和消息传递。</p>\n<h5 id=\"Provide-Inject：\"><a href=\"#Provide-Inject：\" class=\"headerlink\" title=\"Provide/Inject：\"></a>Provide/Inject：</h5><p>Vue的一个新增功能是Provice/Inject机制。它允许从祖先组件到其所有后代的数据或方法的选择性展示。虽然Provice/Inject本身不是反应性的，但它可以用于传递被动对象。<br>Provice/Inject可能不是一个开发一个应用程序好主意，但它可以在编写整个自定义呈现的组件库时非常方便。<br>具体用法：<a href=\"https://vuejs.org/v2/api/#provide-inject\">https://vuejs.org/v2/api/#provide-inject</a></p>\n<h5 id=\"直接访问：\"><a href=\"#直接访问：\" class=\"headerlink\" title=\"直接访问：\"></a>直接访问：</h5><p>如果直接访问父或子组件上的属性或方法，你可以使用每个组件的this.$parent和this.$children属性来完全访问父组件和子组件上的所有内容。<br>然而，这绝对是一个可怕的想法。如果发现自己处于需要这样做的境地，那么有99.99958％的可能性做错了并且应该重构。<br>因为在父组件和子组件之间的标记中引入了实现和结构之间的直接耦合，使它们变得不灵活且容易破坏。</p>\n"},{"title":"Setup Charles proxy for mobile app","date":"2020-10-20T14:25:53.000Z","_content":"\n1. Install  https://www.charlesproxy.com/download/latest-release/\n\n2. Access\n\n```shell\nsudo chown -R root \"/Applications/Charles.app/Contents/Resources\"\nsudo chmod -R u+s \"/Applications/Charles.app/Contents/Resources\"\n```\n\n3. Help -> Register \n\n   ```\n   * Registered Name: https://zhile.io\n   * License Key: 48891cf209c6d32bf4\n   ```\n\n4. Help -> SSL Proxying -> Install Chales Root Certificate on Mobile device and Remote Browser.\n\n   Configure your device to use Charles as its HTTP proxy on 192.168.0.102:8888, then browse to chls.pro/ssl to download and install the certificate. Note that on iOS 10 and later you must then go into Settings > General > About > Certificate Trust Settings and enable the Charles certificate to be trusted.\n\n","source":"_posts/Setup-Charles-proxy-for-mobile-app.md","raw":"---\ntitle: Setup Charles proxy for mobile app\ndate: 2020-10-20 22:25:53\ntags:\n---\n\n1. Install  https://www.charlesproxy.com/download/latest-release/\n\n2. Access\n\n```shell\nsudo chown -R root \"/Applications/Charles.app/Contents/Resources\"\nsudo chmod -R u+s \"/Applications/Charles.app/Contents/Resources\"\n```\n\n3. Help -> Register \n\n   ```\n   * Registered Name: https://zhile.io\n   * License Key: 48891cf209c6d32bf4\n   ```\n\n4. Help -> SSL Proxying -> Install Chales Root Certificate on Mobile device and Remote Browser.\n\n   Configure your device to use Charles as its HTTP proxy on 192.168.0.102:8888, then browse to chls.pro/ssl to download and install the certificate. Note that on iOS 10 and later you must then go into Settings > General > About > Certificate Trust Settings and enable the Charles certificate to be trusted.\n\n","slug":"Setup-Charles-proxy-for-mobile-app","published":1,"updated":"2020-10-20T14:36:07.930Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc745000ru60n0dc8s8bq","content":"<ol>\n<li><p>Install  <a href=\"https://www.charlesproxy.com/download/latest-release/\" target=\"_blank\" rel=\"external\">https://www.charlesproxy.com/download/latest-release/</a></p>\n</li>\n<li><p>Access</p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo chown -R root \"/Applications/Charles.app/Contents/Resources\"</span><br><span class=\"line\">sudo chmod -R u+s \"/Applications/Charles.app/Contents/Resources\"</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><p>Help -&gt; Register </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">* Registered Name: https://zhile.io</span><br><span class=\"line\">* License Key: 48891cf209c6d32bf4</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Help -&gt; SSL Proxying -&gt; Install Chales Root Certificate on Mobile device and Remote Browser.</p>\n<p>Configure your device to use Charles as its HTTP proxy on 192.168.0.102:8888, then browse to chls.pro/ssl to download and install the certificate. Note that on iOS 10 and later you must then go into Settings &gt; General &gt; About &gt; Certificate Trust Settings and enable the Charles certificate to be trusted.</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>Install  <a href=\"https://www.charlesproxy.com/download/latest-release/\">https://www.charlesproxy.com/download/latest-release/</a></p>\n</li>\n<li><p>Access</p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo chown -R root \"/Applications/Charles.app/Contents/Resources\"</span><br><span class=\"line\">sudo chmod -R u+s \"/Applications/Charles.app/Contents/Resources\"</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><p>Help -&gt; Register </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">* Registered Name: https://zhile.io</span><br><span class=\"line\">* License Key: 48891cf209c6d32bf4</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Help -&gt; SSL Proxying -&gt; Install Chales Root Certificate on Mobile device and Remote Browser.</p>\n<p>Configure your device to use Charles as its HTTP proxy on 192.168.0.102:8888, then browse to chls.pro/ssl to download and install the certificate. Note that on iOS 10 and later you must then go into Settings &gt; General &gt; About &gt; Certificate Trust Settings and enable the Charles certificate to be trusted.</p>\n</li>\n</ol>\n"},{"title":"Useful vi commands","date":"2020-08-09T09:18:03.000Z","_content":"\nOnly record some commonly used commands \n\n### Delete\n\n1. delete one line `dd`\n\n2. delete one line from the current cursor `D`\n\n3. delete all from current cursor `dG`\n\n4. delete whole file `ggdG`  gg  means move cursor to the front\n\n### Undo\n\n1. Undo last thing you did `u`\n\n### Search\n\n1. Search forward `/`\n\n2. Search backward `?`\n\n3. Repeat last search in the same direction `n`\n\n4. Repeat last search in the opposite direction `N`\n\n5. Set raw number `set nu` \n\n6. Replacing all matching strings `g/search-string/s//replace-string/g`\n","source":"_posts/Useful-vi-commands.md","raw":"---\ntitle: Useful vi commands\ndate: 2020-08-09 17:18:03\ntags:\n---\n\nOnly record some commonly used commands \n\n### Delete\n\n1. delete one line `dd`\n\n2. delete one line from the current cursor `D`\n\n3. delete all from current cursor `dG`\n\n4. delete whole file `ggdG`  gg  means move cursor to the front\n\n### Undo\n\n1. Undo last thing you did `u`\n\n### Search\n\n1. Search forward `/`\n\n2. Search backward `?`\n\n3. Repeat last search in the same direction `n`\n\n4. Repeat last search in the opposite direction `N`\n\n5. Set raw number `set nu` \n\n6. Replacing all matching strings `g/search-string/s//replace-string/g`\n","slug":"Useful-vi-commands","published":1,"updated":"2020-10-06T01:01:42.950Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc745000su60nyxs0kyc5","content":"<p>Only record some commonly used commands </p>\n<h3 id=\"Delete\"><a href=\"#Delete\" class=\"headerlink\" title=\"Delete\"></a>Delete</h3><ol>\n<li><p>delete one line <code>dd</code></p>\n</li>\n<li><p>delete one line from the current cursor <code>D</code></p>\n</li>\n<li><p>delete all from current cursor <code>dG</code></p>\n</li>\n<li><p>delete whole file <code>ggdG</code>  gg  means move cursor to the front</p>\n</li>\n</ol>\n<h3 id=\"Undo\"><a href=\"#Undo\" class=\"headerlink\" title=\"Undo\"></a>Undo</h3><ol>\n<li>Undo last thing you did <code>u</code></li>\n</ol>\n<h3 id=\"Search\"><a href=\"#Search\" class=\"headerlink\" title=\"Search\"></a>Search</h3><ol>\n<li><p>Search forward <code>/</code></p>\n</li>\n<li><p>Search backward <code>?</code></p>\n</li>\n<li><p>Repeat last search in the same direction <code>n</code></p>\n</li>\n<li><p>Repeat last search in the opposite direction <code>N</code></p>\n</li>\n<li><p>Set raw number <code>set nu</code> </p>\n</li>\n<li><p>Replacing all matching strings <code>g/search-string/s//replace-string/g</code></p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>Only record some commonly used commands </p>\n<h3 id=\"Delete\"><a href=\"#Delete\" class=\"headerlink\" title=\"Delete\"></a>Delete</h3><ol>\n<li><p>delete one line <code>dd</code></p>\n</li>\n<li><p>delete one line from the current cursor <code>D</code></p>\n</li>\n<li><p>delete all from current cursor <code>dG</code></p>\n</li>\n<li><p>delete whole file <code>ggdG</code>  gg  means move cursor to the front</p>\n</li>\n</ol>\n<h3 id=\"Undo\"><a href=\"#Undo\" class=\"headerlink\" title=\"Undo\"></a>Undo</h3><ol>\n<li>Undo last thing you did <code>u</code></li>\n</ol>\n<h3 id=\"Search\"><a href=\"#Search\" class=\"headerlink\" title=\"Search\"></a>Search</h3><ol>\n<li><p>Search forward <code>/</code></p>\n</li>\n<li><p>Search backward <code>?</code></p>\n</li>\n<li><p>Repeat last search in the same direction <code>n</code></p>\n</li>\n<li><p>Repeat last search in the opposite direction <code>N</code></p>\n</li>\n<li><p>Set raw number <code>set nu</code> </p>\n</li>\n<li><p>Replacing all matching strings <code>g/search-string/s//replace-string/g</code></p>\n</li>\n</ol>\n"},{"title":"Simple summary of git and github useful tools","date":"2020-10-06T01:02:47.000Z","_content":"\n### Git Tools - Submodules\n\nIt often happens that while working on one project, you need to use another project from within it. It's like having multiple microservice projects and all rely on the same data model, this makes it very easy to manage the data model.\n\n#### How to use it\n\n`.gitmodules` is a configuration file that stores the mapping between the project's URL and the local subdirectory you arre pulled it into:\n\n```\n[submodule \"models\"]\n\tpath = src/models\n\turl = https://github.com/xxxx/project_models.git\n```\n\nYou can load the submodule with :\n\n```\ngit submodule update --init\n```\n\nYou can add commit and push the change in the submodule directory. When you want to update submudle  \n\ncan run:\n\n```\ngit submodule update\n```\n\n### Github - Creating a repository from a template\n\nTemplate repository enable developers to mark a repository as a template, which can use later for creating new repositores containing all of the template repository's file and folders. This feature is very useful and convenient when developing projects of the same type.\n\nYou can create a new template repository or mark an existing one as a template with admin permissions. Just navigate to the Settings page and then click on the **Template repository** checkbox. Once the template repository is created anyone who has access to it will be able to generate a new repository with same directory structure and files via‘**Use this template** button.","source":"_posts/Simple-summary-of-git-and-github-useful-tools.md","raw":"---\ntitle: Simple summary of git and github useful tools\ndate: 2020-10-06 09:02:47\ntags:\n---\n\n### Git Tools - Submodules\n\nIt often happens that while working on one project, you need to use another project from within it. It's like having multiple microservice projects and all rely on the same data model, this makes it very easy to manage the data model.\n\n#### How to use it\n\n`.gitmodules` is a configuration file that stores the mapping between the project's URL and the local subdirectory you arre pulled it into:\n\n```\n[submodule \"models\"]\n\tpath = src/models\n\turl = https://github.com/xxxx/project_models.git\n```\n\nYou can load the submodule with :\n\n```\ngit submodule update --init\n```\n\nYou can add commit and push the change in the submodule directory. When you want to update submudle  \n\ncan run:\n\n```\ngit submodule update\n```\n\n### Github - Creating a repository from a template\n\nTemplate repository enable developers to mark a repository as a template, which can use later for creating new repositores containing all of the template repository's file and folders. This feature is very useful and convenient when developing projects of the same type.\n\nYou can create a new template repository or mark an existing one as a template with admin permissions. Just navigate to the Settings page and then click on the **Template repository** checkbox. Once the template repository is created anyone who has access to it will be able to generate a new repository with same directory structure and files via‘**Use this template** button.","slug":"Simple-summary-of-git-and-github-useful-tools","published":1,"updated":"2020-10-06T01:03:18.998Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc745000tu60nwdtrbmm4","content":"<h3 id=\"Git-Tools-Submodules\"><a href=\"#Git-Tools-Submodules\" class=\"headerlink\" title=\"Git Tools - Submodules\"></a>Git Tools - Submodules</h3><p>It often happens that while working on one project, you need to use another project from within it. It’s like having multiple microservice projects and all rely on the same data model, this makes it very easy to manage the data model.</p>\n<h4 id=\"How-to-use-it\"><a href=\"#How-to-use-it\" class=\"headerlink\" title=\"How to use it\"></a>How to use it</h4><p><code>.gitmodules</code> is a configuration file that stores the mapping between the project’s URL and the local subdirectory you arre pulled it into:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[submodule &quot;models&quot;]</span><br><span class=\"line\">\tpath = src/models</span><br><span class=\"line\">\turl = https://github.com/xxxx/project_models.git</span><br></pre></td></tr></table></figure>\n<p>You can load the submodule with :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git submodule update --init</span><br></pre></td></tr></table></figure>\n<p>You can add commit and push the change in the submodule directory. When you want to update submudle  </p>\n<p>can run:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git submodule update</span><br></pre></td></tr></table></figure>\n<h3 id=\"Github-Creating-a-repository-from-a-template\"><a href=\"#Github-Creating-a-repository-from-a-template\" class=\"headerlink\" title=\"Github - Creating a repository from a template\"></a>Github - Creating a repository from a template</h3><p>Template repository enable developers to mark a repository as a template, which can use later for creating new repositores containing all of the template repository’s file and folders. This feature is very useful and convenient when developing projects of the same type.</p>\n<p>You can create a new template repository or mark an existing one as a template with admin permissions. Just navigate to the Settings page and then click on the <strong>Template repository</strong> checkbox. Once the template repository is created anyone who has access to it will be able to generate a new repository with same directory structure and files via‘<strong>Use this template</strong> button.</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Git-Tools-Submodules\"><a href=\"#Git-Tools-Submodules\" class=\"headerlink\" title=\"Git Tools - Submodules\"></a>Git Tools - Submodules</h3><p>It often happens that while working on one project, you need to use another project from within it. It’s like having multiple microservice projects and all rely on the same data model, this makes it very easy to manage the data model.</p>\n<h4 id=\"How-to-use-it\"><a href=\"#How-to-use-it\" class=\"headerlink\" title=\"How to use it\"></a>How to use it</h4><p><code>.gitmodules</code> is a configuration file that stores the mapping between the project’s URL and the local subdirectory you arre pulled it into:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[submodule &quot;models&quot;]</span><br><span class=\"line\">\tpath = src/models</span><br><span class=\"line\">\turl = https://github.com/xxxx/project_models.git</span><br></pre></td></tr></table></figure>\n<p>You can load the submodule with :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git submodule update --init</span><br></pre></td></tr></table></figure>\n<p>You can add commit and push the change in the submodule directory. When you want to update submudle  </p>\n<p>can run:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git submodule update</span><br></pre></td></tr></table></figure>\n<h3 id=\"Github-Creating-a-repository-from-a-template\"><a href=\"#Github-Creating-a-repository-from-a-template\" class=\"headerlink\" title=\"Github - Creating a repository from a template\"></a>Github - Creating a repository from a template</h3><p>Template repository enable developers to mark a repository as a template, which can use later for creating new repositores containing all of the template repository’s file and folders. This feature is very useful and convenient when developing projects of the same type.</p>\n<p>You can create a new template repository or mark an existing one as a template with admin permissions. Just navigate to the Settings page and then click on the <strong>Template repository</strong> checkbox. Once the template repository is created anyone who has access to it will be able to generate a new repository with same directory structure and files via‘<strong>Use this template</strong> button.</p>\n"},{"title":"Why graphql","date":"2020-07-04T06:03:00.000Z","_content":"\n\n\n## What is GraphQL?\n\nGraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools.\n\n## Why use GraphQL?\n\nI often encounter such a situation ...\n\n \"Hey , Hu bro there is xx field missing in your xx api...\"\n\n \"Hey, there is too many field in your api, i just need xx and xx field, please modify it...\"\n\n\"Hey, i have to request three api in this page, would you please combine those in one API?...\"\n\n\"Em.....\"\n\n\"Hey, Hu bro  the Api doc has not been updated...What paramater do i need to pass?\"\n\nWhat i want to say is the above problem solved by GraphQL.\n\n## What is apollo Graphql?\n\nGraphQL is just a query language. And in order to use it easily, we need to use a platform that will do all the heavy lifting for us. One such platform is provided by Apollo.\n\n## Main process?\n\nDescribe your data\n\n```\ntype Project {\n  name: String\n  tagline: String\n  contributors: [User]\n}\n```\n\nAsk for what  u What\n\n```\n{\n  project(name: \"GraphQL\") {\n    tagline\n  }\n}\n```\n\nGet predictable results\n\n```\n{\n  \"project\": {\n    \"tagline\": \"A query language for APIs\"\n  }\n}\n```\n\n## How to use?\n\n1. Build a schema\n   \n   ```\n   const userSchema = gql`\n       type Query {\n           getUser(id: ID): User\n           getUsers: [User]\n       }\n   \n       type Mutation {\n           createUser(userInfo: CreateUserInput): User\n       }\n       \n       input CreateUserInput {\n           name: String\n           age: Int\n           address: String\n       }\n       \n       type User {\n           id: ID\n           name: String\n           age: Int\n           address: String\n           number: String\n       }\n   `;\n   ```\n\n2. Write query resolvers\n   \n   Briefly, `Query` for get request, `Mutation` for update request.\n   \n   ```\n   const userResolvers = {\n       Query: {\n           getUser: async (parent, args, context, info) => await userLoader.getUser(args.id),\n           getUsers: async (parent, args, context, info) => await userLoader.getUsers()\n       },\n       Mutation: {\n           createUser: async (_, args, { dataSources }) => {\n               return await userLoader.createUser(args.userInfo)\n           }\n       }\n   };\n   ```\n\n3. Intergrating with your node middleare\n   \n   ```\n   const apolloServer = new ApolloServer({\n       typeDefs: schema,\n       resolvers,\n   });\n   apolloServer.applyMiddleware({ app: app, path: '/graphql' });\n   const port = process.env.PORT || 3333\n   const server = app.listen(port, () => console.info(`Listening to http://localhost:${port}/graphql 🚀`));\n   ```\n\n[The entire code can be viewed here](https://github.com/ybleeho/koa_playground)\n\n## Q&A\n\n[How to  Modularizing your GraphQL?]([https://www.apollographql.com/blog/modularizing-your-graphql-schema-code-d7f71d5ed5f2](https://www.apollographql.com/blog/modularizing-your-graphql-schema-code-d7f71d5ed5f2))\n\n[Error Handling](https://www.apollographql.com/docs/apollo-server/data/errors/)\n\n[Security](https://www.apollographql.com/docs/apollo-server/security/authentication/)\n\n[Intergration testing](https://www.apollographql.com/docs/apollo-server/testing/testing/)\n\n\n\n\n\n\n\n\n","source":"_posts/Why-graphql.md","raw":"---\ntitle: Why graphql\ndate: 2020-07-04 14:03:00\ntags:\n---\n\n\n\n## What is GraphQL?\n\nGraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools.\n\n## Why use GraphQL?\n\nI often encounter such a situation ...\n\n \"Hey , Hu bro there is xx field missing in your xx api...\"\n\n \"Hey, there is too many field in your api, i just need xx and xx field, please modify it...\"\n\n\"Hey, i have to request three api in this page, would you please combine those in one API?...\"\n\n\"Em.....\"\n\n\"Hey, Hu bro  the Api doc has not been updated...What paramater do i need to pass?\"\n\nWhat i want to say is the above problem solved by GraphQL.\n\n## What is apollo Graphql?\n\nGraphQL is just a query language. And in order to use it easily, we need to use a platform that will do all the heavy lifting for us. One such platform is provided by Apollo.\n\n## Main process?\n\nDescribe your data\n\n```\ntype Project {\n  name: String\n  tagline: String\n  contributors: [User]\n}\n```\n\nAsk for what  u What\n\n```\n{\n  project(name: \"GraphQL\") {\n    tagline\n  }\n}\n```\n\nGet predictable results\n\n```\n{\n  \"project\": {\n    \"tagline\": \"A query language for APIs\"\n  }\n}\n```\n\n## How to use?\n\n1. Build a schema\n   \n   ```\n   const userSchema = gql`\n       type Query {\n           getUser(id: ID): User\n           getUsers: [User]\n       }\n   \n       type Mutation {\n           createUser(userInfo: CreateUserInput): User\n       }\n       \n       input CreateUserInput {\n           name: String\n           age: Int\n           address: String\n       }\n       \n       type User {\n           id: ID\n           name: String\n           age: Int\n           address: String\n           number: String\n       }\n   `;\n   ```\n\n2. Write query resolvers\n   \n   Briefly, `Query` for get request, `Mutation` for update request.\n   \n   ```\n   const userResolvers = {\n       Query: {\n           getUser: async (parent, args, context, info) => await userLoader.getUser(args.id),\n           getUsers: async (parent, args, context, info) => await userLoader.getUsers()\n       },\n       Mutation: {\n           createUser: async (_, args, { dataSources }) => {\n               return await userLoader.createUser(args.userInfo)\n           }\n       }\n   };\n   ```\n\n3. Intergrating with your node middleare\n   \n   ```\n   const apolloServer = new ApolloServer({\n       typeDefs: schema,\n       resolvers,\n   });\n   apolloServer.applyMiddleware({ app: app, path: '/graphql' });\n   const port = process.env.PORT || 3333\n   const server = app.listen(port, () => console.info(`Listening to http://localhost:${port}/graphql 🚀`));\n   ```\n\n[The entire code can be viewed here](https://github.com/ybleeho/koa_playground)\n\n## Q&A\n\n[How to  Modularizing your GraphQL?]([https://www.apollographql.com/blog/modularizing-your-graphql-schema-code-d7f71d5ed5f2](https://www.apollographql.com/blog/modularizing-your-graphql-schema-code-d7f71d5ed5f2))\n\n[Error Handling](https://www.apollographql.com/docs/apollo-server/data/errors/)\n\n[Security](https://www.apollographql.com/docs/apollo-server/security/authentication/)\n\n[Intergration testing](https://www.apollographql.com/docs/apollo-server/testing/testing/)\n\n\n\n\n\n\n\n\n","slug":"Why-graphql","published":1,"updated":"2020-07-04T06:58:31.769Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc746000uu60n675a8rtd","content":"<h2 id=\"What-is-GraphQL\"><a href=\"#What-is-GraphQL\" class=\"headerlink\" title=\"What is GraphQL?\"></a>What is GraphQL?</h2><p>GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools.</p>\n<h2 id=\"Why-use-GraphQL\"><a href=\"#Why-use-GraphQL\" class=\"headerlink\" title=\"Why use GraphQL?\"></a>Why use GraphQL?</h2><p>I often encounter such a situation …</p>\n<p> “Hey , Hu bro there is xx field missing in your xx api…”</p>\n<p> “Hey, there is too many field in your api, i just need xx and xx field, please modify it…”</p>\n<p>“Hey, i have to request three api in this page, would you please combine those in one API?…”</p>\n<p>“Em…..”</p>\n<p>“Hey, Hu bro  the Api doc has not been updated…What paramater do i need to pass?”</p>\n<p>What i want to say is the above problem solved by GraphQL.</p>\n<h2 id=\"What-is-apollo-Graphql\"><a href=\"#What-is-apollo-Graphql\" class=\"headerlink\" title=\"What is apollo Graphql?\"></a>What is apollo Graphql?</h2><p>GraphQL is just a query language. And in order to use it easily, we need to use a platform that will do all the heavy lifting for us. One such platform is provided by Apollo.</p>\n<h2 id=\"Main-process\"><a href=\"#Main-process\" class=\"headerlink\" title=\"Main process?\"></a>Main process?</h2><p>Describe your data</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">type Project &#123;</span><br><span class=\"line\">  name: String</span><br><span class=\"line\">  tagline: String</span><br><span class=\"line\">  contributors: [User]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Ask for what  u What</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  project(name: &quot;GraphQL&quot;) &#123;</span><br><span class=\"line\">    tagline</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Get predictable results</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;project&quot;: &#123;</span><br><span class=\"line\">    &quot;tagline&quot;: &quot;A query language for APIs&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"How-to-use\"><a href=\"#How-to-use\" class=\"headerlink\" title=\"How to use?\"></a>How to use?</h2><ol>\n<li><p>Build a schema</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">const userSchema = gql`</span><br><span class=\"line\">    type Query &#123;</span><br><span class=\"line\">        getUser(id: ID): User</span><br><span class=\"line\">        getUsers: [User]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    type Mutation &#123;</span><br><span class=\"line\">        createUser(userInfo: CreateUserInput): User</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    input CreateUserInput &#123;</span><br><span class=\"line\">        name: String</span><br><span class=\"line\">        age: Int</span><br><span class=\"line\">        address: String</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    type User &#123;</span><br><span class=\"line\">        id: ID</span><br><span class=\"line\">        name: String</span><br><span class=\"line\">        age: Int</span><br><span class=\"line\">        address: String</span><br><span class=\"line\">        number: String</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">`;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Write query resolvers</p>\n<p>Briefly, <code>Query</code> for get request, <code>Mutation</code> for update request.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">const userResolvers = &#123;</span><br><span class=\"line\">    Query: &#123;</span><br><span class=\"line\">        getUser: async (parent, args, context, info) =&gt; await userLoader.getUser(args.id),</span><br><span class=\"line\">        getUsers: async (parent, args, context, info) =&gt; await userLoader.getUsers()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    Mutation: &#123;</span><br><span class=\"line\">        createUser: async (_, args, &#123; dataSources &#125;) =&gt; &#123;</span><br><span class=\"line\">            return await userLoader.createUser(args.userInfo)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Intergrating with your node middleare</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">const apolloServer = new ApolloServer(&#123;</span><br><span class=\"line\">    typeDefs: schema,</span><br><span class=\"line\">    resolvers,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">apolloServer.applyMiddleware(&#123; app: app, path: &apos;/graphql&apos; &#125;);</span><br><span class=\"line\">const port = process.env.PORT || 3333</span><br><span class=\"line\">const server = app.listen(port, () =&gt; console.info(`Listening to http://localhost:$&#123;port&#125;/graphql 🚀`));</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><a href=\"https://github.com/ybleeho/koa_playground\" target=\"_blank\" rel=\"external\">The entire code can be viewed here</a></p>\n<h2 id=\"Q-amp-A\"><a href=\"#Q-amp-A\" class=\"headerlink\" title=\"Q&amp;A\"></a>Q&amp;A</h2><p><a href=\"[https://www.apollographql.com/blog/modularizing-your-graphql-schema-code-d7f71d5ed5f2](https://www.apollographql.com/blog/modularizing-your-graphql-schema-code-d7f71d5ed5f2\">How to  Modularizing your GraphQL?</a>)</p>\n<p><a href=\"https://www.apollographql.com/docs/apollo-server/data/errors/\" target=\"_blank\" rel=\"external\">Error Handling</a></p>\n<p><a href=\"https://www.apollographql.com/docs/apollo-server/security/authentication/\" target=\"_blank\" rel=\"external\">Security</a></p>\n<p><a href=\"https://www.apollographql.com/docs/apollo-server/testing/testing/\" target=\"_blank\" rel=\"external\">Intergration testing</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"What-is-GraphQL\"><a href=\"#What-is-GraphQL\" class=\"headerlink\" title=\"What is GraphQL?\"></a>What is GraphQL?</h2><p>GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools.</p>\n<h2 id=\"Why-use-GraphQL\"><a href=\"#Why-use-GraphQL\" class=\"headerlink\" title=\"Why use GraphQL?\"></a>Why use GraphQL?</h2><p>I often encounter such a situation …</p>\n<p> “Hey , Hu bro there is xx field missing in your xx api…”</p>\n<p> “Hey, there is too many field in your api, i just need xx and xx field, please modify it…”</p>\n<p>“Hey, i have to request three api in this page, would you please combine those in one API?…”</p>\n<p>“Em…..”</p>\n<p>“Hey, Hu bro  the Api doc has not been updated…What paramater do i need to pass?”</p>\n<p>What i want to say is the above problem solved by GraphQL.</p>\n<h2 id=\"What-is-apollo-Graphql\"><a href=\"#What-is-apollo-Graphql\" class=\"headerlink\" title=\"What is apollo Graphql?\"></a>What is apollo Graphql?</h2><p>GraphQL is just a query language. And in order to use it easily, we need to use a platform that will do all the heavy lifting for us. One such platform is provided by Apollo.</p>\n<h2 id=\"Main-process\"><a href=\"#Main-process\" class=\"headerlink\" title=\"Main process?\"></a>Main process?</h2><p>Describe your data</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">type Project &#123;</span><br><span class=\"line\">  name: String</span><br><span class=\"line\">  tagline: String</span><br><span class=\"line\">  contributors: [User]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Ask for what  u What</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  project(name: &quot;GraphQL&quot;) &#123;</span><br><span class=\"line\">    tagline</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Get predictable results</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;project&quot;: &#123;</span><br><span class=\"line\">    &quot;tagline&quot;: &quot;A query language for APIs&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"How-to-use\"><a href=\"#How-to-use\" class=\"headerlink\" title=\"How to use?\"></a>How to use?</h2><ol>\n<li><p>Build a schema</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">const userSchema = gql`</span><br><span class=\"line\">    type Query &#123;</span><br><span class=\"line\">        getUser(id: ID): User</span><br><span class=\"line\">        getUsers: [User]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    type Mutation &#123;</span><br><span class=\"line\">        createUser(userInfo: CreateUserInput): User</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    input CreateUserInput &#123;</span><br><span class=\"line\">        name: String</span><br><span class=\"line\">        age: Int</span><br><span class=\"line\">        address: String</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    type User &#123;</span><br><span class=\"line\">        id: ID</span><br><span class=\"line\">        name: String</span><br><span class=\"line\">        age: Int</span><br><span class=\"line\">        address: String</span><br><span class=\"line\">        number: String</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">`;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Write query resolvers</p>\n<p>Briefly, <code>Query</code> for get request, <code>Mutation</code> for update request.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">const userResolvers = &#123;</span><br><span class=\"line\">    Query: &#123;</span><br><span class=\"line\">        getUser: async (parent, args, context, info) =&gt; await userLoader.getUser(args.id),</span><br><span class=\"line\">        getUsers: async (parent, args, context, info) =&gt; await userLoader.getUsers()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    Mutation: &#123;</span><br><span class=\"line\">        createUser: async (_, args, &#123; dataSources &#125;) =&gt; &#123;</span><br><span class=\"line\">            return await userLoader.createUser(args.userInfo)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Intergrating with your node middleare</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">const apolloServer = new ApolloServer(&#123;</span><br><span class=\"line\">    typeDefs: schema,</span><br><span class=\"line\">    resolvers,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">apolloServer.applyMiddleware(&#123; app: app, path: &apos;/graphql&apos; &#125;);</span><br><span class=\"line\">const port = process.env.PORT || 3333</span><br><span class=\"line\">const server = app.listen(port, () =&gt; console.info(`Listening to http://localhost:$&#123;port&#125;/graphql 🚀`));</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><a href=\"https://github.com/ybleeho/koa_playground\">The entire code can be viewed here</a></p>\n<h2 id=\"Q-amp-A\"><a href=\"#Q-amp-A\" class=\"headerlink\" title=\"Q&amp;A\"></a>Q&amp;A</h2><p><a href=\"[https://www.apollographql.com/blog/modularizing-your-graphql-schema-code-d7f71d5ed5f2](https://www.apollographql.com/blog/modularizing-your-graphql-schema-code-d7f71d5ed5f2\">How to  Modularizing your GraphQL?</a>)</p>\n<p><a href=\"https://www.apollographql.com/docs/apollo-server/data/errors/\">Error Handling</a></p>\n<p><a href=\"https://www.apollographql.com/docs/apollo-server/security/authentication/\">Security</a></p>\n<p><a href=\"https://www.apollographql.com/docs/apollo-server/testing/testing/\">Intergration testing</a></p>\n"},{"title":"aws中国区serverless相关issue总结","date":"2020-04-11T00:46:29.000Z","_content":"\n1. 关于`sam local start-api`很慢的问题\n   \n   解决办法：不用每次pull image， 可以 [skip pull image](https://github.com/awslabs/aws-sam-cli/issues/134#issuecomment-390231341) `sam local start-api --skip-pull-image`。\n   \n   诶， 但mounting还是很慢，有没有[keep docker container warm]([https://github.com/awslabs/aws-sam-cli/issues/239](https://github.com/awslabs/aws-sam-cli/issues/239))的方法，看起来目前issue还是open状态，sam还不支持 keep warm。\n\n2. 关于sam local start-api 的 custom authorizer不能调试问题\n   \n   解决办法：目前来看sam local还不支持这个功能，但可以[使用swagger来支持local的custom authorizers](https://github.com/awslabs/aws-sam-cli/issues/137#issuecomment-380022819)，但使用swagger又会使template bloated，但sam看起来过不久会[支持这个功能](https://github.com/awslabs/aws-sam-cli/issues/137#issuecomment-574256770)。\n\n3. 每次修改代码sam build后才可以local start？\n   \n   解决办法：当代码有小改动或者调试时，可以直接在sam build后的`.aws-sam/build/`的输出文件下面改，此改动会立即生效，不用每次一次小改动后sam build在进行调试。当然这种方法也是有些危险的。有时候忘了把更改在build文件里面的内容复制到source文件进行代替，那么在重新build后原来的build里的更改会被替换掉。当然这种方法在代码的小改动后的调试啊什么的还是非常便捷的。\n\n4. 中国区使用Zappa+Flask\n   \n   问题：zappa是serverless python开发的神器，比使用sam来进行开发，其便捷性和效率提高了不少。但zappa目前还没有[支持中国区的开发](https://github.com/Miserlou/Zappa/issues/1977#issue-543761465)，虽然尝试了其里面[issue](https://github.com/Miserlou/Zappa/issues/1564#issuecomment-457826900)的一些方法更改core文件，虽然部署成功，但因为中国区的功能上有很多阉割的，所以还是会有一系列问题，更改core文件的代码，看起来不太可靠安全。而且Zappa好像还没有支持中国区的打算，可能此路走不通。\n\n5. 未完待续\n   \n   \n   \n","source":"_posts/aws-serverless相关issue总结.md","raw":"---\ntitle: aws中国区serverless相关issue总结\ndate: 2020-04-11 08:46:29\ntags:\n---\n\n1. 关于`sam local start-api`很慢的问题\n   \n   解决办法：不用每次pull image， 可以 [skip pull image](https://github.com/awslabs/aws-sam-cli/issues/134#issuecomment-390231341) `sam local start-api --skip-pull-image`。\n   \n   诶， 但mounting还是很慢，有没有[keep docker container warm]([https://github.com/awslabs/aws-sam-cli/issues/239](https://github.com/awslabs/aws-sam-cli/issues/239))的方法，看起来目前issue还是open状态，sam还不支持 keep warm。\n\n2. 关于sam local start-api 的 custom authorizer不能调试问题\n   \n   解决办法：目前来看sam local还不支持这个功能，但可以[使用swagger来支持local的custom authorizers](https://github.com/awslabs/aws-sam-cli/issues/137#issuecomment-380022819)，但使用swagger又会使template bloated，但sam看起来过不久会[支持这个功能](https://github.com/awslabs/aws-sam-cli/issues/137#issuecomment-574256770)。\n\n3. 每次修改代码sam build后才可以local start？\n   \n   解决办法：当代码有小改动或者调试时，可以直接在sam build后的`.aws-sam/build/`的输出文件下面改，此改动会立即生效，不用每次一次小改动后sam build在进行调试。当然这种方法也是有些危险的。有时候忘了把更改在build文件里面的内容复制到source文件进行代替，那么在重新build后原来的build里的更改会被替换掉。当然这种方法在代码的小改动后的调试啊什么的还是非常便捷的。\n\n4. 中国区使用Zappa+Flask\n   \n   问题：zappa是serverless python开发的神器，比使用sam来进行开发，其便捷性和效率提高了不少。但zappa目前还没有[支持中国区的开发](https://github.com/Miserlou/Zappa/issues/1977#issue-543761465)，虽然尝试了其里面[issue](https://github.com/Miserlou/Zappa/issues/1564#issuecomment-457826900)的一些方法更改core文件，虽然部署成功，但因为中国区的功能上有很多阉割的，所以还是会有一系列问题，更改core文件的代码，看起来不太可靠安全。而且Zappa好像还没有支持中国区的打算，可能此路走不通。\n\n5. 未完待续\n   \n   \n   \n","slug":"aws-serverless相关issue总结","published":1,"updated":"2020-04-11T03:39:05.165Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc748000vu60nxupf3g4m","content":"<ol>\n<li><p>关于<code>sam local start-api</code>很慢的问题</p>\n<p>解决办法：不用每次pull image， 可以 <a href=\"https://github.com/awslabs/aws-sam-cli/issues/134#issuecomment-390231341\" target=\"_blank\" rel=\"external\">skip pull image</a> <code>sam local start-api --skip-pull-image</code>。</p>\n<p>诶， 但mounting还是很慢，有没有<a href=\"[https://github.com/awslabs/aws-sam-cli/issues/239](https://github.com/awslabs/aws-sam-cli/issues/239\">keep docker container warm</a>)的方法，看起来目前issue还是open状态，sam还不支持 keep warm。</p>\n</li>\n<li><p>关于sam local start-api 的 custom authorizer不能调试问题</p>\n<p>解决办法：目前来看sam local还不支持这个功能，但可以<a href=\"https://github.com/awslabs/aws-sam-cli/issues/137#issuecomment-380022819\" target=\"_blank\" rel=\"external\">使用swagger来支持local的custom authorizers</a>，但使用swagger又会使template bloated，但sam看起来过不久会<a href=\"https://github.com/awslabs/aws-sam-cli/issues/137#issuecomment-574256770\" target=\"_blank\" rel=\"external\">支持这个功能</a>。</p>\n</li>\n<li><p>每次修改代码sam build后才可以local start？</p>\n<p>解决办法：当代码有小改动或者调试时，可以直接在sam build后的<code>.aws-sam/build/</code>的输出文件下面改，此改动会立即生效，不用每次一次小改动后sam build在进行调试。当然这种方法也是有些危险的。有时候忘了把更改在build文件里面的内容复制到source文件进行代替，那么在重新build后原来的build里的更改会被替换掉。当然这种方法在代码的小改动后的调试啊什么的还是非常便捷的。</p>\n</li>\n<li><p>中国区使用Zappa+Flask</p>\n<p>问题：zappa是serverless python开发的神器，比使用sam来进行开发，其便捷性和效率提高了不少。但zappa目前还没有<a href=\"https://github.com/Miserlou/Zappa/issues/1977#issue-543761465\" target=\"_blank\" rel=\"external\">支持中国区的开发</a>，虽然尝试了其里面<a href=\"https://github.com/Miserlou/Zappa/issues/1564#issuecomment-457826900\" target=\"_blank\" rel=\"external\">issue</a>的一些方法更改core文件，虽然部署成功，但因为中国区的功能上有很多阉割的，所以还是会有一系列问题，更改core文件的代码，看起来不太可靠安全。而且Zappa好像还没有支持中国区的打算，可能此路走不通。</p>\n</li>\n<li><p>未完待续</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>关于<code>sam local start-api</code>很慢的问题</p>\n<p>解决办法：不用每次pull image， 可以 <a href=\"https://github.com/awslabs/aws-sam-cli/issues/134#issuecomment-390231341\">skip pull image</a> <code>sam local start-api --skip-pull-image</code>。</p>\n<p>诶， 但mounting还是很慢，有没有<a href=\"[https://github.com/awslabs/aws-sam-cli/issues/239](https://github.com/awslabs/aws-sam-cli/issues/239\">keep docker container warm</a>)的方法，看起来目前issue还是open状态，sam还不支持 keep warm。</p>\n</li>\n<li><p>关于sam local start-api 的 custom authorizer不能调试问题</p>\n<p>解决办法：目前来看sam local还不支持这个功能，但可以<a href=\"https://github.com/awslabs/aws-sam-cli/issues/137#issuecomment-380022819\">使用swagger来支持local的custom authorizers</a>，但使用swagger又会使template bloated，但sam看起来过不久会<a href=\"https://github.com/awslabs/aws-sam-cli/issues/137#issuecomment-574256770\">支持这个功能</a>。</p>\n</li>\n<li><p>每次修改代码sam build后才可以local start？</p>\n<p>解决办法：当代码有小改动或者调试时，可以直接在sam build后的<code>.aws-sam/build/</code>的输出文件下面改，此改动会立即生效，不用每次一次小改动后sam build在进行调试。当然这种方法也是有些危险的。有时候忘了把更改在build文件里面的内容复制到source文件进行代替，那么在重新build后原来的build里的更改会被替换掉。当然这种方法在代码的小改动后的调试啊什么的还是非常便捷的。</p>\n</li>\n<li><p>中国区使用Zappa+Flask</p>\n<p>问题：zappa是serverless python开发的神器，比使用sam来进行开发，其便捷性和效率提高了不少。但zappa目前还没有<a href=\"https://github.com/Miserlou/Zappa/issues/1977#issue-543761465\">支持中国区的开发</a>，虽然尝试了其里面<a href=\"https://github.com/Miserlou/Zappa/issues/1564#issuecomment-457826900\">issue</a>的一些方法更改core文件，虽然部署成功，但因为中国区的功能上有很多阉割的，所以还是会有一系列问题，更改core文件的代码，看起来不太可靠安全。而且Zappa好像还没有支持中国区的打算，可能此路走不通。</p>\n</li>\n<li><p>未完待续</p>\n</li>\n</ol>\n"},{"title":"Jwts vs Sessions总结","date":"2018-09-26T09:58:08.000Z","_content":"\n## Jwts vs Sessions\n\n### 1.可扩展性\nsession是有状态的，token是无状态的，所以如果多台服务器上的应用，单点登录，基于token 的验证是有优势的。\n构建但服务器应用，不需要RESTful API的，那么session也不错。\n### 2.安全性\njwt最好使用https\n### 3.RESTful\n无状态，token更契合RESTful\n### 4.性能\n当数据少时没多大差别，但一旦claim多，开销比session大得多。所以session是有优势的。\n（https://scotch.io/bar-talk/why-jwts-suck-as-session-tokens ）\nIf we store the ID in a cookie, the size is 6 bytes. If store the ID in a JWT ,the size has now inflated to 304 bytes.\n\n### 5.实效性\n\nsession是可以手动删除的，这也是比token的优势。\n\n解决办法：token存入数据库，可以实现token实效的功能，比如只能有一个用于登陆的状态，那么把token存入数据库，每次登陆更新token。\n\n\n### 参考链接：\nhttps://cnodejs.org/topic/5b568ec12860af042a217822\n\nhttps://juejin.im/post/5a437441f265da43294e54c3\n\nhttps://scotch.io/bar-talk/why-jwts-suck-as-session-tokens （主要描述token的弊端）\n\n---\n\n\n","source":"_posts/after-finishing-sos-project.md","raw":"---\ntitle: Jwts vs Sessions总结\ndate: 2018-09-26 17:58:08\n---\n\n## Jwts vs Sessions\n\n### 1.可扩展性\nsession是有状态的，token是无状态的，所以如果多台服务器上的应用，单点登录，基于token 的验证是有优势的。\n构建但服务器应用，不需要RESTful API的，那么session也不错。\n### 2.安全性\njwt最好使用https\n### 3.RESTful\n无状态，token更契合RESTful\n### 4.性能\n当数据少时没多大差别，但一旦claim多，开销比session大得多。所以session是有优势的。\n（https://scotch.io/bar-talk/why-jwts-suck-as-session-tokens ）\nIf we store the ID in a cookie, the size is 6 bytes. If store the ID in a JWT ,the size has now inflated to 304 bytes.\n\n### 5.实效性\n\nsession是可以手动删除的，这也是比token的优势。\n\n解决办法：token存入数据库，可以实现token实效的功能，比如只能有一个用于登陆的状态，那么把token存入数据库，每次登陆更新token。\n\n\n### 参考链接：\nhttps://cnodejs.org/topic/5b568ec12860af042a217822\n\nhttps://juejin.im/post/5a437441f265da43294e54c3\n\nhttps://scotch.io/bar-talk/why-jwts-suck-as-session-tokens （主要描述token的弊端）\n\n---\n\n\n","slug":"after-finishing-sos-project","published":1,"updated":"2019-04-24T14:33:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc748000wu60nerm75ur5","content":"<h2 id=\"Jwts-vs-Sessions\"><a href=\"#Jwts-vs-Sessions\" class=\"headerlink\" title=\"Jwts vs Sessions\"></a>Jwts vs Sessions</h2><h3 id=\"1-可扩展性\"><a href=\"#1-可扩展性\" class=\"headerlink\" title=\"1.可扩展性\"></a>1.可扩展性</h3><p>session是有状态的，token是无状态的，所以如果多台服务器上的应用，单点登录，基于token 的验证是有优势的。<br>构建但服务器应用，不需要RESTful API的，那么session也不错。</p>\n<h3 id=\"2-安全性\"><a href=\"#2-安全性\" class=\"headerlink\" title=\"2.安全性\"></a>2.安全性</h3><p>jwt最好使用https</p>\n<h3 id=\"3-RESTful\"><a href=\"#3-RESTful\" class=\"headerlink\" title=\"3.RESTful\"></a>3.RESTful</h3><p>无状态，token更契合RESTful</p>\n<h3 id=\"4-性能\"><a href=\"#4-性能\" class=\"headerlink\" title=\"4.性能\"></a>4.性能</h3><p>当数据少时没多大差别，但一旦claim多，开销比session大得多。所以session是有优势的。<br>（<a href=\"https://scotch.io/bar-talk/why-jwts-suck-as-session-tokens\" target=\"_blank\" rel=\"external\">https://scotch.io/bar-talk/why-jwts-suck-as-session-tokens</a> ）<br>If we store the ID in a cookie, the size is 6 bytes. If store the ID in a JWT ,the size has now inflated to 304 bytes.</p>\n<h3 id=\"5-实效性\"><a href=\"#5-实效性\" class=\"headerlink\" title=\"5.实效性\"></a>5.实效性</h3><p>session是可以手动删除的，这也是比token的优势。</p>\n<p>解决办法：token存入数据库，可以实现token实效的功能，比如只能有一个用于登陆的状态，那么把token存入数据库，每次登陆更新token。</p>\n<h3 id=\"参考链接：\"><a href=\"#参考链接：\" class=\"headerlink\" title=\"参考链接：\"></a>参考链接：</h3><p><a href=\"https://cnodejs.org/topic/5b568ec12860af042a217822\" target=\"_blank\" rel=\"external\">https://cnodejs.org/topic/5b568ec12860af042a217822</a></p>\n<p><a href=\"https://juejin.im/post/5a437441f265da43294e54c3\" target=\"_blank\" rel=\"external\">https://juejin.im/post/5a437441f265da43294e54c3</a></p>\n<p><a href=\"https://scotch.io/bar-talk/why-jwts-suck-as-session-tokens\" target=\"_blank\" rel=\"external\">https://scotch.io/bar-talk/why-jwts-suck-as-session-tokens</a> （主要描述token的弊端）</p>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Jwts-vs-Sessions\"><a href=\"#Jwts-vs-Sessions\" class=\"headerlink\" title=\"Jwts vs Sessions\"></a>Jwts vs Sessions</h2><h3 id=\"1-可扩展性\"><a href=\"#1-可扩展性\" class=\"headerlink\" title=\"1.可扩展性\"></a>1.可扩展性</h3><p>session是有状态的，token是无状态的，所以如果多台服务器上的应用，单点登录，基于token 的验证是有优势的。<br>构建但服务器应用，不需要RESTful API的，那么session也不错。</p>\n<h3 id=\"2-安全性\"><a href=\"#2-安全性\" class=\"headerlink\" title=\"2.安全性\"></a>2.安全性</h3><p>jwt最好使用https</p>\n<h3 id=\"3-RESTful\"><a href=\"#3-RESTful\" class=\"headerlink\" title=\"3.RESTful\"></a>3.RESTful</h3><p>无状态，token更契合RESTful</p>\n<h3 id=\"4-性能\"><a href=\"#4-性能\" class=\"headerlink\" title=\"4.性能\"></a>4.性能</h3><p>当数据少时没多大差别，但一旦claim多，开销比session大得多。所以session是有优势的。<br>（<a href=\"https://scotch.io/bar-talk/why-jwts-suck-as-session-tokens\">https://scotch.io/bar-talk/why-jwts-suck-as-session-tokens</a> ）<br>If we store the ID in a cookie, the size is 6 bytes. If store the ID in a JWT ,the size has now inflated to 304 bytes.</p>\n<h3 id=\"5-实效性\"><a href=\"#5-实效性\" class=\"headerlink\" title=\"5.实效性\"></a>5.实效性</h3><p>session是可以手动删除的，这也是比token的优势。</p>\n<p>解决办法：token存入数据库，可以实现token实效的功能，比如只能有一个用于登陆的状态，那么把token存入数据库，每次登陆更新token。</p>\n<h3 id=\"参考链接：\"><a href=\"#参考链接：\" class=\"headerlink\" title=\"参考链接：\"></a>参考链接：</h3><p><a href=\"https://cnodejs.org/topic/5b568ec12860af042a217822\">https://cnodejs.org/topic/5b568ec12860af042a217822</a></p>\n<p><a href=\"https://juejin.im/post/5a437441f265da43294e54c3\">https://juejin.im/post/5a437441f265da43294e54c3</a></p>\n<p><a href=\"https://scotch.io/bar-talk/why-jwts-suck-as-session-tokens\">https://scotch.io/bar-talk/why-jwts-suck-as-session-tokens</a> （主要描述token的弊端）</p>\n<hr>\n"},{"title":"Sequelize与async联合使用关于warning:a promise was created but was not returned from it的思考","date":"2019-05-18T13:40:05.000Z","_content":"\n当Sequelize查询语句与async的waterfall，eachLimit等语句一起执行的时候发现一直有\n```\n(node:22810) Warning: a promise was created in a handler at /Users/hu/WebstormProjects/playground/server/server.js:126:55 but was not returned from it, see http://goo.gl/rRqMUw\n    at Function.Promise.attempt.Promise.try (/Users/hu/WebstormProjects/playground/server/node_modules/bluebird/js/release/method.js:29:9)\n\n```\n这样的warning语句，当有eachLimit的循环多了以后，如执行cronjob的大量查询语句的时候\n这些warning就变得更多了，所以决定查找这个warning的原因。\n\n```\n async.waterfall([\n        function (cb) {\n             User.findOne({where: {id: 1}}).then(one=>cb(null, one)).catch(cb)\n        },\n        function (one, cb) {\n             User.findOne({where: {id: 1}}).then(two=>cb(null ,two)).catch(cb)\n        },\n    ],(err,two)=>{\n        if(err) {\n            console.log('result error:',err)\n        }\n    })\n```\n这是一段产生此warning的一段demo代码，看似从代码上也找不出什么问题。\n首先warning是在第一个find语句产生的，第二个find语句没有产生，然后我试着把第一个find后面的catch删除变成如下\n```\n async.waterfall([\n        function (cb) {\n             User.findOne({where: {id: 1}}).then(one=>cb(null, one))\n        },\n        function (one, cb) {\n             User.findOne({where: {id: 1}}).then(two=>cb(null ,two)).catch(cb)\n        },\n    ],(err,two)=>{\n        if(err) {\n            console.log('result error:',err)\n        }\n    })\n```\n然后发现warning也消失了。但是虽然移除了warning但是对于查询语句不进行catch也不是办法。\n那是不是async的bug呢？在查找了大量的issue之后也没发现什么大问题。。。。\n那是不是sequelize查询语句的问题呢？然后试着把查询语句换成如下代码\n```\nvar promise1 = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        resolve('resolve');\n    }, 300);\n});\nasync.waterfall([\n    function (cb) {\n        promise1.then(one=>cb(null, one)).catch(cb)\n    },\n    function (one, cb) {\n        promise1.then(two=>cb(null ,two)).catch(cb)\n    },\n],(err,two)=>{\n    if(err) {\n        console.log('result error:',err)\n    }\n\n})\n```\n果然warning消失了，也就是说是sequelize查询语句的warning。然后在sequelize里面查阅相关的\nissue找到了一些线索和启发\nhttps://github.com/sequelize/sequelize/pull/4862#issuecomment-174735567\n没想到在waterfall里面上一个查询语句仅仅只有一个cb是不够的，得手动告知bluebird我要返回的东西。\n没有warning后的代码\n```\n async.waterfall([\n        function (cb) {\n             User.findOne({where: {id: 1}}).then(one=>{cb(null, one);return null;}).catch(cb)\n        },\n        function (one, cb) {\n             User.findOne({where: {id: 1}}).then(two=>cb(null ,two)).catch(cb)\n        },\n    ],(err,two)=>{\n        if(err) {\n            console.log('result error:',err)\n        }\n    })\n```\n","source":"_posts/sequelize-关于warning-a-promise-was-created-but-was-not-returned-from-it.md","raw":"---\ntitle: 'Sequelize与async联合使用关于warning:a promise was created but was not returned from it的思考'\ndate: 2019-05-18 21:40:05\ntags:\n---\n\n当Sequelize查询语句与async的waterfall，eachLimit等语句一起执行的时候发现一直有\n```\n(node:22810) Warning: a promise was created in a handler at /Users/hu/WebstormProjects/playground/server/server.js:126:55 but was not returned from it, see http://goo.gl/rRqMUw\n    at Function.Promise.attempt.Promise.try (/Users/hu/WebstormProjects/playground/server/node_modules/bluebird/js/release/method.js:29:9)\n\n```\n这样的warning语句，当有eachLimit的循环多了以后，如执行cronjob的大量查询语句的时候\n这些warning就变得更多了，所以决定查找这个warning的原因。\n\n```\n async.waterfall([\n        function (cb) {\n             User.findOne({where: {id: 1}}).then(one=>cb(null, one)).catch(cb)\n        },\n        function (one, cb) {\n             User.findOne({where: {id: 1}}).then(two=>cb(null ,two)).catch(cb)\n        },\n    ],(err,two)=>{\n        if(err) {\n            console.log('result error:',err)\n        }\n    })\n```\n这是一段产生此warning的一段demo代码，看似从代码上也找不出什么问题。\n首先warning是在第一个find语句产生的，第二个find语句没有产生，然后我试着把第一个find后面的catch删除变成如下\n```\n async.waterfall([\n        function (cb) {\n             User.findOne({where: {id: 1}}).then(one=>cb(null, one))\n        },\n        function (one, cb) {\n             User.findOne({where: {id: 1}}).then(two=>cb(null ,two)).catch(cb)\n        },\n    ],(err,two)=>{\n        if(err) {\n            console.log('result error:',err)\n        }\n    })\n```\n然后发现warning也消失了。但是虽然移除了warning但是对于查询语句不进行catch也不是办法。\n那是不是async的bug呢？在查找了大量的issue之后也没发现什么大问题。。。。\n那是不是sequelize查询语句的问题呢？然后试着把查询语句换成如下代码\n```\nvar promise1 = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        resolve('resolve');\n    }, 300);\n});\nasync.waterfall([\n    function (cb) {\n        promise1.then(one=>cb(null, one)).catch(cb)\n    },\n    function (one, cb) {\n        promise1.then(two=>cb(null ,two)).catch(cb)\n    },\n],(err,two)=>{\n    if(err) {\n        console.log('result error:',err)\n    }\n\n})\n```\n果然warning消失了，也就是说是sequelize查询语句的warning。然后在sequelize里面查阅相关的\nissue找到了一些线索和启发\nhttps://github.com/sequelize/sequelize/pull/4862#issuecomment-174735567\n没想到在waterfall里面上一个查询语句仅仅只有一个cb是不够的，得手动告知bluebird我要返回的东西。\n没有warning后的代码\n```\n async.waterfall([\n        function (cb) {\n             User.findOne({where: {id: 1}}).then(one=>{cb(null, one);return null;}).catch(cb)\n        },\n        function (one, cb) {\n             User.findOne({where: {id: 1}}).then(two=>cb(null ,two)).catch(cb)\n        },\n    ],(err,two)=>{\n        if(err) {\n            console.log('result error:',err)\n        }\n    })\n```\n","slug":"sequelize-关于warning-a-promise-was-created-but-was-not-returned-from-it","published":1,"updated":"2019-05-18T14:40:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc749000xu60nxwccspgp","content":"<p>当Sequelize查询语句与async的waterfall，eachLimit等语句一起执行的时候发现一直有<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">(node:22810) Warning: a promise was created in a handler at /Users/hu/WebstormProjects/playground/server/server.js:126:55 but was not returned from it, see http://goo.gl/rRqMUw</span><br><span class=\"line\">    at Function.Promise.attempt.Promise.try (/Users/hu/WebstormProjects/playground/server/node_modules/bluebird/js/release/method.js:29:9)</span><br></pre></td></tr></table></figure></p>\n<p>这样的warning语句，当有eachLimit的循环多了以后，如执行cronjob的大量查询语句的时候<br>这些warning就变得更多了，所以决定查找这个warning的原因。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">async.waterfall([</span><br><span class=\"line\">       function (cb) &#123;</span><br><span class=\"line\">            User.findOne(&#123;where: &#123;id: 1&#125;&#125;).then(one=&gt;cb(null, one)).catch(cb)</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">       function (one, cb) &#123;</span><br><span class=\"line\">            User.findOne(&#123;where: &#123;id: 1&#125;&#125;).then(two=&gt;cb(null ,two)).catch(cb)</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">   ],(err,two)=&gt;&#123;</span><br><span class=\"line\">       if(err) &#123;</span><br><span class=\"line\">           console.log(&apos;result error:&apos;,err)</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;)</span><br></pre></td></tr></table></figure>\n<p>这是一段产生此warning的一段demo代码，看似从代码上也找不出什么问题。<br>首先warning是在第一个find语句产生的，第二个find语句没有产生，然后我试着把第一个find后面的catch删除变成如下<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">async.waterfall([</span><br><span class=\"line\">       function (cb) &#123;</span><br><span class=\"line\">            User.findOne(&#123;where: &#123;id: 1&#125;&#125;).then(one=&gt;cb(null, one))</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">       function (one, cb) &#123;</span><br><span class=\"line\">            User.findOne(&#123;where: &#123;id: 1&#125;&#125;).then(two=&gt;cb(null ,two)).catch(cb)</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">   ],(err,two)=&gt;&#123;</span><br><span class=\"line\">       if(err) &#123;</span><br><span class=\"line\">           console.log(&apos;result error:&apos;,err)</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;)</span><br></pre></td></tr></table></figure></p>\n<p>然后发现warning也消失了。但是虽然移除了warning但是对于查询语句不进行catch也不是办法。<br>那是不是async的bug呢？在查找了大量的issue之后也没发现什么大问题。。。。<br>那是不是sequelize查询语句的问题呢？然后试着把查询语句换成如下代码<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">var promise1 = new Promise(function(resolve, reject) &#123;</span><br><span class=\"line\">    setTimeout(function() &#123;</span><br><span class=\"line\">        resolve(&apos;resolve&apos;);</span><br><span class=\"line\">    &#125;, 300);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">async.waterfall([</span><br><span class=\"line\">    function (cb) &#123;</span><br><span class=\"line\">        promise1.then(one=&gt;cb(null, one)).catch(cb)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    function (one, cb) &#123;</span><br><span class=\"line\">        promise1.then(two=&gt;cb(null ,two)).catch(cb)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">],(err,two)=&gt;&#123;</span><br><span class=\"line\">    if(err) &#123;</span><br><span class=\"line\">        console.log(&apos;result error:&apos;,err)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>果然warning消失了，也就是说是sequelize查询语句的warning。然后在sequelize里面查阅相关的<br>issue找到了一些线索和启发<br><a href=\"https://github.com/sequelize/sequelize/pull/4862#issuecomment-174735567\" target=\"_blank\" rel=\"external\">https://github.com/sequelize/sequelize/pull/4862#issuecomment-174735567</a><br>没想到在waterfall里面上一个查询语句仅仅只有一个cb是不够的，得手动告知bluebird我要返回的东西。<br>没有warning后的代码<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">async.waterfall([</span><br><span class=\"line\">       function (cb) &#123;</span><br><span class=\"line\">            User.findOne(&#123;where: &#123;id: 1&#125;&#125;).then(one=&gt;&#123;cb(null, one);return null;&#125;).catch(cb)</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">       function (one, cb) &#123;</span><br><span class=\"line\">            User.findOne(&#123;where: &#123;id: 1&#125;&#125;).then(two=&gt;cb(null ,two)).catch(cb)</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">   ],(err,two)=&gt;&#123;</span><br><span class=\"line\">       if(err) &#123;</span><br><span class=\"line\">           console.log(&apos;result error:&apos;,err)</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;)</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>当Sequelize查询语句与async的waterfall，eachLimit等语句一起执行的时候发现一直有<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">(node:22810) Warning: a promise was created in a handler at /Users/hu/WebstormProjects/playground/server/server.js:126:55 but was not returned from it, see http://goo.gl/rRqMUw</span><br><span class=\"line\">    at Function.Promise.attempt.Promise.try (/Users/hu/WebstormProjects/playground/server/node_modules/bluebird/js/release/method.js:29:9)</span><br></pre></td></tr></table></figure></p>\n<p>这样的warning语句，当有eachLimit的循环多了以后，如执行cronjob的大量查询语句的时候<br>这些warning就变得更多了，所以决定查找这个warning的原因。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">async.waterfall([</span><br><span class=\"line\">       function (cb) &#123;</span><br><span class=\"line\">            User.findOne(&#123;where: &#123;id: 1&#125;&#125;).then(one=&gt;cb(null, one)).catch(cb)</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">       function (one, cb) &#123;</span><br><span class=\"line\">            User.findOne(&#123;where: &#123;id: 1&#125;&#125;).then(two=&gt;cb(null ,two)).catch(cb)</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">   ],(err,two)=&gt;&#123;</span><br><span class=\"line\">       if(err) &#123;</span><br><span class=\"line\">           console.log(&apos;result error:&apos;,err)</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;)</span><br></pre></td></tr></table></figure>\n<p>这是一段产生此warning的一段demo代码，看似从代码上也找不出什么问题。<br>首先warning是在第一个find语句产生的，第二个find语句没有产生，然后我试着把第一个find后面的catch删除变成如下<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">async.waterfall([</span><br><span class=\"line\">       function (cb) &#123;</span><br><span class=\"line\">            User.findOne(&#123;where: &#123;id: 1&#125;&#125;).then(one=&gt;cb(null, one))</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">       function (one, cb) &#123;</span><br><span class=\"line\">            User.findOne(&#123;where: &#123;id: 1&#125;&#125;).then(two=&gt;cb(null ,two)).catch(cb)</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">   ],(err,two)=&gt;&#123;</span><br><span class=\"line\">       if(err) &#123;</span><br><span class=\"line\">           console.log(&apos;result error:&apos;,err)</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;)</span><br></pre></td></tr></table></figure></p>\n<p>然后发现warning也消失了。但是虽然移除了warning但是对于查询语句不进行catch也不是办法。<br>那是不是async的bug呢？在查找了大量的issue之后也没发现什么大问题。。。。<br>那是不是sequelize查询语句的问题呢？然后试着把查询语句换成如下代码<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">var promise1 = new Promise(function(resolve, reject) &#123;</span><br><span class=\"line\">    setTimeout(function() &#123;</span><br><span class=\"line\">        resolve(&apos;resolve&apos;);</span><br><span class=\"line\">    &#125;, 300);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">async.waterfall([</span><br><span class=\"line\">    function (cb) &#123;</span><br><span class=\"line\">        promise1.then(one=&gt;cb(null, one)).catch(cb)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    function (one, cb) &#123;</span><br><span class=\"line\">        promise1.then(two=&gt;cb(null ,two)).catch(cb)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">],(err,two)=&gt;&#123;</span><br><span class=\"line\">    if(err) &#123;</span><br><span class=\"line\">        console.log(&apos;result error:&apos;,err)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>果然warning消失了，也就是说是sequelize查询语句的warning。然后在sequelize里面查阅相关的<br>issue找到了一些线索和启发<br><a href=\"https://github.com/sequelize/sequelize/pull/4862#issuecomment-174735567\">https://github.com/sequelize/sequelize/pull/4862#issuecomment-174735567</a><br>没想到在waterfall里面上一个查询语句仅仅只有一个cb是不够的，得手动告知bluebird我要返回的东西。<br>没有warning后的代码<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">async.waterfall([</span><br><span class=\"line\">       function (cb) &#123;</span><br><span class=\"line\">            User.findOne(&#123;where: &#123;id: 1&#125;&#125;).then(one=&gt;&#123;cb(null, one);return null;&#125;).catch(cb)</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">       function (one, cb) &#123;</span><br><span class=\"line\">            User.findOne(&#123;where: &#123;id: 1&#125;&#125;).then(two=&gt;cb(null ,two)).catch(cb)</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">   ],(err,two)=&gt;&#123;</span><br><span class=\"line\">       if(err) &#123;</span><br><span class=\"line\">           console.log(&apos;result error:&apos;,err)</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;)</span><br></pre></td></tr></table></figure></p>\n"},{"title":"jenkins deploy node project","date":"2020-07-30T15:11:41.000Z","_content":"\n### Install jenkins\n\n```shell\ndocker pull jenkins/jenkins\n```\n\n### Start jenkins container\n\n```shell\n# create /home/jenkins_home file and chage mode\n$ mkdir /var/jenkins_home\n$ sudo chmod 777 /var/jenkins_home\n\n# start jenkins container\n$ docker run -d -p 8080:8080 -p 50000:50000 -v /var/jenkins_home:/var/jenkins_home -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker -v /etc/localtime:/etc/localtime --name jenkins docker.io/jenkins/jenkins\n\n-d                                后台运行镜像\n-p 8080:8080                      将镜像的8080端口映射到服务器的8080端口(服务器端口：镜像端口)\n-p 50000:50000                    基于 JNLP 的 Jenkins 代理通过 TCP 端口 50000 与 Jenkins master 进行通信,所以也要映射\n-v /var/jenkins_home:/var/jenkins_home                /var/jenkins_home目录为jenkins工作目录，我们将硬盘上的一个目录挂载到这个位置，方便后续更新镜像后继续使用原来的工作目录。\n-v /var/run/docker.sock:/var/run/docker.sock          jenkins容器内也需要docker来执行任务，所以这里将docker命令也映射到容器里\n-v /usr/bin/docker:/usr/bin/docker                    将docker命令映射到容器内\n-v /etc/localtime:/etc/localtime  让容器使用和服务器同样的时间设置。\n--name myjenkins                  给容器起一个别名\ndocker.io/jenkins/jenkins         使用刚下载的镜像安装\n# reference\n# https://juejin.im/post/6844904035326099470\n# https://www.jenkins.io/doc/book/installing/\n```\n\n### Jenkins config\n\n#### Initialize\n\nOpen http://host:8080 and input initial password, then install recommended plugin.\n\n```shell\n$ docker exec -it jenkins bash\n$ cat /var/jenkins_home/secrets/initialAdminPassword\n```\n\nWhen installing plugins is slow , change the Jenkins-> Manage Jenkins -> Manage plugins -> Advanced -> set Update Site URL as  http://mirror.esuni.jp/jenkins/updates/update-center.json\n\n#### SSH\n\nConfig ssh key, in order to let jenkis pull code from git if needed.\n\n#### Create jenkins item\n\n1. Create a freestyle project\n\n2. General -> Select GitHub project and put the project url\n\n3. Source Code Management -> Select Git and put the project url\n\n4. Build -> Add build step -> Esecute shell\n   \n   ```shell\n   docker build --tag playground:$BUILD_NUMBER .\n   docker stop playground && docker rm playground\n   docker run -p 3000:3000 --name playground playground:$BUILD_NUMBER\n   ```\n\n    5. Save and build the item\n\n注意：不要使用默认源安装docker， 不要使用默认源安装docker， 不要使用默认源安装docker， 不然会遇到下面的error\n\n```\njenkins /usr/bin/docker: 2: .: Can't open /etc/sysconfig/docker\n\n//\n\nYou don't have either docker-client or docker-client-latest installed. Please install either one and retry\n```\n\n if this `Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post` error occurs , run `chmod 777 /var/run/docker.sock`\n","source":"_posts/jenkins-deploy-node-project.md","raw":"---\ntitle: jenkins deploy node project\ndate: 2020-07-30 23:11:41\ntags:\n---\n\n### Install jenkins\n\n```shell\ndocker pull jenkins/jenkins\n```\n\n### Start jenkins container\n\n```shell\n# create /home/jenkins_home file and chage mode\n$ mkdir /var/jenkins_home\n$ sudo chmod 777 /var/jenkins_home\n\n# start jenkins container\n$ docker run -d -p 8080:8080 -p 50000:50000 -v /var/jenkins_home:/var/jenkins_home -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker -v /etc/localtime:/etc/localtime --name jenkins docker.io/jenkins/jenkins\n\n-d                                后台运行镜像\n-p 8080:8080                      将镜像的8080端口映射到服务器的8080端口(服务器端口：镜像端口)\n-p 50000:50000                    基于 JNLP 的 Jenkins 代理通过 TCP 端口 50000 与 Jenkins master 进行通信,所以也要映射\n-v /var/jenkins_home:/var/jenkins_home                /var/jenkins_home目录为jenkins工作目录，我们将硬盘上的一个目录挂载到这个位置，方便后续更新镜像后继续使用原来的工作目录。\n-v /var/run/docker.sock:/var/run/docker.sock          jenkins容器内也需要docker来执行任务，所以这里将docker命令也映射到容器里\n-v /usr/bin/docker:/usr/bin/docker                    将docker命令映射到容器内\n-v /etc/localtime:/etc/localtime  让容器使用和服务器同样的时间设置。\n--name myjenkins                  给容器起一个别名\ndocker.io/jenkins/jenkins         使用刚下载的镜像安装\n# reference\n# https://juejin.im/post/6844904035326099470\n# https://www.jenkins.io/doc/book/installing/\n```\n\n### Jenkins config\n\n#### Initialize\n\nOpen http://host:8080 and input initial password, then install recommended plugin.\n\n```shell\n$ docker exec -it jenkins bash\n$ cat /var/jenkins_home/secrets/initialAdminPassword\n```\n\nWhen installing plugins is slow , change the Jenkins-> Manage Jenkins -> Manage plugins -> Advanced -> set Update Site URL as  http://mirror.esuni.jp/jenkins/updates/update-center.json\n\n#### SSH\n\nConfig ssh key, in order to let jenkis pull code from git if needed.\n\n#### Create jenkins item\n\n1. Create a freestyle project\n\n2. General -> Select GitHub project and put the project url\n\n3. Source Code Management -> Select Git and put the project url\n\n4. Build -> Add build step -> Esecute shell\n   \n   ```shell\n   docker build --tag playground:$BUILD_NUMBER .\n   docker stop playground && docker rm playground\n   docker run -p 3000:3000 --name playground playground:$BUILD_NUMBER\n   ```\n\n    5. Save and build the item\n\n注意：不要使用默认源安装docker， 不要使用默认源安装docker， 不要使用默认源安装docker， 不然会遇到下面的error\n\n```\njenkins /usr/bin/docker: 2: .: Can't open /etc/sysconfig/docker\n\n//\n\nYou don't have either docker-client or docker-client-latest installed. Please install either one and retry\n```\n\n if this `Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post` error occurs , run `chmod 777 /var/run/docker.sock`\n","slug":"jenkins-deploy-node-project","published":1,"updated":"2020-08-09T04:52:56.440Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmitc74a000yu60nayxseq9b","content":"<h3 id=\"Install-jenkins\"><a href=\"#Install-jenkins\" class=\"headerlink\" title=\"Install jenkins\"></a>Install jenkins</h3><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker pull jenkins/jenkins</span><br></pre></td></tr></table></figure>\n<h3 id=\"Start-jenkins-container\"><a href=\"#Start-jenkins-container\" class=\"headerlink\" title=\"Start jenkins container\"></a>Start jenkins container</h3><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> create /home/jenkins_home file and chage mode</span><br><span class=\"line\"><span class=\"meta\">$</span> mkdir /var/jenkins_home</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo chmod 777 /var/jenkins_home</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> start jenkins container</span><br><span class=\"line\"><span class=\"meta\">$</span> docker run -d -p 8080:8080 -p 50000:50000 -v /var/jenkins_home:/var/jenkins_home -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker -v /etc/localtime:/etc/localtime --name jenkins docker.io/jenkins/jenkins</span><br><span class=\"line\"></span><br><span class=\"line\">-d                                后台运行镜像</span><br><span class=\"line\">-p 8080:8080                      将镜像的8080端口映射到服务器的8080端口(服务器端口：镜像端口)</span><br><span class=\"line\">-p 50000:50000                    基于 JNLP 的 Jenkins 代理通过 TCP 端口 50000 与 Jenkins master 进行通信,所以也要映射</span><br><span class=\"line\">-v /var/jenkins_home:/var/jenkins_home                /var/jenkins_home目录为jenkins工作目录，我们将硬盘上的一个目录挂载到这个位置，方便后续更新镜像后继续使用原来的工作目录。</span><br><span class=\"line\">-v /var/run/docker.sock:/var/run/docker.sock          jenkins容器内也需要docker来执行任务，所以这里将docker命令也映射到容器里</span><br><span class=\"line\">-v /usr/bin/docker:/usr/bin/docker                    将docker命令映射到容器内</span><br><span class=\"line\">-v /etc/localtime:/etc/localtime  让容器使用和服务器同样的时间设置。</span><br><span class=\"line\">--name myjenkins                  给容器起一个别名</span><br><span class=\"line\">docker.io/jenkins/jenkins         使用刚下载的镜像安装</span><br><span class=\"line\"><span class=\"meta\">#</span> reference</span><br><span class=\"line\"><span class=\"meta\">#</span> https://juejin.im/post/6844904035326099470</span><br><span class=\"line\"><span class=\"meta\">#</span> https://www.jenkins.io/doc/book/installing/</span><br></pre></td></tr></table></figure>\n<h3 id=\"Jenkins-config\"><a href=\"#Jenkins-config\" class=\"headerlink\" title=\"Jenkins config\"></a>Jenkins config</h3><h4 id=\"Initialize\"><a href=\"#Initialize\" class=\"headerlink\" title=\"Initialize\"></a>Initialize</h4><p>Open <a href=\"http://host:8080\" target=\"_blank\" rel=\"external\">http://host:8080</a> and input initial password, then install recommended plugin.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> docker exec -it jenkins bash</span><br><span class=\"line\"><span class=\"meta\">$</span> cat /var/jenkins_home/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure>\n<p>When installing plugins is slow , change the Jenkins-&gt; Manage Jenkins -&gt; Manage plugins -&gt; Advanced -&gt; set Update Site URL as  <a href=\"http://mirror.esuni.jp/jenkins/updates/update-center.json\" target=\"_blank\" rel=\"external\">http://mirror.esuni.jp/jenkins/updates/update-center.json</a></p>\n<h4 id=\"SSH\"><a href=\"#SSH\" class=\"headerlink\" title=\"SSH\"></a>SSH</h4><p>Config ssh key, in order to let jenkis pull code from git if needed.</p>\n<h4 id=\"Create-jenkins-item\"><a href=\"#Create-jenkins-item\" class=\"headerlink\" title=\"Create jenkins item\"></a>Create jenkins item</h4><ol>\n<li><p>Create a freestyle project</p>\n</li>\n<li><p>General -&gt; Select GitHub project and put the project url</p>\n</li>\n<li><p>Source Code Management -&gt; Select Git and put the project url</p>\n</li>\n<li><p>Build -&gt; Add build step -&gt; Esecute shell</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker build --tag playground:$BUILD_NUMBER .</span><br><span class=\"line\">docker stop playground &amp;&amp; docker rm playground</span><br><span class=\"line\">docker run -p 3000:3000 --name playground playground:$BUILD_NUMBER</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>Save and build the item</li>\n</ol>\n</li>\n</ol>\n<p>注意：不要使用默认源安装docker， 不要使用默认源安装docker， 不要使用默认源安装docker， 不然会遇到下面的error</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">jenkins /usr/bin/docker: 2: .: Can&apos;t open /etc/sysconfig/docker</span><br><span class=\"line\"></span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\">You don&apos;t have either docker-client or docker-client-latest installed. Please install either one and retry</span><br></pre></td></tr></table></figure>\n<p> if this <code>Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post</code> error occurs , run <code>chmod 777 /var/run/docker.sock</code></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Install-jenkins\"><a href=\"#Install-jenkins\" class=\"headerlink\" title=\"Install jenkins\"></a>Install jenkins</h3><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker pull jenkins/jenkins</span><br></pre></td></tr></table></figure>\n<h3 id=\"Start-jenkins-container\"><a href=\"#Start-jenkins-container\" class=\"headerlink\" title=\"Start jenkins container\"></a>Start jenkins container</h3><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> create /home/jenkins_home file and chage mode</span><br><span class=\"line\"><span class=\"meta\">$</span> mkdir /var/jenkins_home</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo chmod 777 /var/jenkins_home</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> start jenkins container</span><br><span class=\"line\"><span class=\"meta\">$</span> docker run -d -p 8080:8080 -p 50000:50000 -v /var/jenkins_home:/var/jenkins_home -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker -v /etc/localtime:/etc/localtime --name jenkins docker.io/jenkins/jenkins</span><br><span class=\"line\"></span><br><span class=\"line\">-d                                后台运行镜像</span><br><span class=\"line\">-p 8080:8080                      将镜像的8080端口映射到服务器的8080端口(服务器端口：镜像端口)</span><br><span class=\"line\">-p 50000:50000                    基于 JNLP 的 Jenkins 代理通过 TCP 端口 50000 与 Jenkins master 进行通信,所以也要映射</span><br><span class=\"line\">-v /var/jenkins_home:/var/jenkins_home                /var/jenkins_home目录为jenkins工作目录，我们将硬盘上的一个目录挂载到这个位置，方便后续更新镜像后继续使用原来的工作目录。</span><br><span class=\"line\">-v /var/run/docker.sock:/var/run/docker.sock          jenkins容器内也需要docker来执行任务，所以这里将docker命令也映射到容器里</span><br><span class=\"line\">-v /usr/bin/docker:/usr/bin/docker                    将docker命令映射到容器内</span><br><span class=\"line\">-v /etc/localtime:/etc/localtime  让容器使用和服务器同样的时间设置。</span><br><span class=\"line\">--name myjenkins                  给容器起一个别名</span><br><span class=\"line\">docker.io/jenkins/jenkins         使用刚下载的镜像安装</span><br><span class=\"line\"><span class=\"meta\">#</span> reference</span><br><span class=\"line\"><span class=\"meta\">#</span> https://juejin.im/post/6844904035326099470</span><br><span class=\"line\"><span class=\"meta\">#</span> https://www.jenkins.io/doc/book/installing/</span><br></pre></td></tr></table></figure>\n<h3 id=\"Jenkins-config\"><a href=\"#Jenkins-config\" class=\"headerlink\" title=\"Jenkins config\"></a>Jenkins config</h3><h4 id=\"Initialize\"><a href=\"#Initialize\" class=\"headerlink\" title=\"Initialize\"></a>Initialize</h4><p>Open <a href=\"http://host:8080\">http://host:8080</a> and input initial password, then install recommended plugin.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> docker exec -it jenkins bash</span><br><span class=\"line\"><span class=\"meta\">$</span> cat /var/jenkins_home/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure>\n<p>When installing plugins is slow , change the Jenkins-&gt; Manage Jenkins -&gt; Manage plugins -&gt; Advanced -&gt; set Update Site URL as  <a href=\"http://mirror.esuni.jp/jenkins/updates/update-center.json\">http://mirror.esuni.jp/jenkins/updates/update-center.json</a></p>\n<h4 id=\"SSH\"><a href=\"#SSH\" class=\"headerlink\" title=\"SSH\"></a>SSH</h4><p>Config ssh key, in order to let jenkis pull code from git if needed.</p>\n<h4 id=\"Create-jenkins-item\"><a href=\"#Create-jenkins-item\" class=\"headerlink\" title=\"Create jenkins item\"></a>Create jenkins item</h4><ol>\n<li><p>Create a freestyle project</p>\n</li>\n<li><p>General -&gt; Select GitHub project and put the project url</p>\n</li>\n<li><p>Source Code Management -&gt; Select Git and put the project url</p>\n</li>\n<li><p>Build -&gt; Add build step -&gt; Esecute shell</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker build --tag playground:$BUILD_NUMBER .</span><br><span class=\"line\">docker stop playground &amp;&amp; docker rm playground</span><br><span class=\"line\">docker run -p 3000:3000 --name playground playground:$BUILD_NUMBER</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>Save and build the item</li>\n</ol>\n</li>\n</ol>\n<p>注意：不要使用默认源安装docker， 不要使用默认源安装docker， 不要使用默认源安装docker， 不然会遇到下面的error</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">jenkins /usr/bin/docker: 2: .: Can&apos;t open /etc/sysconfig/docker</span><br><span class=\"line\"></span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\">You don&apos;t have either docker-client or docker-client-latest installed. Please install either one and retry</span><br></pre></td></tr></table></figure>\n<p> if this <code>Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post</code> error occurs , run <code>chmod 777 /var/run/docker.sock</code></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}